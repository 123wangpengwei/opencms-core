<project name="OpenCms" default="compile" basedir=".">

    <property environment="env"/>

    <!-- The version-number ${version.number} is automatically set to the
    current date and time. For official builds this should be set to a proper
    value at the commandline.
    Set it like this: ant all -Dversion.number=4.3.28 -->

    <property name="version.name"               value="Ecaz"/>
    <property name="app.name"                   value="opencms"/>
    <property name="zip.home"                   value="../zip"/>
    <property name="pdf.home"                   value="../pdf"/>
    <property name="build.home"                 value="./build"/>
    
    <property name="build.classes"              value="${build.home}/classes"/>
    <property name="build.inputlib"             value="../ExternalComponents"/>
    <property name="build.web"                  value="${build.home}/${app.name}"/>
    <property name="build.webinf"               value="${build.web}/WEB-INF"/>
    <property name="build.metainf"              value="${build.web}/META-INF"/>
    <property name="build.lib"                  value="${build.webinf}/lib"/>
    <property name="build.oclib"                value="${build.webinf}/oclib"/>
    <property name="build.exclude.junit"        value="com/opencms/boot/CmsTest**,com/opencms/tests/**,com/opencms/core/CmsTest**"/>
    <property name="build.excludes"             value="${build.exclude.junit}"/>

    <property name="build.inputlib.servlet"     value="${build.inputlib}/servlet.jar"/>
    <property name="build.inputlib.activation"  value="${build.inputlib}/activation.jar"/>
    <property name="build.inputlib.mail"        value="${build.inputlib}/mail.jar"/>
    <property name="build.inputlib.xerces"      value="${build.inputlib}/xerces-1_4_4.jar"/>
    <property name="build.inputlib.mysql"       value="${build.inputlib}/mm.mysql-2.0.4-bin.jar"/>
    <property name="build.inputlib.fesi"        value="${build.inputlib}/fesi.jar"/>            
    <property name="build.inputlib.oracle"      value="${build.inputlib}/classes12.zip"/>
    <property name="build.inputlib.fop"         value="${build.inputlib}/fop_bin.jar"/>     
    <property name="build.inputlib.oro"         value="${build.inputlib}/jakarta-oro-2.0.6.jar"/>
    <property name="build.inputlib.tidy"        value="${build.inputlib}/Tidy.jar"/>
    
    <property name="build.version.propertyfile" value="${build.classes}/com/opencms/core/version.properties"/>
    <property name="build.version.jsfile"       value="${build.webinf}/ocsetup/vfs/system/workplace/templates/js/version.js"/>
    <property name="build.version.setupfile"    value="${build.web}/ocsetup/versions.txt"/>
    
    <property name="db.url"                     value="jdbc:mysql://localhost:3306/opencms"/>
    <property name="db.setupurl"                value="jdbc:mysql://localhost:3306/mysql"/>
    <property name="db.user"                    value="root"/>
    <property name="db.password"                value=""/>
    <property name="db.driver"                  value="org.gjt.mm.mysql.Driver"/>


    <target name="init" description="Checks if all needed libaries are available">
        <condition property="libsAvailable">
            <and>
                <available file="${build.inputlib.servlet}"/>
                <available file="${build.inputlib.activation}"/>
                <available file="${build.inputlib.mail}"/>
                <available file="${build.inputlib.xerces}"/>
                <available file="${build.inputlib.mysql}"/>
                <available file="${build.inputlib.fesi}"/>
                <available file="${build.inputlib.oro}"/>
                <available file="${build.inputlib.tidy}"/>
            </and>
        </condition>
        
        <property name="ex.oracle"      value="com/opencms/file/oracleplsql/**"/>
        <property name="ex.pdflaunch"   value="com/opencms/launcher/CmsPdfLauncher.java"/>
                
        <condition property="build.excludes" value="${build.excludes},${ex.oracle}">
            <not><available file="${build.inputlib.oracle}"/></not>
        </condition>        
        
        <condition property="build.excludes" value="${build.excludes},${ex.pdflaunch}">
            <not><available file="${build.inputlib.fop}"/></not>
        </condition>        
        
        <condition property="tomcat.home" value="${env.TOMCAT_HOME}">
            <available file="${env.TOMCAT_HOME}" type="dir"/>
        </condition>
        
        <condition property="tomcat.home" value="${env.CATALINA_HOME}">
            <available file="${env.CATALINA_HOME}" type="dir"/>
        </condition>
    </target>
    
    
    <target name="initmsg" depends="init" unless="libsAvailable" description="Stop target if required libaries are missing">
        <fail>
        
Error: Some of the required libaries are not available.

To comile OpenCms, you need the following libaries:
${build.inputlib.servlet}
${build.inputlib.activation}
${build.inputlib.mail}
${build.inputlib.xerces}
${build.inputlib.mysql}
${build.inputlib.fesi}
${build.inputlib.oro}
${build.inputlib.tidy}

        </fail>
    </target>


    <target name="prepare" depends="initmsg" description="Create output directories">
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.home}"/>
        <mkdir dir="${build.lib}"/>
        <mkdir dir="${build.oclib}"/>
        <mkdir dir="${zip.home}"/>
        <mkdir dir="${pdf.home}"/>        
    </target>


    <target name="clean" description="Delete existing ouput directories">
        <delete dir="${build.home}"/>
    </target>


    <target name="compileclasses" depends="prepare" if="libsAvailable" description="Compiles all OpenCms classes">
       <javac
            srcdir="src"
            destdir="${build.classes}"
            excludes="${build.excludes}"
            classpath=" ${build.inputlib.servlet}:
                        ${build.inputlib.activation}:
                        ${build.inputlib.mail}:
                        ${build.inputlib.xerces}:
                        ${build.inputlib.oracle}:
                        ${build.inputlib.mysql}:
                        ${build.inputlib.fop}:
                        ${build.inputlib.oro}:
                        ${build.inputlib.tidy}:
                        ${build.inputlib.fesi}"
            debug="on"
            optimize="on"
            deprecation="off"
            />

       <copy todir="${build.classes}">
            <fileset dir="src" includes="**/*.properties,**/*.txt"/>
       </copy>
       <!-- generate version infos-->
        <tstamp>
            <format property="timestamp" pattern="yyyy-MM-dd-HH-mm"/>
        </tstamp>
        <property name="version.number" value="${env.USERNAME}_${timestamp}"/>
        <echo file="${build.version.propertyfile}">version.number=${version.number}
</echo>
        <echo file="${build.version.propertyfile}" append="on">version.name=${version.name}</echo>
    </target>
    

    <target name="compiletests" depends="compileclasses" description="Compiles all OpenCms JUnit tests">
       <javac
            srcdir="src"
            destdir="${build.classes}"
            includes="com/opencms/boot/CmsTest**,com/opencms/tests/**,com/opencms/core/CmsTest**"
            classpath=" ${build.inputlib.servlet}:
                        ${build.inputlib.activation}:
                        ${build.inputlib.mail}:
                        ${build.inputlib.xerces}:
                        ${build.inputlib.oracle}:
                        ${build.inputlib.mysql}:
                        ${build.inputlib.fop}:
                        ${build.inputlib.oro}:
                        ${build.inputlib.tidy}:
                        ${build.inputlib.fesi}"
            debug="on"
            optimize="on"
            deprecation="off"
            />

    </target>



    <target name="jar" depends="compileclasses" description="Generate OpenCms JARs">
        <jar
            jarfile="${build.lib}/opencmsboot.jar"
            basedir="${build.classes}"
            includes="com/opencms/boot/**,source/**"
            manifest="${build.classes}/mainClass.txt"
            />

        <jar
            jarfile="${build.oclib}/opencms.jar"
            basedir="${build.classes}"
            includes="com/opencms/**"
            excludes="com/opencms/build/**"
            />
    </target>


    <target name="copy" depends="jar" description="Creates WAR file structure and copies needed files to it">
       <copy todir="${build.home}">
            <fileset dir="." includes="*.*" excludes="build.xml"/>
       </copy>

       <copy file="${build.inputlib.xerces}" todir="${build.oclib}"/>
       <copy file="${build.inputlib.mysql}" todir="${build.oclib}"/>
       <copy file="${build.inputlib.mysql}" todir="${build.lib}"/>
       <copy file="${build.inputlib.activation}" todir="${build.oclib}"/>
       <copy file="${build.inputlib.mail}" todir="${build.oclib}"/>
       <copy file="${build.inputlib.fesi}" todir="${build.oclib}"/>
       <copy file="${build.inputlib.oro}" todir="${build.oclib}"/>
       <copy file="${build.inputlib.tidy}" todir="${build.oclib}"/>

       <copy todir="${build.webinf}">
            <fileset dir="etc" excludes="*/CVS/*,MANIFEST.MF"/>
       </copy>

       <copy file="etc/MANIFEST.MF" todir="${build.metainf}"/>

       <copy todir="${build.web}">
            <fileset dir="web" excludes="*/CVS/*"/>
       </copy>

       <!-- create version-info for the workplace-->
       <echo file="${build.version.jsfile}">var version = '${version.number} ${version.name}';</echo>
       <!-- create version-info for the setup versions.txt -->
       <echo file="${build.version.setupfile}" append="on">OpenCms ${version.number}
</echo>
    </target>
    

    <target name="war" depends="copy" description="Builds the opencms.war">
        <zip zipfile="${build.home}/${app.name}.war">
            <zipfileset dir="${build.web}/META-INF" prefix="META-INF"/>
            <zipfileset dir="${build.web}/WEB-INF" prefix="WEB-INF"/>
            <zipfileset dir="${build.web}/ocsetup" prefix="ocsetup"/>
            <zipfileset dir="${build.web}/export" prefix="export"/>
        </zip>
    </target>
    

    <target name="zip" depends="war" description="Creates a distribution ZIP">
        <zip
            zipfile="${zip.home}/opencms_${version.number}_current.zip"
            basedir="${build.home}"
            excludes="**/classes/,**/opencms/" />
    </target>


    <target name="all" depends="clean,zip" description="Build from scratch and create distribution ZIP"/>


    <target name="compile" depends="copy" description="Default compile target"/>


    <target name="tomcat.clean" depends="prepare" description="Delete existing Tomcat webapps directory and opencms.war">
        <delete file="${tomcat.home}/webapps/${app.name}.war"/>
        <delete dir= "${tomcat.home}/webapps/${app.name}"/>
    </target>


    <target name="tomcat.dist" depends="copy" description="Direct install in Tomcat webapps directory">
        <copy todir="${tomcat.home}/webapps/${app.name}">
            <fileset dir="${build.web}"/>
        </copy>
        <copy file="etc/web.xml" todir="${tomcat.home}/webapps/${app.name}/WEB-INF"/>

        <property name="copy.files" value="${build.inputlib.activation}"/>
        <available property="copy.files" file="${build.inputlib.oracle}" value="${build.inputlib.oracle}"/>     
        
        <copy file="${copy.files}" todir="${tomcat.home}/webapps/${app.name}/WEB-INF/oclib"/>
        
        <copy todir="${tomcat.home}/webapps/${app.name}/pics">
            <fileset dir="${build.webinf}/ocsetup/vfs/pics"/>
        </copy>
    </target>


    <target name="setup" depends="tomcat.dist" description="Creates a new OC version and imports all workplace files">
        <sql
            classpath="${build.inputlib.mysql}"
            driver="${db.driver}"
            url="${db.setupurl}"
            userid="${db.user}"
            password="${db.password}"
            autocommit="true"
            onerror="continue">
            drop database opencms;
            create database opencms;
        </sql>
        <sql
            classpath="${build.inputlib.mysql}"
            driver="${db.driver}"
            url="${db.url}"
            userid="${db.user}"
            password="${db.password}"
            autocommit="true"
            onerror="continue"
            src="${build.webinf}/ocsetup/mysql.sql"
            />
        <java
            classname="com.opencms.boot.CmsMain"
            classpath="${tomcat.home}/webapps/${app.name}/WEB-INF/lib/opencmsboot.jar"
            dir="${tomcat.home}/webapps/${app.name}/WEB-INF"
            fork="true">
            <arg value="-script=ocsetup/cmssetup.txt" />
            <jvmarg value="-Dfile.encoding=ISO8859_1"/> 
        </java>
    </target>


    <target name="tomcat.cleandist" depends="clean,tomcat.clean,tomcat.dist" description="Do complete recompile and install in Tomcat webapps directory"/>


    <target name="cvs.update" description="Update from CVS">
        <cvs command="update"/>
    </target>
    
    
    <target name="tex.clean" description="Clean up TeX directories">
        <delete>
            <fileset dir="doc/documentation" includes="*.aux,*.toc,*.ind,*.ilg,*.idx"/>
        </delete>        
    </target>
    
    
    <target name="tex" depends="prepare" description="Creates the documentation from the TeX sources">
        <exec dir="doc/documentation" executable="pdflatex">
          <arg line="OpenCmsDoc"/>
        </exec>
        <exec dir="doc/documentation" executable="makeindex">
          <arg line="OpenCmsDoc"/>
        </exec>
        <exec dir="doc/documentation" executable="pdflatex">
          <arg line="OpenCmsDoc"/>
        </exec>
        <tstamp>
            <format property="timestamp" pattern="yyyyMMdd"/>
        </tstamp>
        <move file="doc/documentation/OpenCmsDoc.pdf" tofile="${pdf.home}/OpenCmsDoc${timestamp}.pdf">        
        </move>
        <move file="doc/documentation/OpenCmsDoc.log" tofile="${pdf.home}/OpenCmsDoc${timestamp}.log">        
        </move>
    </target>
    
    
    <target name="srcdist" depends="clean" description="Creates a source distribution ZIP including the required libaries">
        <property name="build.srcdist"              value="${build.home}/srcdist"/>
        <property name="build.srcdist.main"         value="${build.srcdist}/opencms"/>
        <property name="build.srcdist.src"          value="${build.srcdist.main}/src"/>
        <property name="build.srcdist.etc"          value="${build.srcdist.main}/etc"/>
        <property name="build.srcdist.web"          value="${build.srcdist.main}/web"/>
        <property name="build.srcdist.libs"         value="${build.srcdist}/ExternalComponents"/>
        
        <mkdir dir="${build.srcdist}"/>     
        <mkdir dir="${build.srcdist.main}"/>     
        <mkdir dir="${build.srcdist.src}"/>     
        <mkdir dir="${build.srcdist.libs}"/>        
        <mkdir dir="${build.srcdist.etc}"/>     
        <mkdir dir="${build.srcdist.web}"/>        
        <mkdir dir="${zip.home}"/>        

        <copy file="${build.inputlib.servlet}"      todir="${build.srcdist.libs}"/>
        <copy file="${build.inputlib.xerces}"       todir="${build.srcdist.libs}"/>
        <copy file="${build.inputlib.mysql}"        todir="${build.srcdist.libs}"/>
        <copy file="${build.inputlib.activation}"   todir="${build.srcdist.libs}"/>
        <copy file="${build.inputlib.mail}"         todir="${build.srcdist.libs}"/>
        <copy file="${build.inputlib.fesi}"         todir="${build.srcdist.libs}"/>
        <copy file="${build.inputlib.oro}"          todir="${build.srcdist.libs}"/>
        <copy file="${build.inputlib.tidy}"         todir="${build.srcdist.libs}"/>

        <copy todir="${build.srcdist.src}">
            <fileset dir="src" excludes="*/CVS/*"/>
        </copy>
        
        <copy todir="${build.srcdist.etc}">
            <fileset dir="etc" excludes="*/CVS/*"/>
        </copy>

        <copy todir="${build.srcdist.web}">
            <fileset dir="web" excludes="*/CVS/*"/>
        </copy>         

        <copy todir="${build.srcdist.main}">
            <fileset dir="." includes="*.*" excludes="*/CVS/*"/>
        </copy>

        <tstamp>
            <format property="timestamp" pattern="yyyy-MM-dd-HH-mm"/>
        </tstamp>
        <property name="version.number" value="${env.USERNAME}_${timestamp}"/>
        
        <zip
            zipfile="${zip.home}/opencms_src_${version.number}.zip"
            basedir="${build.srcdist}"/>
    </target>

    <target name="test-user" depends="compiletests,jar" description="Performs a unit test of all OpenCms classes concerning user management">  <!-- wieder einfuegen: depends="compiletests,setup"> -->
        <junit haltonfailure="no">
            <sysproperty key="build.webinf" value="${build.webinf}"/>
            <classpath>
                <pathelement location="." />
                <pathelement location="build/opencms/WEB-INF/oclib/activation.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/fesi.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/jakarta-oro-2.0.6.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/mail.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/mm.mysql-2.0.4-bin.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/opencms.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/Tidys.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/xerces-1_4_4.jar" />
                <pathelement location="build/opencms/WEB-INF/lib/opencmsboot.jar" />
            </classpath>

            <formatter type="brief"/>
            <test name="com.opencms.tests.CmsTestUser" todir="../junit-report"/>
        </junit>
    </target> 

    <target name="test-resources" depends="compiletests,jar" description="Performs a unit test of all OpenCms classes concerning resources">  <!-- wieder einfuegen: depends="setup"> -->
        <junit haltonfailure="no">
            <sysproperty key="build.webinf" value="${build.webinf}"/>
            <classpath>
                <pathelement location="." />
                <pathelement location="build/opencms/WEB-INF/oclib/activation.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/fesi.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/jakarta-oro-2.0.6.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/mail.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/mm.mysql-2.0.4-bin.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/opencms.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/Tidys.jar" />
                <pathelement location="build/opencms/WEB-INF/oclib/xerces-1_4_4.jar" />
                <pathelement location="build/opencms/WEB-INF/lib/opencmsboot.jar" />
            </classpath>

            <formatter type="brief"/>
            <test name="com.opencms.tests.CmsTestResources" todir="../junit-report"/>
        </junit>
    </target> 

    <target name="test-all" description="Performs ALL OpenCms JUnit tests." depends="test-user,test-resources"/>

</project>