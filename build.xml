<?xml version="1.0" encoding="UTF-8"?>

<project name="OpenCms" default="compile" basedir=".">

    <property name="version.number"             		value="6.0 beta 1" />    
    <property name="version.name"               		value="Corrin" />
    
	<property name="app.name" 							value="opencms" />
    
    <property name="opencms.input" 						location="${basedir}" />
    <property name="opencms.output"						location="${basedir}/../" />    	

    <property name="opencms.output.classes"             location="${opencms.output}/build/classes-core" />
    <property name="opencms.output.tests"               location="${opencms.output}/build/test" />
    <property name="opencms.output.jars"                location="${opencms.output}/build/jars-core" />
    <property name="opencms.output.warfiles"            location="${opencms.output}/build/${app.name}" />
    <property name="opencms.output.distfiles"           location="${opencms.output}/zip" />    

    <property name="opencms.input.warfiles"            	location="${opencms.input}/webapp" />
    <property name="opencms.input.libs" 				location="${opencms.input.warfiles}/WEB-INF/lib" />
    <property name="opencms.input.externlibs" 			location="${opencms.output}/lib" />
    <property name="opencms.input.defaultconfiguration" location="${opencms.input.warfiles}/WEB-INF/config/opencms.properties" />
    <property name="opencms.input.default.registry"		location="${opencms.input.warfiles}/WEB-INF/config/registry.xml" />
    <property name="opencms.input.default.config"		location="${opencms.input.warfiles}/WEB-INF/config/opencms.xml" />
    <property name="opencms.input.default.system"		location="${opencms.input.warfiles}/WEB-INF/config/opencms-system.xml" />
        
    <property name="opencms.inputlib.servlet"     		location="${opencms.input.libs}/servlet.jar" />
    <property name="opencms.inputlib.activation"  		location="${opencms.input.libs}/activation.jar" />
    <property name="opencms.inputlib.mail"        		location="${opencms.input.libs}/mail.jar" />
    <property name="opencms.inputlib.xerces"      		location="${opencms.input.libs}/xercesImpl-2.6.2.jar" />
    <property name="opencms.inputlib.xml-apis"      	location="${opencms.input.libs}/xml-apis-2.6.2.jar" />
    <property name="opencms.inputlib.mysql"       		location="${opencms.input.libs}/mysql-connector-java-3.0.15-ga-bin.jar" />
    <property name="opencms.inputlib.postgresql"       	location="${opencms.input.libs}/pg74.215.jdbc3.jar" />
    <property name="opencms.inputlib.oro"         		location="${opencms.input.libs}/jakarta-oro-2.0.8.jar" />
    <property name="opencms.inputlib.tidy"        		location="${opencms.input.libs}/jtidy-r8-05102004.jar" />
    <property name="opencms.inputlib.uuid"        		location="${opencms.input.libs}/jug-1.1.2.jar" />   
    <property name="opencms.inputlib.codec"        		location="${opencms.input.libs}/commons-codec-1.3.jar" />
    <property name="opencms.inputlib.email"        		location="${opencms.input.libs}/commons-email-1.0-mod.jar" />
    <property name="opencms.inputlib.dbcp"        		location="${opencms.input.libs}/commons-dbcp-1.2.1.jar" />
    <property name="opencms.inputlib.digester"        	location="${opencms.input.libs}/commons-digester-1.6.jar" />
    <property name="opencms.inputlib.pool"        		location="${opencms.input.libs}/commons-pool-1.2.jar" />    
    <property name="opencms.inputlib.logging"     		location="${opencms.input.libs}/commons-logging-1.0.4.jar" /> 
    <property name="opencms.inputlib.collections"     	location="${opencms.input.libs}/commons-collections-3.1.jar" />
    <property name="opencms.inputlib.fileupload"   		location="${opencms.input.libs}/commons-fileupload-1.0.jar" />
    <property name="opencms.inputlib.httpclient"   		location="${opencms.input.libs}/commons-httpclient-2.0.2.jar" />
    <property name="opencms.inputlib.beanutils"   		location="${opencms.input.libs}/commons-beanutils-1.7.0.jar" />
    <property name="opencms.inputlib.log4j"     		location="${opencms.input.libs}/log4j-1.2.8.jar" /> 
    <property name="opencms.inputlib.dom4j"     		location="${opencms.input.libs}/dom4j-1.5.2.jar" />
    <property name="opencms.inputlib.quartz"     		location="${opencms.input.libs}/quartz-1.4.4.jar" />
    <property name="opencms.inputlib.jaxen"     		location="${opencms.input.libs}/jaxen-1.1-beta-4.jar" />
    <property name="opencms.inputlib.htmlparser"		location="${opencms.input.libs}/htmlparser-1.41.jar" />
    <property name="opencms.inputlib.lucene"			location="${opencms.input.libs}/lucene-1.4.3.jar" />
    <property name="opencms.inputlib.poi"				location="${opencms.input.libs}/poi-2.5.1-final-20040804.jar" />
    <property name="opencms.inputlib.snowball"			location="${opencms.input.libs}/snowball-1.0.jar" />
    <property name="opencms.inputlib.pdfbox"			location="${opencms.input.libs}/PDFBox-0.7.0.jar" />
    <property name="opencms.inputlib.textextraction"	location="${opencms.input.libs}/tm-extractors-0.4.jar" />
    <property name="opencms.inputlib.junit"      		location="${opencms.input.libs}/junit-3-8-1.jar" /> 
    <property name="opencms.inputlib.oracle"      		location="${opencms.input.externlibs}/ojdbc14.jar" /> 
 
	<property name="drivers.vfs"						value="db" />
	<property name="drivers.project"					value="db" />
	<property name="drivers.user"						value="db" />
	<property name="drivers.workflow"					value="db" />
	<property name="drivers.backup"						value="db" />
	<property name="drivers.configuration"				value="" />
	<property name="registry.configuration"				value="" />
	<property name="opencms.configuration"				value="" />
	<property name="system.runtimeinfo"					value="org.opencms.db.CmsDbContextFactory" />

    <property name="excludes"                   		value="**/CVS/*,**/.nbattrs,**/.project,**/.classpath" />
    
    <property environment="env" />

 	<taskdef resource="net/sf/antcontrib/antlib.xml">
	  <classpath>
	    <pathelement location="${opencms.input.libs}/ant-contrib-1.0b1.jar"/>
	  </classpath>
	</taskdef>
	
    <target name="init" 
    	description="Checks if all required libraries are available">
    	
        <condition property="libsAvailable">
            <and>
                <available file="${opencms.inputlib.servlet}"/>
                <available file="${opencms.inputlib.activation}"/>
                <available file="${opencms.inputlib.mail}"/>
                <available file="${opencms.inputlib.xerces}"/>
                <available file="${opencms.inputlib.xml-apis}"/>
                <available file="${opencms.inputlib.mysql}"/>
                <available file="${opencms.inputlib.postgresql}"/>
                <available file="${opencms.inputlib.oro}"/>
                <available file="${opencms.inputlib.tidy}"/>
                <available file="${opencms.inputlib.uuid}"/>                
                <available file="${opencms.inputlib.pool}"/> 
                <available file="${opencms.inputlib.codec}"/>
                <available file="${opencms.inputlib.email}"/>
                <available file="${opencms.inputlib.dbcp}"/>
                <available file="${opencms.inputlib.digester}"/>
                <available file="${opencms.inputlib.logging}"/>
                <available file="${opencms.inputlib.collections}"/> 
                <available file="${opencms.inputlib.fileupload}"/>
                <available file="${opencms.inputlib.httpclient}"/>
                <available file="${opencms.inputlib.dom4j}"/> 
                <available file="${opencms.inputlib.quartz}"/> 
                <available file="${opencms.inputlib.log4j}"/> 
                <available file="${opencms.inputlib.htmlparser}"/>
                <available file="${opencms.inputlib.lucene}"/>
                <available file="${opencms.inputlib.poi}"/>
                <available file="${opencms.inputlib.snowball}"/>
                <available file="${opencms.inputlib.pdfbox}"/> 
                <available file="${opencms.inputlib.textextraction}"/> 
            </and>            
        </condition>

        <condition property="build.excludes" value="org/opencms/db/oracle/**">
            <not>
            	<available file="${opencms.inputlib.oracle}"/>
            </not>
        </condition>           
        
        <condition property="build.excludes" value="">
            <or>
            	<available file="${opencms.inputlib.oracle}"/>
           	</or>
        </condition> 
        
        <condition property="tomcat.home" value="${env.TOMCAT_HOME}">
            <available file="${env.TOMCAT_HOME}" type="dir"/>
        </condition>

        <condition property="tomcat.home" value="${env.CATALINA_HOME}">
            <available file="${env.CATALINA_HOME}" type="dir"/>
        </condition>
    
        <tstamp>
            <format property="timestamp" pattern="yyyy.MM.dd-HH.mm"/>
        </tstamp>
        <property name="version.number" value="${env.USERNAME}_${timestamp}"/>
        
        <echo message="Building OpenCms ${version.number} (${version.name})" />
        <echo message=" " />
        <echo message="OpenCms input directory is: ${opencms.input}" />
        <echo message="OpenCms output directory is: ${opencms.output}" />
        <echo message="Java version detected: ${ant.java.version}"/>
        <echo message="Java home is: ${env.JAVA_HOME}"/>
    	<echo message="Tomcat home is: ${tomcat.home}" />        
        <echo message="Excluding from build: ${build.excludes}" />
    </target>
    
    
    <target name="checklibs" 
    	depends="init" unless="libsAvailable" description="Stop target if libraries required for compilation are missing">
    	
        <fail>
        
Error: Some of the required libraries are not available.

To compile OpenCms, you need the following libaries:
${opencms.inputlib.servlet}
${opencms.inputlib.activation}
${opencms.inputlib.mail}
${opencms.inputlib.xerces}
${opencms.inputlib.xml-apis}
${opencms.inputlib.mysql}
${opencms.inputlib.postgresql}
${opencms.inputlib.oro}
${opencms.inputlib.tidy}
${opencms.inputlib.uuid}
${opencms.inputlib.pool}
${opencms.inputlib.codec}
${opencms.inputlib.email}
${opencms.inputlib.dbcp}
${opencms.inputlib.digester}
${opencms.inputlib.logging}
${opencms.inputlib.collections}
${opencms.inputlib.fileupload}
${opencms.inputlib.httpclient}
${opencms.inputlib.dom4j}
${opencms.inputlib.quartz}
${opencms.inputlib.log4j}
${opencms.inputlib.htmlparser}
${opencms.inputlib.lucene}
${opencms.inputlib.poi}
${opencms.inputlib.snowball}
${opencms.inputlib.pdfbox}
${opencms.inputlib.textextraction}

        </fail>
    </target>


    <target name="clean" 
    	description="Delete existing ouput directories">
    	
        <delete dir="${opencms.output.classes}" />
        <delete dir="${opencms.output.tests}" />
        <delete dir="${opencms.output.jars}" />
        <delete dir="${opencms.output.warfiles}" />
        <delete dir="${opencms.output}/build" />
        <delete dir="${opencms.output.distfiles}" />
    </target>
    
    		
    <target name="compile" 
    	depends="checklibs" if="libsAvailable" description="Compile the OpenCms classes">
    	
        <mkdir dir="${opencms.output.classes}" />    	
    	
        <uptodate property="classesUpToDate" targetfile="${opencms.output.jars}/opencms.jar">
        	<srcfiles dir= "${opencms.input}/src" includes="**/*.java" excludes="${build.excludes},${excludes}"/>
        	<srcfiles dir= "${opencms.input}/src" includes="**/*.properties,**/*.txt,**/*.xml,**/*.xsd,**/*.dtd" excludes="${excludes}" />
        </uptodate>
            	
       	<javac
            srcdir="${opencms.input}/src"
            destdir="${opencms.output.classes}"
            excludes="${build.excludes}"
            classpath="${opencms.inputlib.servlet}:
                       ${opencms.inputlib.activation}:
                       ${opencms.inputlib.mail}:
                       ${opencms.inputlib.xerces}:
                       ${opencms.inputlib.xml-apis}:
                       ${opencms.inputlib.oracle}:
                       ${opencms.inputlib.mysql}:
                       ${opencms.inputlib.postgresql}:
                       ${opencms.inputlib.oro}:
                       ${opencms.inputlib.tidy}:
                       ${opencms.inputlib.codec}:
                       ${opencms.inputlib.email}:
                       ${opencms.inputlib.dbcp}:
                       ${opencms.inputlib.pool}:
                       ${opencms.inputlib.digester}:
                       ${opencms.inputlib.logging}:
                       ${opencms.inputlib.collections}:
                       ${opencms.inputlib.fileupload}:
                       ${opencms.inputlib.httpclient}:
                       ${opencms.inputlib.dom4j}:
                       ${opencms.inputlib.quartz}:
                       ${opencms.inputlib.log4j}:
                       ${opencms.inputlib.htmlparser}:
                       ${opencms.inputlib.uuid}:
                       ${opencms.inputlib.lucene}:
                       ${opencms.inputlib.poi}:
                       ${opencms.inputlib.snowball}:
                       ${opencms.inputlib.textextraction}:
                       ${opencms.inputlib.pdfbox}"
            debug="on"
            optimize="on"
            deprecation="on">
       	</javac>
		
        <copy todir="${opencms.output.classes}">
            <fileset dir="${opencms.input}/src" includes="**/*.properties,**/*.txt,**/*.xml,**/*.xsd,**/*.dtd" excludes="${excludes}"/>
        </copy>              
                
        <antcall target="versioninfo" />        
    </target>

    
    <target name="versioninfo" 
    	unless="classesUpToDate" description="Generate version information files">

		<copy 
			file="${opencms.input.warfiles}/WEB-INF/setupdata/version.properties" 
			tofile="${opencms.output.classes}/com/opencms/core/version.properties" overwrite="true">			
    		<filterset>
      			<filter token="OPENCMS_VERSION_NUMBER" value="${version.number}"/>
      			<filter token="OPENCMS_VERSION_NAME" value="${version.name}"/>
    		</filterset>			
		</copy>		
      				    	
		<copy 
			file="${opencms.input.warfiles}/WEB-INF/setupdata/vfs/system/login/version.js" 
			tofile="${opencms.output.classes}/version.js" overwrite="true">			
    		<filterset>
      			<filter token="OPENCMS_VERSION" value="${version.number} ${version.name}"/>
    		</filterset>			
		</copy>

		<copy 
			file="${opencms.input.warfiles}/setup/versions.txt" 
			tofile="${opencms.output.classes}/versions.txt" overwrite="true">			
    		<filterset>
      			<filter token="OPENCMS_VERSION" value="OpenCms ${version.number}"/>
    		</filterset>			
		</copy>
    	
		<copy 
			file="${opencms.input.warfiles}/setup/license.html" 
			tofile="${opencms.output.classes}/license.html" overwrite="true">			
    		<filterset>
      			<filter token="OPENCMS_VERSION_NUMBER" value="${version.number}"/>
      			<filter token="OPENCMS_VERSION_NAME" value="${version.name}"/>
    		</filterset>			
		</copy>    	
       	
	   	<copy 
	   		file="${opencms.input.defaultconfiguration}" 
	   		tofile="${opencms.output.classes}/opencms.properties" overwrite="true">	   		
    		<filterset>
      			<filter token="DRIVERS_VFS" value="${drivers.vfs}"/>
      			<filter token="DRIVERS_PROJECT" value="${drivers.project}"/>
      			<filter token="DRIVERS_USER" value="${drivers.user}"/>
      			<filter token="DRIVERS_WORKFLOW" value="${drivers.workflow}"/>
      			<filter token="DRIVERS_BACKUP" value="${drivers.backup}"/>
      			<filter token="DRIVERS_CONFIGURATION" value="${drivers.configuration}"/>
    		</filterset>	   		
	   	</copy>       	  
    	
	   	<copy 
	   		file="${opencms.input.default.config}" 
	   		tofile="${opencms.output.classes}/opencms.xml" overwrite="true">	   		
    		<filterset>
      			<filter token="OPENCMS_CONFIGURATION" value="${opencms.configuration}"/>
    		</filterset>	   		
	   	</copy>	   		   	

	   	<copy 
	   		file="${opencms.input.default.system}" 
	   		tofile="${opencms.output.classes}/opencms-system.xml" overwrite="true">	   		
    		<filterset>
      			<filter token="RUNTIME_INFO" value="${system.runtimeinfo}"/>
    		</filterset>	   		
	   	</copy>	   		   	
	</target>
    		    

    <target name="jar-legacy" 
    	depends="compile" description="Generate the legacy OpenCms .jar files">
    	
        <mkdir dir="${opencms.output.jars}" />
            	
        <jar
            jarfile="${opencms.output.jars}/opencms-legacy.jar"
            basedir="${opencms.output.classes}"
            includes="com/opencms/**"
            excludes="com/opencms/build/**,org/opencms/**" >      
        </jar>        	            
    </target>
    
        		    
    <target name="jar" 
    	depends="jar-legacy, compile" description="Generate the OpenCms .jar files">
    	
        <mkdir dir="${opencms.output.jars}" />
            	
        <jar
            jarfile="${opencms.output.jars}/opencms.jar"
            basedir="${opencms.output.classes}"
            includes="org/opencms/**"
            excludes="com/opencms/build/**,com/opencms/**" >      
            <metainf dir="${opencms.input.warfiles}/WEB-INF" includes="opencms.tld"/>
        </jar>        	            
    </target>
    

    <target name="war" 
    	depends="jar" description="Builds the opencms.war">
        
        <war 
        	destfile="${opencms.output}/build/${app.name}.war" 
        	webxml="${opencms.input.warfiles}/WEB-INF/web.xml"
        	manifest="${opencms.input.warfiles}/META-INF/MANIFEST.MF">
        	     		
       		<lib dir="${opencms.output.jars}">
       			<include name="*.jar" />
       		</lib>
       		<lib dir="${opencms.input.libs}">
       			<exclude name="servlet.jar" />
       			<exclude name="junit.jar" />
       			<exclude name="${libexcludes1}" />
       			<exclude name="${libexcludes2}" />
       			<exclude name="${libexcludes3}" />
       			<exclude name="${excludes}" />       			
       		</lib>     		
       		<fileset dir="${opencms.input.warfiles}">       		
       			<exclude name="WEB-INF/web.xml" />
       			<exclude name="WEB-INF/lib/*" />
       			<exclude name="WEB-INF/config/opencms.properties" />
       			<exclude name="WEB-INF/config/opencms-system.xml" />
       			<exclude name="WEB-INF/config/registry.xml" />
       			<exclude name="WEB-INF/setupdata/vfs/system/login/version.js" />
       			<exclude name="setup/versions.txt" />
       			<exclude name="setup/license.html" />
       			<exclude name="build.xml,.*,${excludes}" />
       		</fileset>
  			<zipfileset dir="${opencms.output.classes}" prefix="WEB-INF/config" includes="opencms.properties" />
  			<zipfileset dir="${opencms.output.classes}" prefix="WEB-INF/config" includes="opencms-system.xml" />
  			<zipfileset dir="${opencms.output.classes}" prefix="WEB-INF/config" includes="registry.xml" />  			
  			<zipfileset dir="${opencms.output.classes}" prefix="WEB-INF/setupdata/vfs/system/login" includes="version.js" />
  			<zipfileset dir="${opencms.output.classes}" prefix="setup" includes="versions.txt" />
			<zipfileset dir="${opencms.output.classes}" prefix="setup" includes="license.html" />
        </war>        
    </target>
    

    <target name="tomcat.copy" 
    	description="Copy updated files to Tomcat directorys">

       	<copy todir="${tomcat.home}/webapps/${app.name}/WEB-INF/lib">
            <fileset dir="${opencms.input.libs}">
                <include name="**/*.jar"/>
                <include name="**/*.zip"/>
                <exclude name="**/servlet.jar"/>
                <exclude name="**/junit.jar"/>
                <exclude name="${excludes}" />
            </fileset>
        </copy>    	
        <copy todir="${tomcat.home}/webapps/${app.name}/WEB-INF/lib">
            <fileset dir="${opencms.output.jars}">
                <include name="*.jar"/>
                <include name="*.zip"/>
                <exclude name="**/servlet.jar"/>
                <exclude name="**/junit.jar"/>
                <exclude name="${excludes}" />
            </fileset>
        </copy>     
        <copy file="${opencms.input.warfiles}/WEB-INF/web.xml" todir="${tomcat.home}/webapps/${app.name}/WEB-INF"/>
        <copy file="${opencms.input.warfiles}/WEB-INF/opencms.tld" todir="${tomcat.home}/webapps/${app.name}/WEB-INF"/>       
    </target>     
    
    
    <target name="tomcat.update" 
    	depends="jar, tomcat.copy" description="Recompile changed classes and install in Tomcat webapps directory"/>      


    <target name="tomcat.all" 
    	depends="clean, tomcat.update" description="Do a complete recompile of all classes and install in Tomcat webapps directory"/>              
    
    
    <target name="bindist" 
    	depends="clean" description="Creates a binary distribution ZIP, including the templateone demopages">
    	
    	<!-- read list of all available modules -->
    	<property file="${opencms.input}/modules/all-modules.properties" />
    	
    	<!-- remove org.opencms.frontend.templateone.modules -->
    	<var name="modules.common.selection" value="" />
    	<for list="${modules.common.all}" param="module" trim="yes">
    		<sequential>
    	    	<if>
    				<not>
    		    		<equals arg1="@{module}" arg2="org.opencms.frontend.templateone.modules" />
    				</not>
    				<then>
    					<if>
    						<equals arg1="${modules.common.selection}" arg2="" />
    						<then>
		    			    	<var name="modules.common.selection" value="@{module}" />
    						</then>
    						<else>
		    			    	<var name="modules.common.selection" value="${modules.common.selection},@{module}" />
    						</else>
    					</if>
    				</then>
    	    	</if>
      	    </sequential>
      	</for>
    	
    	<!-- build war with selected modules -->
	  	<ant antfile="${opencms.input}/modules/build.xml" target="war" inheritAll="false" >
	  		<property name="modules.common.selection" value="${modules.common.selection}" />
	  		<property name="modules.selection.mode" value="selection" />
	  		<property name="app.name" value="${app.name}" />
	  	</ant>    	
    	
    	<!-- build distro -->
        <mkdir dir="${opencms.output.distfiles}" />                    
    	
        <zip destfile="${opencms.output.distfiles}/opencms_${version.number}.zip">
            <zipfileset dir="${opencms.output}/build" includes="${app.name}.war"/>
            <zipfileset dir="${opencms.input}" includes="install.html,license.txt,history.txt"/>
        </zip>

    </target>    
    
    <target name="srcdist" 
    	description="Creates a source distribution ZIP">
    	
        <tstamp>
            <format property="timestamp" pattern="yyyy-MM-dd-HH-mm"/>
        </tstamp>
        <property name="version.number" value="${env.USERNAME}_${timestamp}_current"/>
        
        <echo message="Building OpenCms ${version.number} (${version.name})  source distribution " />
        <echo message=" " />
        <echo message="OpenCms input directory is: ${opencms.input}" />
        <echo message="OpenCms output directory is: ${opencms.output}" />
		
        <mkdir dir="${opencms.output.distfiles}" />                    
		
        <zip destfile="${opencms.output.distfiles}/opencms_src_${version.number}.zip">
        	<zipfileset dir="${opencms.input}/src" excludes="${excludes}" prefix="src" />
        	<zipfileset dir="${opencms.input}/src-modules" excludes="${excludes}" prefix="src-modules" />
        	<zipfileset dir="${opencms.input}/src-components" excludes="${excludes}" prefix="src-components" />
            <zipfileset dir="${opencms.input}/test" excludes="${excludes}" prefix="test" />
            <zipfileset dir="${opencms.input.warfiles}" excludes="${excludes}" prefix="webapp" />
            <zipfileset dir="${opencms.input}" includes="build.xml,install.html,license.txt,history.txt"/>
        </zip>
    </target>
		
    <target name="compile-tests" 
    	depends="jar" if="libsAvailable" description="Compile the OpenCms test classes">
    	
        <mkdir dir="${opencms.output.tests}" />    	
    	
        <uptodate property="classesUpToDate" targetfile="${opencms.output.jars}/opencms-tests.jar">
        	<srcfiles dir= "${opencms.input}/test" includes="**/*.java" excludes="${build.excludes},${excludes},**/data/**"/>
        	<srcfiles dir= "${opencms.input}/test" includes="**/*.properties,**/*.txt,**/*.xml,**/*.xsd,**/*.dtd" excludes="${excludes},**/data/**" />
        </uptodate>
            	
       	<javac
            srcdir="${opencms.input}/test"
            destdir="${opencms.output.tests}"
            excludes="${build.excludes},**/data/**"
            classpath="${opencms.output.jars}/opencms.jar:
                       ${opencms.output.jars}/opencms-legacy.jar:       
                       ${opencms.inputlib.junit}:
		               ${opencms.inputlib.servlet}:
                       ${opencms.inputlib.activation}:
                       ${opencms.inputlib.mail}:
                       ${opencms.inputlib.xerces}:
                       ${opencms.inputlib.xml-apis}:
                       ${opencms.inputlib.oracle}:
                       ${opencms.inputlib.mysql}:
                       ${opencms.inputlib.postgresql}:
                       ${opencms.inputlib.oro}:
                       ${opencms.inputlib.tidy}:
                       ${opencms.inputlib.codec}:
                       ${opencms.inputlib.email}:
                       ${opencms.inputlib.dbcp}:
                       ${opencms.inputlib.pool}:
                       ${opencms.inputlib.digester}:
                       ${opencms.inputlib.logging}:
                       ${opencms.inputlib.collections}:
                       ${opencms.inputlib.fileupload}:
                       ${opencms.inputlib.httpclient}:
                       ${opencms.inputlib.dom4j}:
                       ${opencms.inputlib.quartz}:
                       ${opencms.inputlib.log4j}:
                       ${opencms.inputlib.htmlparser}:
                       ${opencms.inputlib.uuid}:
                       ${opencms.inputlib.lucene}:
                       ${opencms.inputlib.poi}:
                       ${opencms.inputlib.snowball}:
                       ${opencms.inputlib.textextraction}:
                       ${opencms.inputlib.pdfbox}"
            debug="on"
            optimize="on"
            deprecation="on" />
		
        <copy todir="${opencms.output.tests}">
            <fileset dir="${opencms.input}/test" includes="**/*.properties,**/*.txt,**/*.xml,**/*.xsd,**/*.dtd" excludes="${excludes},**/data/**"/>
        </copy>
    	
        <mkdir dir="${opencms.output.tests}/../webapp/" />      	
        <copy todir="${opencms.output.tests}/../webapp/">
            <fileset dir="${opencms.input.warfiles}" />
        </copy>       	    	       
    	
        <mkdir dir="${opencms.output.tests}/../test/data/" />  
        <copy todir="${opencms.output.tests}/../test/data/">
            <fileset dir="${opencms.input}/test/data" />
        </copy>       	    	       
    </target>
	

	<target name="unittests" depends="compile-tests"
		description="Runs the core Junit test cases">
		
		<junit showoutput="no" printsummary="yes" fork="yes" haltonfailure="no" haltonerror="yes">
			<classpath>
				<pathelement path="${opencms.output.tests}"/>
				<pathelement location="${opencms.output.jars}/opencms.jar"/>
				<pathelement location="${opencms.output.jars}/opencms-legacy.jar"/>
				<pathelement location="${opencms.inputlib.beanutils}"/>
				<pathelement location="${opencms.inputlib.fileupload}"/>
				<pathelement location="${opencms.inputlib.servlet}"/>				
				<pathelement location="${opencms.inputlib.mail}"/>
				<pathelement location="${opencms.inputlib.xerces}"/>
				<pathelement location="${opencms.inputlib.xml-apis}"/>
				<pathelement location="${opencms.inputlib.oracle}"/>
				<pathelement location="${opencms.inputlib.mysql}"/>
				<pathelement location="${opencms.inputlib.postgresql}"/>
				<pathelement location="${opencms.inputlib.oro}"/>
				<pathelement location="${opencms.inputlib.tidy}"/>
				<pathelement location="${opencms.inputlib.codec}"/>
				<pathelement location="${opencms.inputlib.email}"/>
				<pathelement location="${opencms.inputlib.dbcp}"/>
				<pathelement location="${opencms.inputlib.fileupload}"/>
				<pathelement location="${opencms.inputlib.pool}"/>
				<pathelement location="${opencms.inputlib.digester}"/>
				<pathelement location="${opencms.inputlib.logging}"/>
				<pathelement location="${opencms.inputlib.collections}"/>
				<pathelement location="${opencms.inputlib.httpclient}"/>
				<pathelement location="${opencms.inputlib.dom4j}"/>
				<pathelement location="${opencms.inputlib.quartz}"/>
				<pathelement location="${opencms.inputlib.log4j}"/>
				<pathelement location="${opencms.inputlib.htmlparser}"/>
				<pathelement location="${opencms.inputlib.uuid}"/>
				<pathelement location="${opencms.inputlib.lucene}"/>
				<pathelement location="${opencms.inputlib.poi}"/>
				<pathelement location="${opencms.inputlib.snowball}"/>
				<pathelement location="${opencms.inputlib.jaxen}"/>
				<pathelement location="${opencms.inputlib.pdfbox}"/>
				<pathelement location="${opencms.inputlib.textextraction}"/>
			</classpath>
			
			<formatter type="plain" />
			
			<test name="org.opencms.xml.content.AllTests" />			
			
		</junit>
	</target>

</project>