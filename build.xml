<project name="OpenCms" default="compile" basedir=".">

    <property name="env"                        environment="env"/>

    <!-- The version-number ${version.number} is automatically set to the
    current date and time. For official builds this should be set to a proper
    value at the commandline.
    Set it like this: ant all -Dversion.number=4.3.28 -->

    <property name="version.name"               value="Bela Tegeuse"/>
    <property name="app.name"                   value="opencms"/>
    <property name="build.home"                 value="../build"/>
    <property name="zip.home"                   value="../zip"/>
    <property name="tomcat.home"                value="${env.TOMCAT_HOME}" />
    <property name="build.classes"              value="${build.home}/classes"/>
    <property name="build.inputlib"             value="../ExternalComponents"/>
    <property name="build.inputlib.servlet"     value="${build.inputlib}/servlet.jar"/>
    <property name="build.inputlib.activation"  value="${build.inputlib}/activation.jar"/>
    <property name="build.inputlib.mail"        value="${build.inputlib}/mail.jar"/>
    <property name="build.inputlib.xerces"      value="${build.inputlib}/xerces.jar"/>
    <property name="build.inputlib.oracle"      value="${build.inputlib}/classes12.zip"/>
    <property name="build.inputlib.mysql"       value="${build.inputlib}/mm.mysql-2.0.4-bin.jar"/>
    <property name="build.inputlib.fop"         value="${build.inputlib}/fop_bin.jar"/>
    <property name="build.inputlib.fesi"        value="${build.inputlib}/fesi.jar"/>
    <property name="build.web"                  value="${build.home}/${app.name}"/>
    <property name="build.webinf"               value="${build.web}/WEB-INF"/>
    <property name="build.metainf"              value="${build.web}/META-INF"/>
    <property name="build.lib"                  value="${build.webinf}/lib"/>
    <property name="build.oclib"                value="${build.webinf}/oclib"/>

    <property name="build.version.propertyfile" value="${build.classes}/com/opencms/core/version.properties"/>
    <property name="build.version.jsfile"       value="${build.webinf}/ocsetup/vfs/system/workplace/templates/js/version.js"/>
    <property name="build.version.setupfile"    value="${build.web}/ocsetup/versions.txt"/>


    <property name="db.url"                     value="jdbc:mysql://localhost:3306/opencms"/>
    <property name="db.setupurl"                value="jdbc:mysql://localhost:3306/mysql"/>
    <property name="db.user"                    value="root"/>
    <property name="db.password"                value=""/>
    <property name="db.driver"                  value="org.gjt.mm.mysql.Driver"/>


    <target name="prepare">
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.home}"/>
        <mkdir dir="${build.lib}"/>
        <mkdir dir="${build.oclib}"/>
        <mkdir dir="${zip.home}"/>
    </target>

    <target name="clean">
        <delete dir="${build.home}"/>
    </target>

    <target name="compileclasses" depends="prepare">
       <javac
            srcdir="src"
            destdir="${build.classes}"
            classpath=" ${build.inputlib.servlet}:
                        ${build.inputlib.activation}:
                        ${build.inputlib.mail}:
                        ${build.inputlib.xerces}:
                        ${build.inputlib.oracle}:
                        ${build.inputlib.mysql}:
                        ${build.inputlib.fop}:
                        ${build.inputlib.fesi}"
            debug="on"
            optimize="off"
            deprecation="off"
            />

       <copy todir="${build.classes}">
            <fileset dir="src" includes="**/*.properties,**/*.txt"/>
       </copy>
       <!-- generate version infos-->
        <tstamp>
            <format property="timestamp" pattern="yyyy-MM-dd-HH-mm"/>
        </tstamp>
        <property name="version.number" value="${env.USERNAME} ${timestamp}"/>
        <echo file="${build.version.propertyfile}">version.number=${version.number}
</echo>
        <echo file="${build.version.propertyfile}" append="on">version.name=${version.name}</echo>
    </target>

    <target name="jar" depends="compileclasses">
        <jar
            jarfile="${build.lib}/opencmsboot.jar"
            basedir="${build.classes}"
            includes="com/opencms/boot/**,source/**"
            manifest="${build.classes}/mainClass.txt"
            />

        <jar
            jarfile="${build.oclib}/opencms.jar"
            basedir="${build.classes}"
            includes="com/opencms/**"
            excludes="com/opencms/build/**"
            />

    </target>

    <target name="copy" depends="jar">
       <copy todir="${build.home}">
            <fileset dir="." includes="*.*" excludes="build.xml"/>
       </copy>

       <copy file="${build.inputlib.xerces}" todir="${build.oclib}"/>
       <copy file="${build.inputlib.mysql}" todir="${build.oclib}"/>
       <copy file="${build.inputlib.mysql}" todir="${build.lib}"/>
       <copy file="${build.inputlib.activation}" todir="${build.oclib}"/>
       <copy file="${build.inputlib.mail}" todir="${build.oclib}"/>
       <copy file="${build.inputlib.fesi}" todir="${build.oclib}"/>

       <copy todir="${build.webinf}">
            <fileset dir="etc" excludes="*/CVS/*,MANIFEST.MF"/>
       </copy>

       <copy file="etc/MANIFEST.MF" todir="${build.metainf}"/>

       <copy todir="${build.web}">
            <fileset dir="web" excludes="*/CVS/*"/>
       </copy>

       <!-- create version-info for the workplace-->
       <echo file="${build.version.jsfile}">var version = '${version.number} ${version.name}';</echo>
       <!-- create version-info for the setup versions.txt -->
       <echo file="${build.version.setupfile}" append="on">OpenCms ${version.number}
</echo>
    </target>

    <target name="war" depends="copy">
        <zip zipfile="${build.home}/${app.name}.war">
            <zipfileset dir="${build.web}/META-INF" prefix="META-INF"/>
            <zipfileset dir="${build.web}/WEB-INF" prefix="WEB-INF"/>
            <zipfileset dir="${build.web}/ocsetup" prefix="ocsetup"/>
        </zip>
    </target>

    <target name="zip" depends="war">
        <zip
            zipfile="${zip.home}/opencms_${version.number}_current.zip"
            basedir="${build.home}"
            excludes="**/classes/,**/opencms/" />
    </target>


    <target name="all" depends="clean,zip"/>

    <target name="compile" depends="copy"/>

    <target name="tomcat.clean">
        <delete file="${tomcat.home}/webapps/${app.name}.war"/>
        <delete dir= "${tomcat.home}/webapps/${app.name}"/>
    </target>

    <target name="tomcat.dist" depends="copy">
        <copy todir="${tomcat.home}/webapps/${app.name}">
            <fileset dir="${build.web}"/>
        </copy>
        <copy file="etc/web.xml" todir="${tomcat.home}/webapps/${app.name}/WEB-INF"/>
        <copy file="${build.inputlib.oracle}" todir="${tomcat.home}/webapps/${app.name}/WEB-INF/oclib"/>
        <copy todir="${tomcat.home}/webapps/${app.name}/pics">
            <fileset dir="${build.webinf}/ocsetup/vfs/pics"/>
        </copy>
    </target>

    <target name="setup" depends="tomcat.dist">
        <sql
            classpath="${build.inputlib.mysql}"
            driver="${db.driver}"
            url="${db.setupurl}"
            userid="${db.user}"
            password="${db.password}"
            autocommit="true"
            onerror="continue">
            drop database opencms;
            create database opencms;
        </sql>
        <sql
            classpath="${build.inputlib.mysql}"
            driver="${db.driver}"
            url="${db.url}"
            userid="${db.user}"
            password="${db.password}"
            autocommit="true"
            onerror="continue"
            src="${build.webinf}/ocsetup/mysql.sql"
            />
        <java
            classname="com.opencms.boot.CmsMain"
            classpath="${tomcat.home}/webapps/${app.name}/WEB-INF/lib/opencmsboot.jar"
            dir="${tomcat.home}/webapps/${app.name}/WEB-INF"
            fork="true">
            <arg value="-script=ocsetup/cmssetup.txt" />
        </java>
    </target>

    <target name="tomcat.cleandist" depends="clean,tomcat.clean,tomcat.dist"/>

    <target name="cvs.update">
        <cvs command="update"/>
    </target>

</project>