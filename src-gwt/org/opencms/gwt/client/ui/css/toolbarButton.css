/**
	All CSS-selectors containing .optionBar are specific for the container-page editor. 
	The following logic applies to buttons within the option-bars:
	They are only visible, if their specific class like .toolbarMove or .toolbarEdit is also assigned to the body element and 
	not only to the button itself. This allows to show and hide all occurrences of them by a single DOM operation.
	Only exception to this applies if the .toolbarSelection class is attached to the body element, then all buttons will be 
	shown on hovering the option-bar, by assigning the class .cmsHovering to the option bar.
	
**/
@external cmsState, cmsState-up, cmsState-up-hovering, cmsState-up-disabled, cmsState-down, cmsState-down-hovering, cmsState-down-disabled;

.cmsState, .cmsHovering, .editButtonsVisible{}

@sprite .cmsState.elementInfoChanged:after { 
	gwt-image:"changedIcon";
	position: absolute;
	height: 16px;
	width: 16px;
	top:0px;
	right: 0px;
	content: ".";
	color: transparent;
}

.toolbarInfo {} 

.elementInfoUnchanged {} 