<?xml version="1.0" encoding="UTF-8"?>
<!--

MSHTML edit dialog for links that allows the insertion of anchors (a name="") and targets in the link.
Based on previous versions of the OpenCms link dialog.

Author : Alexander Kandzior (a.kandzior@alkacon.com)

File   : $Source: /alkacon/cvs/opencms/etc/ocsetup/vfs/system/workplace/templates/Attic/edit_html_linkall,v $
Date   : $Date: 2002/10/11 15:55:40 $
Version: $Revision: 1.4 $

-->
<WORKPLACE>
<TEMPLATE>
<![CDATA[
<html>
    <script language=JavaScript>
    <!--
        top.help_url='FunkButtonNeu/AnlegenNeuerVerknuepfung.html';
    //-->
    </script>

    <head>
        <script language=JavaScript>
        <!--
            var linkEditor = null;
            var linkEditorAll = null;
            var linkEditorRange = null;
            var linkEditorSelection = null;
            var linkEditorStyleInputs = false;
            var linkEditorPrefix = null;

            var foundRange = null;
            var foundLink = null;

            /**
             * Extends Javascript String to have a trim() function.
             */
            String.prototype.trim = function() {
                // skip leading and trailing whitespace
                return this.replace(/^\s*(\b.*\b|)\s*$/, "$1");
            }

            /**
             * Paste the calculated link to the calling editor.
             */
            function pasteLink() {

              var linkurl = document.NEU.neulink.value;
              var linktarget = document.NEU.linktarget.options[document.NEU.linktarget.selectedIndex].value;
              if ("named" == linktarget) {
                  linktarget = document.NEU.targetname.value;
                  if ((linktarget == null) || (linktarget.trim() == "")) {
                      linktarget="_self";
                  }
              }
              var linkanchor = document.NEU.linkanchor.value;

              if (linkEditorStyleInputs) {
                  var linkstyle = document.NEU.linkstyle.value;
                  var linkstyleclass = document.NEU.linkstyleclass.value;
              }

              if (foundLink != null) {
                  foundLink.removeNode();
              }

              if ((linkurl.length > 0) || (linkanchor.length > 0)) {

                  foundRange.execCommand("CreateLink", false, "/");

                  var el = foundRange.parentElement();
                  while ((el.tagName != "BODY") && (el.tagName != "A")) {
                      if (el.tagName == "IMG") {
                          // Set border to 0 for images, this is what you want in 99% of all cases
                          el.border = 0;
                      }
                      el = el.parentElement;
                  }

                  if (linkurl.length > 0) {
                      el.setAttribute("HREF", linkurl, 0);
                  } else {
                      el.removeAttribute("HREF", false);
                  }

                  if ((linktarget.length > 0) && (linkurl.length > 0)) {
                      el.target = linktarget;
                  } else {
                      el.removeAttribute("TARGET", false);
                  }

                  if (linkanchor.length > 0) {
                      el.name = linkanchor;
                  } else {
                      el.removeAttribute("NAME", false);
                  }

                  if (linkEditorStyleInputs) {
                      if(linkstyle.length > 0) {
                          el.style.cssText = linkstyle;
                      }

                      if(linkstyleclass.length > 0) {
                          el.className = linkstyleclass;
                      }
                  }
               }

               window.close();
            }

            /**
             * Set the current selection in the calling editor and fill the fields of the editor form.
             * You must set the following variables in the javascript of the opening window:
             *
             * linkEditor
             * linkEditorAll
             * linkEditorRange
             * linkEditorSelection
             * linkEditorStyleInputs
             * linkEditorPrefix
             */
            function init() {

                // Get the editor element, a complete range of the editor and the editor selection
                linkEditor = window.opener.linkEditor;
                linkEditorAll = window.opener.linkEditorAll;
                linkEditorRange = window.opener.linkEditorRange;
                linkEditorSelection = window.opener.linkEditorSelection;
                if (window.opener.linkEditorStyleInputs != null) {
                    linkEditorStyleInputs = window.opener.linkEditorStyleInputs;
                }
                if (window.opener.linkEditorPrefix != null) {
                    linkEditorPrefix = window.opener.linkEditorPrefix;
                }

                // Get all links in editor (ie. tags like <A HREF>)
                var allLinks = linkEditorAll.tags("A");

                // Create a range on the current selection
                var range = linkEditorSelection.createRange();

                if (typeof(range.text) != 'undefined') {
                    // If this is undefined, the selection is a MS IE "ControlSelection",
                    // which can not be used for adding a link

                    for(i = 0; i < allLinks.length; i++) {
                        foundRange = null;

                        // Create range on whole text
                        var mainrange = linkEditorRange;

                        // Move range to the current A-element
                        mainrange.moveToElementText(allLinks[i]);

                        // Compare the selection with the current range, and expand if neccessary
                        if (mainrange.inRange(range)) {
                            foundRange = mainrange;
                        } else if (range.inRange(mainrange) || range.isEqual(mainrange)) {
                            foundRange = range;
                        } else {
                            var s2e = range.compareEndPoints("StartToEnd", mainrange);
                            var s2s = range.compareEndPoints("StartToStart", mainrange);
                            var e2s = range.compareEndPoints("EndToStart", mainrange);
                            var e2e = range.compareEndPoints("EndToEnd", mainrange);
                            if ((s2s == -1) && (e2s >= 0)) {
                                foundRange = range;
                                foundRange.setEndPoint("EndToEnd", mainrange);
                            } else if ((s2e == -1) && (e2e >= 0)) {
                                foundRange = range;
                                foundRange.setEndPoint("StartToStart", mainrange);
                            }
                        }

                        // Finally fill the input fields of the form
                        if (foundRange != null) {
                            // Use expanded selection to fill input areas
                            foundRange.select();
                            foundLink = allLinks[i];

                            document.forms["NEU"].elements["neulink"].value = foundLink.getAttribute("HREF", 2);
                            document.forms["NEU"].elements["linkanchor"].value = foundLink.getAttribute("NAME", 2);
                            if (linkEditorStyleInputs) {
                                document.forms["NEU"].elements["linkstyle"].value = foundLink.style.getAttribute("CSSTEXT", 2);
                                document.forms["NEU"].elements["linkstyleclass"].value = foundLink.getAttribute("CLASSNAME", 2);
                            }

                            document.forms["NEU"].elements["targetname"].value = "";
                            if((foundLink.target == "_self") || (foundLink.target == "") || (foundLink.target == null)) {
                                document.forms["NEU"].elements["linktarget"].selectedIndex = 0;
                            } else if(foundLink.target == "_blank") {
                                document.forms["NEU"].elements["linktarget"].selectedIndex = 1;
                            } else if(foundLink.target == "_top") {
                                document.forms["NEU"].elements["linktarget"].selectedIndex = 2;
                            } else {
                                document.forms["NEU"].elements["linktarget"].selectedIndex = 3;
                                document.forms["NEU"].elements["targetname"].value = foundLink.target;
                            }
                            setNameTarget(false);
                            break;
                        }
                    }

                    if (foundLink == null) {
                        // No previous "A" element found, set selection text in input area
                        foundRange = range;
                    }
                }

                if ((foundRange == null) || (foundRange.htmlText == "") || (foundRange.htmlText == null)) {
                    // No valid selection, display message and close window
                    alert("]]><LABEL value="editor.message.noselection" /><![CDATA[");
                    window.close();
                } else {
                    document.forms["NEU"].elements["neulink"].focus();
                }
            }

            function setNameTarget(param) {
                var select = document.forms["NEU"].elements["linktarget"];
                var input  = document.forms["NEU"].elements["targetname"];
                var span   = document.all["targetinput"];
                if (param) {
                    var target = input.value;
                    if ((target != null) && (target.trim() != "")) {
                        target = target.trim();
                        input.value = target;
                        select.selectedIndex = 3;
                    } else {
                        if (select.selectedIndex == 3) {
                            select.selectedIndex = 0;
                            span.style.visibility = "hidden";
                        }
                    }
                } else {
                    if (select.selectedIndex == 3) {
                        span.style.visibility = "visible";
                    } else {
                        span.style.visibility = "hidden";
                    }
                }
            }

            /**
             * This regular expression checks if a string looks like as if
             * it starts with a server name, ie. "xxx.yyy.zzz", but without
             * a protocol.
             */
            function checkUrl(strValue) {
                var objRegExp  = /(^[a-z]([a-z_]*)[.]([a-z0-9\-]*)[.]([a-z_\.]*)([\/]*)([a-z_\/\.]*)$)/i;
                return objRegExp.test(strValue);
            }

            /**
             * If a user forgets to insert a protocol at the beginning of the URL,
             * (eg. just "www.server.com" instead of "http://www.server.com"),
             * MSHTML will treat this as a relative URL at the current server. This
             * is not wanted in almost 99% of all cases, so the input value is checked
             * and the user is warned in case the URL looks like a server string without protocol.
             */
            function checkLinkUrl() {
                var url = document.forms["NEU"].elements["neulink"];
                if (checkUrl(url.value)) {
                    // TODO: Localize this string
                    var conf = confirm("]]><LABEL value="editor.message.confirmhttp" /><![CDATA[");
                    if (conf) {
                        url.value = "http://" + url.value;
                    }
                }
            }

            function copySelection() {
                var url = document.forms["NEU"].elements["neulink"];
                if ((linkEditorPrefix != null) && (url.value.charAt(0) == "/")) {
                    if (! url.value.indexOf(linkEditorPrefix)==0) {
                        url.value = linkEditorPrefix + url.value;
                    }
                }
            }

        //-->
        </script>

        <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
        <title>]]><LABEL value="title.newlink" /><![CDATA[</title>
        <link rel=stylesheet type="text/css" href="../css/format.css">
        <script language="JavaScript" type="text/javascript" src="../templates/js/opencms.js"></script>
        <script language="JavaScript" type="text/javascript" src="../templates/js/opencms_edithtml.js"></script>
    </head>

    <body bgcolor="#c0c0c0" marginwidth=0 marginheight=0 leftmargin=0 topmargin=0 onLoad="init();" onUnload="if(treewin!=null)treewin.close();">
        <form name=NEU >
            <table border=0 cellspacing=0 cellpadding=5 width=100%>
                <tr>
                    <td colspan=3 class=leerzeile>&nbsp;</td>
                </tr>
                <tr>
                    <td class=formular>]]><LABEL value="input.linkto" /><![CDATA[:</td>
                    <td class=dialogtxt>
                        <input type="text" name="neulink" class="textfeld3" size="30" value="" onchange="checkLinkUrl();" />
                    </td>
                    <td class=formular><a href="javascript:treewin=opensmallwin('folder_tree.html?foldertree=/&formname=NEU&variable=neulink&onlineselect=yes&viewfile=yes', 'explorer_viewer', 300, 400),treewin.focus();"><img src="]]><METHOD name="picsUrl">ic_file_folder.gif</METHOD><![CDATA[" border="0" alt="]]><LABEL value="label.selectfolder" /><![CDATA["></a></td>
                </tr>
            <tr>
                    <td class=formular>]]><LABEL value="input.linkanchor" /><![CDATA[:</td>
                    <td class=dialogtxt>
                        <input type="text" name="linkanchor" class="textfeld3" size="15" />
                    </td>
                    <td class=formular>&nbsp;</td>
                </tr>
                <script language=JavaScript>
                <!--
                if (window.opener.linkEditorStyleInputs) {
                  document.write('<tr><td class=formular>]]><LABEL value="input.linkstyle" /><![CDATA[:</td>' +
                    '<td class=dialogtxt><input type="text" name="linkstyle" class="textfeld3" size="15"  />' +
                    '</td><td class=formular>&nbsp;</td></tr><tr>' +
                    '<td class=formular>]]><LABEL value="input.linkstyleclass" /><![CDATA[:</td>' +
                    '<td class=dialogtxt><input type="text" name="linkstyleclass" class="textfeld3" size="15" />' +
                    '</td><td class=formular>&nbsp;</td></tr>');
                }
                // -->
                </script>
                <tr>
                    <td class=formular>]]><LABEL value="input.linktarget" /><![CDATA[:</td>
                    <td class=dialogtxt>
                      <select name="linktarget" id="linktarget" size="1" style="width:150px" onchange="setNameTarget(false);">
                        <option value="_self">]]><LABEL value="input.linktargetself" /><![CDATA[</option>
                        <option value="_blank">]]><LABEL value="input.linktargetblank" /><![CDATA[</option>
                        <option value="_top">]]><LABEL value="input.linktargettop" /><![CDATA[</option>
                        <option value="named">]]><LABEL value="input.linktargetnamed" /><![CDATA[</option>
                      </select>
                      &nbsp;&nbsp;<span id="targetinput" style="visibility:hidden"><input type="text" name="targetname" size="15" class="textfeld3" style="width:141px" onchange="setNameTarget(true);" /></span>
                    </td>
                    <td class=formular>&nbsp;</td>
                </tr>
                <tr>
                    <td colspan=3 class=leerzeile>&nbsp;</td>
                </tr>
                <tr>
                    <td colspan=3 class=formular>
                        <table cellspacing=0 cellpadding=5 width=100%>
                            <tr>
                                <td class=formular align=middle width=20%><INPUT class=button width=100 type="button" value="]]><LABEL value="button.ok" /><![CDATA[" id=OK name=OK onClick="pasteLink();"></td>
                                <td class=formular align=middle width=20%><INPUT class=button width=100 type="button" value="]]><LABEL value="button.cancel" /><![CDATA[" id=CANCEL name=CANCEL onClick="window.close();"></td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        </form>
    </body>
</html>
]]>
</TEMPLATE>

</WORKPLACE>