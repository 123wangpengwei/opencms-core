.dragElement{
	position: relative;
	
}
.dragListElement{
	
}
.dragTarget{
	
}

.dragTarget.dragging{
	min-height: 25px;
	position: relative;
}

/** Following is a magic clear-fix for containers with floated contend. @see http://www.positioniseverything.net/easyclearing.html */
.dragTarget.dragging:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
}

.dragElementBackground{
	background-color: #ffffff;
}
.dragElementBorder{
	border: 1px solid #aaaaaa;
}
.dragSubContainer{}

.overlayShow .placeholderOverlay{
	display: block;
}

@sprite .placeholderOverlay{
	gwt-image: 'overlayImage';
	display: none;
	opacity: 1;
	position:absolute;
	z-index: 2;
	top: 0px;
	left: 0px;
	height: 100%;
	width: 100%;
	
}



/** setting browser specific shadow  **/

@def shadow literal("4px 4px 4px #666666");

@if user.agent gecko1_8 gecko{
	.dragElement.dragging{
		-moz-box-shadow: 4px 4px 4px #666666;
		
	}
	.dragPlaceholder{
	border: solid 1px value("constantsCss.borderColor");
	opacity: 0.5;
}

} @elif user.agent safari {
	.dragElement.dragging{
		-webkit-box-shadow: 4px 4px 4px #666666;
	}
	.dragPlaceholder{
	border: solid 1px value("constantsCss.borderColor");
	opacity: 0.5;
}

} @elif user.agent opera {
	.dragElement.dragging{
		box-shadow: 4px 4px 4px #666666;
	}
	.dragPlaceholder{
	border: solid 1px value("constantsCss.borderColor");
	opacity: 0.5;
}

} @else {
	.dragElement.dragging{
		 filter: literal("progid:DXImageTransform.Microsoft.DropShadow(color=#999999,offX=2,offY=2)");
	}
	.dragPlaceholder{
	border: solid 1px value("constantsCss.borderColor");
	filter: literal("progid:DXImageTransform.Microsoft.Alpha( Opacity=50, FinishOpacity=0, Style=0, StartX=0,  FinishX=100, StartY=0, FinishY=100)");
}
}