@external html-face, cmsState, cmsState-up, cmsState-up-hovering, cmsState-up-disabled, cmsState-down, cmsState-down-hovering, cmsState-down-disabled;

.cmsState, .cmsHovering{}
.cmsState.cmsState-down-disabled, .cmsState.cmsState-up-disabled { cursor: auto; }

.spacerRight{
	margin-right: 4px;
}
.spacerLeft{
	margin-left: 4px;
}

/** General styling for the html-face class and it's inner span, if an image is present. */
div.html-face{
	color: inherit;
	font-size: inherit;
	font-family: inherit;
	font-weight: inherit;
	text-align: center;
}
div.html-face span{
	display: inline-block;
    white-space: nowrap;
    vertical-align: middle;
}

/** General styling for all buttons (don't let the background expand the button height and position it in the middle). */
div.cmsTextButton, div.cmsTransparentButton, div.cmsMenuButton, div.cmsImageButton{
	height: auto !important;
	background-position: 50% 50% !important;
	background-color: transparent;
	vertical-align: middle;
	outline: none;
	cursor: pointer;
	display: inline-block;
}

/** Specific button styles (text-, transparent-, menu- and image-Button). */
@sprite div.cmsTextButton {
	gwt-image: "backgrounds.stateBackground";
    border: 1px solid value("constants.css.borderColor");
    padding: 3px 4px;
    font-weight: bold;
}
div.cmsMenuButton, div.cmsImageButton {
    border: 1px solid transparent;
    padding: 2px 4px; 
}
div.cmsTransparentButton{
    vertical-align: top;
}

/** Specific button size styles (transparent buttons never have a padding by default. */
div.cmsTextButton.cmsButtonBig, div.cmsMenuButton.cmsButtonBig, div.cmsImageButton.cmsButtonBig{
    padding: 2px 4px;
}
div.cmsTextButton.cmsButtonSmall, div.cmsMenuButton.cmsButtonSmall, div.cmsImageButton.cmsButtonSmall{
    padding: 2px 2px;
}
div.cmsButtonMedium{}
div.cmsButtonIndividual{}

/**
 * State depended styles.
 */
 
/** Set a general text color for all disabled buttons. */
div.cmsState-up-disabled .html-face, div.cmsState-down-disabled .html-face {
	color:value("constants.css.textColorDisabledButton") !important;
}
/** Text-Button: If no button style is set use the default state behavior. */
div.cmsTextButton.cmsState-up-disabled, div.cmsTextButton.cmsState-down-disabled{
    background-color: value("constants.css.backgroundColorStateDisabled");
}
div.cmsTextButton.cmsState-up{
	background-color: value("constants.css.backgroundColorStateStandard");
} 
div.cmsTextButton.cmsState-down-hovering, div.cmsTextButton.cmsState-up-hovering{
	background-color: value("constants.css.backgroundColorStateHover");
}
div.cmsTextButton.cmsState-down{
	background-color: value("constants.css.backgroundColorStateActive");
}
/** Image-Button: Only show a border and background for the hover- and the down-state. */
@sprite div.cmsImageButton.cmsState-down-hovering, div.cmsImageButton.cmsState-up-hovering {
	gwt-image: "backgrounds.stateBackground"; 
	background-color: value("constants.css.backgroundColorStateHover");
	border-color: value("constants.css.borderColor");
}
@sprite div.cmsImageButton.cmsState-down{
	gwt-image: "backgrounds.stateBackground"; 
	background-color: value("constants.css.backgroundColorStateActive");
	border-color: value("constants.css.borderColor");
}
/** Menu-Button: Only show a border and background for the hover-state. */
@sprite div.cmsMenuButton.cmsState-down-hovering, div.cmsMenuButton.cmsState-up-hovering{
	gwt-image: "backgrounds.stateBackground"; 
	background-color: value("constants.css.backgroundColorStateHover");
	border-color: value("constants.css.borderColor");
}

/**
 * Browser specific styles.
 */
@if user.agent ie6 {
	div.cmsTextButton, div.cmsTransparentButton, div.cmsMenuButton, div.cmsImageButton{
		white-space: nowrap;
		display: inline !important;
	}
	.cmsMinWidth .html-face{
		min-width: 6em;
		overflow: visible !important;
	}
} @else {
	div.cmsTextButton, div.cmsTransparentButton, div.cmsMenuButton, div.cmsImageButton{
		white-space: nowrap;
		display: inline-block;
	}
	.cmsMinWidth .html-face{
		min-width: 6em;
	}
}

/**
 * Color sprites.
 */
.red .html-face{
	color:value("constants.css.textColorDarkButton") !important;
}
@sprite .red.cmsState-up{
	gwt-image: "inputImages.buttonRedUpBackground"; 
}
@sprite .red.cmsState-down{
	gwt-image: "inputImages.buttonRedDownBackground";
}
@sprite .red.cmsState-up-disabled, .red.cmsState-down-disabled{
	gwt-image: "inputImages.buttonDisabledBackground";
}
@sprite .red.cmsState-up-hovering, .red.cmsState-down-hovering{
	gwt-image: "inputImages.buttonRedHoverBackground"; 
}

.gray .html-face{
	color:value("constants.css.textColorDarkButton") !important;
}
@sprite .gray.cmsState-up{
	gwt-image: "inputImages.buttonGrayUpBackground"; 
}
@sprite .gray.cmsState-down{
	gwt-image: "inputImages.buttonGrayDownBackground";
}
@sprite .gray.cmsState-up-disabled, .gray.cmsState-down-disabled{
	gwt-image: "inputImages.buttonDisabledBackground";
}
@sprite .gray.cmsState-up-hovering, .gray.cmsState-down-hovering{
	gwt-image: "inputImages.buttonGrayHoverBackground"; 
}

.blue .html-face{
	color:value("constants.css.textColorDarkButton") !important;
}
@sprite .blue.cmsState-up{
	gwt-image: "inputImages.buttonBlueUpBackground"; 
}
@sprite .blue.cmsState-down{
	gwt-image: "inputImages.buttonBlueDownBackground";
}
@sprite .blue.cmsState-up-disabled, .blue.cmsState-down-disabled{
	gwt-image: "inputImages.buttonDisabledBackground";
}
@sprite .blue.cmsState-up-hovering, .blue.cmsState-down-hovering{
	gwt-image: "inputImages.buttonBlueHoverBackground"; 
}

.yellow .html-face{
	color:value("constants.css.textColorLightButton") !important;
}
@sprite .yellow.cmsState-up{
	gwt-image: "inputImages.buttonYellowUpBackground"; 
}
@sprite .yellow.cmsState-down{
	gwt-image: "inputImages.buttonYellowDownBackground";
}
@sprite .yellow.cmsState-up-disabled, .yellow.cmsState-down-disabled{
	gwt-image: "inputImages.buttonDisabledBackground";
}
@sprite .yellow.cmsState-up-hovering, .yellow.cmsState-down-hovering{
	gwt-image: "inputImages.buttonYellowHoverBackground"; 
}

.steel .html-face{
	color:value("constants.css.textColorDarkButton") !important;
}
@sprite .steel.cmsState-up{
	gwt-image: "inputImages.buttonSteelUpBackground"; 
}
@sprite .steel.cmsState-down{
	gwt-image: "inputImages.buttonSteelDownBackground";
}
@sprite .steel.cmsState-up-disabled, .steel.cmsState-down-disabled{
	gwt-image: "inputImages.buttonDisabledBackground";
}
@sprite .steel.cmsState-up-hovering, .steel.cmsState-down-hovering{
	gwt-image: "inputImages.buttonSteelHoverBackground"; 
}

.black .html-face{
	color:value("constants.css.textColorDarkButton") !important;
}
@sprite .black.cmsState-up{
	gwt-image: "inputImages.buttonBlackUpBackground"; 
}
@sprite .black.cmsState-down{
	gwt-image: "inputImages.buttonBlackDownBackground";
}
@sprite .black.cmsState-up-disabled, .black.cmsState-down-disabled{
	gwt-image: "inputImages.buttonDisabledBackground";
}
@sprite .black.cmsState-up-hovering, .black.cmsState-down-hovering{
	gwt-image: "inputImages.buttonBlackHoverBackground"; 
}
