@external cms_type_icon;
.itemContainer .itemAdditional{
	display: none;
}

.itemContainer.open .itemAdditional{
	display: block;
}

.itemContainer{
	border: 1px solid value("constants.css.borderColorListItem");
	background: value("constants.css.backgroundColorDialog");
	line-height: 16px;
	color: value("constants.css.textColor");
}

.itemContainer * {
	font-family: value("constants.css.fontFamily");
	font-size: value("constants.css.fontSize");
}



@sprite .export {
	gwt-image: "gwtImages.bigIcons.stateExportBigIcon"; 
}
@sprite .hidden {
	gwt-image: "gwtImages.bigIcons.stateHiddenBigIcon"; 
}
@sprite .normal {
	gwt-image: "gwtImages.bigIcons.stateNormalBigIcon";
}
@sprite .secure {
	gwt-image: "gwtImages.bigIcons.stateSecureBigIcon";
}
@sprite .redirect { 
	gwt-image: "gwtImages.bigIcons.stateRedirectBigIcon";
}



@sprite .itemContent {
    gwt-image: "backgrounds.stateBackground";
    background-position: 50% 50%;
    height: auto;
	position: relative;
	/** background-color: value("constants.css.backgroundColorStateStandard"); */
	background-color: value("constants.css.backgroundColorListItem");
}

@sprite .itemActive > .itemContent {
    gwt-image: "backgrounds.stateBackground";
    background-position: 50% 50%;
    height: auto;
    background-color: value("constants.css.backgroundColorStateHover");
}

@sprite .disabledItem > .itemContent {
	gwt-image: "backgrounds.stateBackground";
    background-position: 50% 50%;
    height: auto;
    background-color: value("constants.css.backgroundColorStateDisabled");
}

@sprite .itemBlue > .itemContent {
    gwt-image: "backgrounds.stateBackground";
    background-position: 50% 50%;
    height: auto;
    background-color: value("constants.css.backgroundColorStateNew");
}

@sprite .itemRed > .itemContent {
    gwt-image: "backgrounds.stateBackground";
    background-position: 50% 50%;
    height: auto;
    background-color: value("constants.css.backgroundColorStateChanged");
}

@sprite .itemYellow > .itemContent {
    gwt-image: "backgrounds.stateBackground";
    background-position: 50% 50%;
    height: auto;
    background-color: value("constants.css.backgroundColorStateSubSitemap");
}

.itemIcon{
	height: 24px;
	width: 24px;
	float: left;
	overflow: hidden;
	margin: 7px 0 7px 4px;
}

.itemIcon .cms_type_icon{
	height: 24px;
	width: 24px;
}

.itemTitle{
	font-weight: bold;
    vertical-align: middle;
    white-space: nowrap;
}
.titleRow{
/**	float: left;**/
}
.cmsHovering .buttonPanel{
	display: block;
}

.buttonPanel{
	position: absolute;
	right: 5px;
	top: 8px;
	overflow: visible;
}

.buttonPanel > * {
	visibility: hidden;
}

.buttonPanel > .permaVisible, .cmsHovering .buttonPanel > * {
	visibility: visible;
}

.buttonPanel > * {
	float: right;
	margin-left: 2px;
}

.itemAdditional{
	padding: 5px 0px 0px 4px;
}

.itemAdditionalTitle{
	float:left;
	height:16px;
	margin-right:5px;
	overflow:hidden;
	vertical-align:top;
	width:90px;
}

.itemAdditionalValue{
	margin-left:95px;
	vertical-align:top;
}

/** These styles are for dragging. */
li.dragging{
	list-style-type: none !important;
	position: absolute !important;
	margin: 0px !important;
	z-index: 100 !important;
}
@if user.agent gecko1_8 gecko{
	.dragging .itemContainer {
		-moz-box-shadow: 2px 2px 6px value("constants.css.boxShadowColorOther");
	}
} @elif user.agent safari {
	.dragging .itemContainer {
		-webkit-box-shadow: 2px 2px 6px value("constants.css.boxShadowColorOther");
	}
} @elif user.agent opera {
	.dragging .itemContainer {
		box-shadow: 2px 2px 6px value("constants.css.boxShadowColorOther");
	}
} @elif user.agent ie6 {
	.dragging .itemContainer {
		filter: literal("progid:DXImageTransform.Microsoft.DropShadow(color=value('constants.css.boxShadowColorIE'),offX=2,offY=2)");
	}
} @elif user.agent ie8 {
	.dragging .itemContainer {
		-ms-filter: "progid:DXImageTransform.Microsoft.DropShadow(color=value('constants.css.boxShadowColorIE'),offX=2,offY=2)"; 
	}
} @else {
	.dragging .itemContainer {
		box-shadow: 2px 2px 6px value("constants.css.boxShadowColorOther");
	}
} 

/** following classes have to be implemented but are not used within this CSS **/
.cmsState{}
.cmsState-up{}
.cmsState-up-hovering{}
.cmsState-up-disabled{}
.cmsState-down{}
.cmsState-down-hovering{}
.cmsState-down-disabled{}