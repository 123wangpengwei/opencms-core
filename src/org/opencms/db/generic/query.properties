#
# The pattern _T_ in table names is replaced by the SqlManager with 
# "_ONLINE_" or "_OFFLINE_" to choose the right database tables for
# SQL queries that are project dependent!
#

#
# Tablenames
#
C_TABLE_PROPERTIES=CMS_PROPERTIES
C_TABLE_PROPERTIES_ONLINE=CMS_ONLINE_PROPERTIES
C_TABLE_PROPERTIES_BACKUP=CMS_BACKUP_PROPERTIES
C_TABLE_PROPERTYDEF=CMS_PROPERTYDEF
C_TABLE_PROPERTYDEF_ONLINE=CMS_ONLINE_PROPERTYDEF
C_TABLE_PROPERTYDEF_BACKUP=CMS_BACKUP_PROPERTYDEF
C_TABLE_EXPORT_LINKS=CMS_EXPORT_LINKS
C_TABLE_EXPORT_DEPENDENCIES=CMS_EXPORT_DEPENDENCIES

#
# Projects
#
C_PROJECTS_PROJECT_ID=PROJECT_ID
C_PROJECTS_USER_ID=USER_ID
C_PROJECTS_GROUP_ID=GROUP_ID
C_PROJECTS_MANAGERGROUP_ID=MANAGERGROUP_ID
C_PROJECTS_TASK_ID=TASK_ID
C_PROJECTS_PROJECT_NAME=PROJECT_NAME
C_PROJECTS_PROJECT_DESCRIPTION=PROJECT_DESCRIPTION
C_PROJECTS_PROJECT_FLAGS=PROJECT_FLAGS
C_PROJECTS_PROJECT_CREATEDATE=PROJECT_CREATEDATE
C_PROJECTS_PROJECT_TYPE=PROJECT_TYPE
C_PROJECTS_RECORD=PROJECT_ID, USER_ID, GROUP_ID, MANAGERGROUP_ID, TASK_ID, PROJECT_NAME, \
                  PROJECT_DESCRIPTION, PROJECT_FLAGS, PROJECT_CREATEDATE, \
                  PROJECT_TYPE
C_PROJECTS_MAXID=SELECT MAX(PROJECT_ID) FROM CMS_PROJECTS
C_PROJECTS_CREATE=INSERT INTO CMS_PROJECTS \
                  (PROJECT_ID, USER_ID, GROUP_ID, MANAGERGROUP_ID, TASK_ID, PROJECT_NAME, \
                   PROJECT_DESCRIPTION, PROJECT_FLAGS, PROJECT_CREATEDATE, \
                   PROJECT_TYPE) VALUES (?,?,?,?,?,?,?,?,?,?)
C_PROJECTS_READ=SELECT PROJECT_ID, PROJECT_NAME, PROJECT_DESCRIPTION, TASK_ID,  \
                USER_ID, GROUP_ID, MANAGERGROUP_ID, PROJECT_FLAGS, PROJECT_CREATEDATE, \
                PROJECT_TYPE FROM CMS_PROJECTS \
                WHERE PROJECT_ID=?  ORDER BY PROJECT_NAME
C_PROJECTS_READ_BYTASK=SELECT PROJECT_ID, PROJECT_NAME, PROJECT_DESCRIPTION, TASK_ID,  \
                       USER_ID, GROUP_ID, MANAGERGROUP_ID, PROJECT_FLAGS, PROJECT_CREATEDATE, \
                       PROJECT_TYPE FROM CMS_PROJECTS \
                       WHERE TASK_ID=?  ORDER BY PROJECT_NAME
C_PROJECTS_READ_BYUSER=SELECT PROJECT_ID, PROJECT_NAME, PROJECT_DESCRIPTION, TASK_ID,  \
                       USER_ID, GROUP_ID, MANAGERGROUP_ID, PROJECT_FLAGS, PROJECT_CREATEDATE, \
                       PROJECT_TYPE FROM CMS_PROJECTS \
                       WHERE USER_ID=?  \
                       AND PROJECT_FLAGS=0 \
                       ORDER BY PROJECT_NAME
C_PROJECTS_READ_BYGROUP=SELECT PROJECT_ID, PROJECT_NAME, PROJECT_DESCRIPTION, TASK_ID,  \
                        USER_ID, GROUP_ID, MANAGERGROUP_ID, PROJECT_FLAGS, PROJECT_CREATEDATE, \
                        PROJECT_TYPE FROM CMS_PROJECTS \
                        WHERE (GROUP_ID=?  OR MANAGERGROUP_ID=?) \
                        AND PROJECT_FLAGS=0 \
                        ORDER BY PROJECT_NAME
C_PROJECTS_READ_BYFLAG=SELECT PROJECT_ID, PROJECT_NAME, PROJECT_DESCRIPTION, TASK_ID,  \
                       USER_ID, GROUP_ID, MANAGERGROUP_ID, PROJECT_FLAGS, PROJECT_CREATEDATE, \
                       PROJECT_TYPE \
                       FROM CMS_PROJECTS \
                       WHERE PROJECT_FLAGS=?  \
                       ORDER BY PROJECT_NAME
C_PROJECTS_READ_BYMANAGER=SELECT PROJECT_ID, PROJECT_NAME, PROJECT_DESCRIPTION, TASK_ID,  \
                          USER_ID, GROUP_ID, MANAGERGROUP_ID, PROJECT_FLAGS, PROJECT_CREATEDATE, \
                          PROJECT_TYPE FROM CMS_PROJECTS \
                          WHERE MANAGERGROUP_ID=?  \
                          AND PROJECT_FLAGS=0 \
                          ORDER BY PROJECT_NAME
C_PROJECTS_READ_BYNAME=SELECT PROJECT_ID, PROJECT_NAME, PROJECT_DESCRIPTION, TASK_ID,  \
                USER_ID, GROUP_ID, MANAGERGROUP_ID, PROJECT_FLAGS, PROJECT_CREATEDATE, \
                PROJECT_TYPE FROM CMS_PROJECTS \
                WHERE PROJECT_NAME=? ORDER BY PROJECT_NAME                          
C_PROJECTS_DELETE=DELETE FROM CMS_PROJECTS WHERE PROJECT_ID=?
C_PROJECTS_NEWFILES=SELECT * FROM CMS_OFFLINE_RESOURCES WHERE PROJECT_ID = ?  \
                    AND STATE = ?  \
                    AND RESOURCE_TYPE != ?
C_PROJECTS_NEWFOLDERS=SELECT * FROM CMS_OFFLINE_RESOURCES WHERE PROJECT_ID = ?  \
                    AND STATE = ?  \
                    AND RESOURCE_TYPE = ?  \
                    ORDER BY RESOURCE_NAME DESC
                    
C_PROJECTS_UNMARK= UPDATE CMS_OFFLINE_RESOURCES SET PROJECT_ID=0 WHERE PROJECT_ID=? \                    
                    
                    
#
# Projecthistory
#
C_PROJECTS_CREATE_BACKUP=INSERT INTO CMS_BACKUP_PROJECTS \
                         (TAG_ID, PROJECT_ID, PROJECT_NAME, PROJECT_PUBLISHDATE, PROJECT_PUBLISHED_BY, \
                         PROJECT_PUBLISHED_BY_NAME, USER_ID, USER_NAME, GROUP_ID, GROUP_NAME, \
                         MANAGERGROUP_ID, MANAGERGROUP_NAME, PROJECT_DESCRIPTION, PROJECT_CREATEDATE, \
                         PROJECT_TYPE, TASK_ID) \
                         VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
                         
C_PROJECTS_READBYVERSION_BACKUP=SELECT TAG_ID, PROJECT_ID, PROJECT_NAME, PROJECT_PUBLISHDATE, PROJECT_PUBLISHED_BY, \
                                PROJECT_PUBLISHED_BY_NAME, USER_ID, USER_NAME, GROUP_ID, GROUP_NAME, \
                                MANAGERGROUP_ID, MANAGERGROUP_NAME, PROJECT_DESCRIPTION, PROJECT_CREATEDATE, \
                                PROJECT_TYPE, TASK_ID \
                                FROM CMS_BACKUP_PROJECTS \
                                WHERE TAG_ID = ?
                         
C_PROJECTS_READLAST_BACKUP=SELECT TAG_ID, PROJECT_ID, PROJECT_NAME, PROJECT_PUBLISHDATE, PROJECT_PUBLISHED_BY, \
                         PROJECT_PUBLISHED_BY_NAME, PROJECT_DESCRIPTION, TASK_ID, USER_ID, USER_NAME, GROUP_ID, GROUP_NAME, \
                         MANAGERGROUP_ID, MANAGERGROUP_NAME, PROJECT_CREATEDATE, PROJECT_TYPE \
                         FROM CMS_BACKUP_PROJECTS \
                         ORDER BY TAG_ID DESC
                         
C_PROJECTRESOURCES_CREATE_BACKUP=INSERT INTO CMS_BACKUP_PROJECTRESOURCES \
                                 (TAG_ID, PROJECT_ID, RESOURCE_NAME) VALUES (?,?,?)
                                 
C_PROJECTRESOURCES_READ_BACKUP=SELECT RESOURCE_NAME \
                               FROM CMS_BACKUP_PROJECTRESOURCES \
                               WHERE TAG_ID = ?
#
# Projectresources
#
C_PROJECTRESOURCES_CREATE=INSERT INTO CMS_PROJECTRESOURCES (PROJECT_ID, RESOURCE_NAME) \
                          VALUES (?, ?)
C_PROJECTRESOURCES_DELETEALL=DELETE FROM CMS_PROJECTRESOURCES \
                             WHERE PROJECT_ID = ?
C_PROJECTRESOURCES_READ=SELECT RESOURCE_NAME FROM CMS_PROJECTRESOURCES \
                        WHERE PROJECT_ID = ?  AND RESOURCE_NAME = ?
C_PROJECTRESOURCES_READ_BY_ID=SELECT RESOURCE_NAME \
	FROM CMS_PROJECTRESOURCES \
	WHERE PROJECT_ID=?
						   
#############################################################################

# database table attributes required to create a valid resource instance

C_RESOURCES_RESOURCE_ID=RESOURCE_ID
C_RESOURCES_STRUCTURE_ID=STRUCTURE_ID
C_RESOURCES_BACKUP_ID=BACKUP_ID
C_RESOURCES_TAG_ID=TAG_ID
C_RESOURCES_VERSION_ID=VERSION_ID
C_RESOURCES_PARENT_ID=PARENT_ID
C_RESOURCES_RESOURCE_TYPE=RESOURCE_TYPE
C_RESOURCES_RESOURCE_FLAGS=RESOURCE_FLAGS
C_RESOURCES_FILE_ID=FILE_ID
C_RESOURCES_RESOURCE_NAME=RESOURCE_NAME
C_RESOURCES_USER_NAME=USER_NAME
C_RESOURCES_GROUP_NAME=GROUP_NAME
C_RESOURCES_PROJECT_ID=PROJECT_ID
C_PROJECT_ID_RESOURCES=CMS_OFFLINE_RESOURCES.PROJECT_ID
C_RESOURCE_FLAGS=RESOURCE_FLAGS
C_RESOURCES_STATE=RESOURCE_STATE
C_RESOURCES_LOCKED_BY=USER_LOCK
C_RESOURCES_LOADER_ID=LOADER_TYPE
C_RESOURCES_DATE_CREATED=DATE_CREATED
C_RESOURCES_DATE_LASTMODIFIED=DATE_LASTMODIFIED
C_RESOURCES_DATE_RELEASED=DATE_RELEASED
C_RESOURCES_DATE_EXPIRED=DATE_EXPIRED
C_RESOURCES_SIZE=RESOURCE_SIZE
C_RESOURCES_USER_CREATED=USER_CREATED
C_RESOURCES_USER_CREATED_NAME=USER_CREATED_NAME
C_RESOURCES_USER_LASTMODIFIED=USER_LASTMODIFIED
C_RESOURCES_LASTMODIFIED_BY_NAME=USER_LASTMODIFIED_NAME
C_RESOURCES_FILE_CONTENT=FILE_CONTENT
C_RESOURCES_STRUCTURE_STATE=STRUCTURE_STATE
C_RESOURCES_LINK_COUNT=LINK_COUNT

#
# these strings are used as replacements for ${XXX} patterns in SQL statements when the properties hash is loaded
#

# patterns for insert statements
C_TABLE_RESOURCES_ATTRIBS=\
	RESOURCE_ID,\
	RESOURCE_TYPE,\
	RESOURCE_FLAGS,\
	FILE_ID,\
	LOADER_TYPE,\
	DATE_CREATED,\
	USER_CREATED,\
	DATE_LASTMODIFIED,\
	USER_LASTMODIFIED,\
	RESOURCE_STATE,\
	RESOURCE_SIZE,\
	USER_LOCK,\
	PROJECT_ID,\
	LINK_COUNT
C_TABLE_RESOURCES_VALUES=?,?,?,?,?,?,?,?,?,?,?,?,?,?

C_TABLE_STRUCTURE_ATTRIBS=\
	STRUCTURE_ID,\
	PARENT_ID,\
	RESOURCE_ID,\
	RESOURCE_NAME,\
	STRUCTURE_STATE, \
	DATE_RELEASED, \
	DATE_EXPIRED
C_TABLE_STRUCTURE_VALUES=?,?,?,?,?,?,?

# patterns for statements to select resources/folders (= selections without content)
# THINGS TO KNOW: don't select the project-ID attrib. of the structure table per default!
# There are cases, where the project-ID attrib. of the project-resources tab. is used
# as the project-ID!
C_RESOURCES_SELECT_ATTRIBS=\
    CMS_T_STRUCTURE.STRUCTURE_ID,\
	CMS_T_STRUCTURE.PARENT_ID,\
	CMS_T_STRUCTURE.RESOURCE_ID,\
	CMS_T_STRUCTURE.RESOURCE_NAME,\
	CMS_T_STRUCTURE.STRUCTURE_STATE,\
	CMS_T_STRUCTURE.DATE_RELEASED,\
	CMS_T_STRUCTURE.DATE_EXPIRED,\
	CMS_T_RESOURCES.RESOURCE_ID,\
	CMS_T_RESOURCES.RESOURCE_TYPE,\
	CMS_T_RESOURCES.RESOURCE_FLAGS,\
	CMS_T_RESOURCES.RESOURCE_STATE,\
	CMS_T_RESOURCES.FILE_ID,\
	CMS_T_RESOURCES.LOADER_TYPE,\
	CMS_T_RESOURCES.DATE_CREATED,\
	CMS_T_RESOURCES.DATE_LASTMODIFIED,\
	CMS_T_RESOURCES.USER_CREATED,\
	CMS_T_RESOURCES.USER_LASTMODIFIED,\
	CMS_T_RESOURCES.USER_LOCK,\
	CMS_T_RESOURCES.PROJECT_ID LOCKED_IN_PROJECT,\
	CMS_T_RESOURCES.RESOURCE_SIZE,\
	CMS_T_RESOURCES.LINK_COUNT
C_RESOURCES_SELECT_TABLES=CMS_T_STRUCTURE,CMS_T_RESOURCES

C_RESOURCES_SELECT_ATTRIBS_BACKUP=\
	CMS_BACKUP_STRUCTURE.BACKUP_ID, \
	CMS_BACKUP_STRUCTURE.TAG_ID, \
	CMS_BACKUP_STRUCTURE.VERSION_ID,\
	CMS_BACKUP_STRUCTURE.STRUCTURE_ID,\
	CMS_BACKUP_STRUCTURE.PARENT_ID,\
	CMS_BACKUP_STRUCTURE.RESOURCE_NAME,\
	CMS_BACKUP_STRUCTURE.STRUCTURE_STATE,\
	CMS_BACKUP_STRUCTURE.DATE_RELEASED,\
	CMS_BACKUP_STRUCTURE.DATE_EXPIRED,\
	CMS_BACKUP_RESOURCES.RESOURCE_ID,\
	CMS_BACKUP_RESOURCES.RESOURCE_TYPE,\
	CMS_BACKUP_RESOURCES.RESOURCE_FLAGS,\
	CMS_BACKUP_RESOURCES.RESOURCE_STATE,\
	CMS_BACKUP_RESOURCES.FILE_ID,\
	CMS_BACKUP_RESOURCES.LOADER_TYPE,\
	CMS_BACKUP_RESOURCES.DATE_CREATED,\
	CMS_BACKUP_RESOURCES.DATE_LASTMODIFIED,\
	CMS_BACKUP_RESOURCES.USER_CREATED,\
	CMS_BACKUP_RESOURCES.USER_LASTMODIFIED,\
	CMS_BACKUP_RESOURCES.PROJECT_ID,\
	CMS_BACKUP_RESOURCES.RESOURCE_SIZE,\
	CMS_BACKUP_RESOURCES.LINK_COUNT,\
	CMS_BACKUP_RESOURCES.USER_CREATED_NAME,\
	CMS_BACKUP_RESOURCES.USER_LASTMODIFIED_NAME
C_RESOURCES_SELECT_TABLES_BACKUP=CMS_BACKUP_STRUCTURE,CMS_BACKUP_RESOURCES

# patterns for statements to select files (= selections WITH content)
C_FILES_SELECT_ATTRIBS=CMS_T_STRUCTURE.*,CMS_T_RESOURCES.*,CMS_T_FILES.*,CMS_T_RESOURCES.PROJECT_ID LOCKED_IN_PROJECT
C_FILES_SELECT_TABLES=CMS_T_STRUCTURE,CMS_T_RESOURCES,CMS_T_FILES

C_FILES_SELECT_ATTRIBS_BACKUP=CMS_BACKUP_RESOURCES.*,CMS_BACKUP_STRUCTURE.*,CMS_BACKUP_FILES.*,CMS_BACKUP_RESOURCES.PROJECT_ID LOCKED_IN_PROJECT
C_FILES_SELECT_TABLES_BACKUP=CMS_BACKUP_RESOURCES,CMS_BACKUP_STRUCTURE,CMS_BACKUP_FILES

C_JOIN_STRUCTURE_RESOURCE=CMS_T_STRUCTURE.RESOURCE_ID=CMS_T_RESOURCES.RESOURCE_ID
C_JOIN_RESOURCE_PROPERTY=CMS_T_STRUCTURE.RESOURCE_ID=CMS_T_PROPERTIES.RESOURCE_ID AND CMS_T_STRUCTURE.RESOURCE_NAME=CMS_T_PROPERTIES.RESOURCE_NAME
C_JOIN_STRUCTURE_RESOURCE_BACKUP=CMS_BACKUP_STRUCTURE.RESOURCE_ID=CMS_BACKUP_RESOURCES.RESOURCE_ID AND CMS_BACKUP_STRUCTURE.BACKUP_ID=CMS_BACKUP_RESOURCES.BACKUP_ID
C_JOIN_RESOURCE_PROPERTY_BACKUP=CMS_BACKUP_STRUCTURE.RESOURCE_ID=CMS_BACKUP_PROPERTIES.RESOURCE_ID AND CMS_BACKUP_STRUCTURE.RESOURCE_NAME=CMS_BACKUP_PROPERTIES.RESOURCE_NAME
C_JOIN_RESOURCE_FILE=CMS_T_RESOURCES.FILE_ID=CMS_T_FILES.FILE_ID
C_JOIN_RESOURCE_FILE_BACKUP=CMS_BACKUP_RESOURCES.FILE_ID=CMS_BACKUP_FILES.FILE_ID AND CMS_BACKUP_RESOURCES.BACKUP_ID=CMS_BACKUP_FILES.BACKUP_ID

# SQL statements

C_RESOURCES_WRITE=INSERT INTO CMS_T_RESOURCES (${C_TABLE_RESOURCES_ATTRIBS}) VALUES (${C_TABLE_RESOURCES_VALUES})
C_STRUCTURE_WRITE=INSERT INTO CMS_T_STRUCTURE (${C_TABLE_STRUCTURE_ATTRIBS}) VALUES (${C_TABLE_STRUCTURE_VALUES})

C_RESOURCES_WRITE_BACKUP=INSERT INTO CMS_BACKUP_RESOURCES (${C_TABLE_RESOURCES_ATTRIBS},TAG_ID, VERSION_ID, BACKUP_ID,USER_CREATED_NAME,USER_LASTMODIFIED_NAME) VALUES (${C_TABLE_RESOURCES_VALUES},?,?,?,?,?)
C_STRUCTURE_WRITE_BACKUP=INSERT INTO CMS_BACKUP_STRUCTURE (${C_TABLE_STRUCTURE_ATTRIBS},TAG_ID, VERSION_ID, BACKUP_ID) VALUES (${C_TABLE_STRUCTURE_VALUES},?,?,?)

C_RESOURCES_WRITE_PUBLISH_HISTORY=INSERT INTO CMS_PUBLISH_HISTORY \
	(TAG_ID,STRUCTURE_ID,RESOURCE_ID,CONTENT_ID,RESOURCE_NAME,RESOURCE_STATE,RESOURCE_TYPE,PUBLISH_ID,SIBLING_COUNT,MASTER_ID,CONTENT_DEFINITION_NAME) \
	VALUES (?,?,?,?,?,?,?,?,?,?,?)
	
	

C_RESOURCES_UPDATE_RESOURCES=UPDATE CMS_T_RESOURCES SET \
	CMS_T_RESOURCES.RESOURCE_TYPE=?,\
	CMS_T_RESOURCES.RESOURCE_FLAGS=?,\
	CMS_T_RESOURCES.LOADER_TYPE=?,\
	CMS_T_RESOURCES.DATE_LASTMODIFIED=?,\
	CMS_T_RESOURCES.USER_LASTMODIFIED=?,\
	CMS_T_RESOURCES.RESOURCE_STATE=?,\
	CMS_T_RESOURCES.RESOURCE_SIZE=?,\
	CMS_T_RESOURCES.FILE_ID=?,\
	CMS_T_RESOURCES.USER_LOCK=?,\
	CMS_T_RESOURCES.PROJECT_ID=?,\
	CMS_T_RESOURCES.LINK_COUNT=? \
	WHERE CMS_T_RESOURCES.RESOURCE_ID=?
	
C_RESOURCES_UPDATE_STRUCTURE=UPDATE CMS_T_STRUCTURE SET \
	CMS_T_STRUCTURE.PARENT_ID=?,\
	CMS_T_STRUCTURE.RESOURCE_ID=?,\
	CMS_T_STRUCTURE.RESOURCE_NAME=?,\
	CMS_T_STRUCTURE.STRUCTURE_STATE=?, \
	CMS_T_STRUCTURE.DATE_RELEASED=?, \
	CMS_T_STRUCTURE.DATE_EXPIRED=? \
	WHERE CMS_T_STRUCTURE.STRUCTURE_ID=?
	
C_RESOURCES_READ_ALL_VERSIONS_BACKUP=SELECT ${C_RESOURCES_SELECT_ATTRIBS_BACKUP},\
	CMS_BACKUP_RESOURCES.PROJECT_ID LOCKED_IN_PROJECT \
	FROM ${C_RESOURCES_SELECT_TABLES_BACKUP} \
	WHERE CMS_BACKUP_STRUCTURE.RESOURCE_ID=? AND ${C_JOIN_STRUCTURE_RESOURCE_BACKUP} \
	ORDER BY CMS_BACKUP_STRUCTURE.VERSION_ID ASC


C_RESOURCES_READ_ALL_BACKUP=SELECT ${C_RESOURCES_SELECT_ATTRIBS_BACKUP},\
	CMS_BACKUP_RESOURCES.PROJECT_ID LOCKED_IN_PROJECT \
	FROM ${C_RESOURCES_SELECT_TABLES_BACKUP} \
	WHERE ${C_JOIN_STRUCTURE_RESOURCE_BACKUP} \
	ORDER BY CMS_BACKUP_RESOURCES.VERSION_ID DESC
	
C_RESOURCES_READ_MAX_TAG_ID=SELECT MAX(TAG_ID) \
	FROM CMS_BACKUP_RESOURCES \
	WHERE CMS_BACKUP_RESOURCES.RESOURCE_ID=?
	
C_RESOURCES_READ=SELECT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE CMS_T_STRUCTURE.RESOURCE_NAME=? AND CMS_T_STRUCTURE.PARENT_ID=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE}
	ORDER BY CMS_T_STRUCTURE.STRUCTURE_STATE ASC
	
C_RESOURCES_READ_BACKUP=SELECT ${C_RESOURCES_SELECT_ATTRIBS_BACKUP},CMS_BACKUP_RESOURCES.PROJECT_ID LOCKED_IN_PROJECT \
	FROM ${C_RESOURCES_SELECT_TABLES_BACKUP} \
	WHERE CMS_BACKUP_STRUCTURE.RESOURCE_ID=? AND ${C_JOIN_STRUCTURE_RESOURCE_BACKUP} \
	AND CMS_BACKUP_STRUCTURE.TAG_ID=?
	
C_RESOURCES_READBYID=SELECT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE CMS_T_STRUCTURE.STRUCTURE_ID=? AND ${C_JOIN_STRUCTURE_RESOURCE}

#
# Warning: Expects C_STATE_UNCHANGED = 0 and all states <= 3
#
C_RESOURCES_READ_CHANGED_FOLDERS_BY_PROJECT=SELECT ${C_RESOURCES_SELECT_ATTRIBS} \
	FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE CMS_T_RESOURCES.RESOURCE_TYPE=0 AND ${C_JOIN_STRUCTURE_RESOURCE} \
	AND (CMS_T_STRUCTURE.STRUCTURE_STATE IN(1,2,3) OR CMS_T_RESOURCES.RESOURCE_STATE IN(1,2,3))
                                        
#
# Warning: Expects C_STATE_UNCHANGED = 0 and all states <= 3
#
C_RESOURCES_READ_CHANGED_FILEHEADERS=SELECT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE CMS_T_RESOURCES.RESOURCE_TYPE<>0 \
	AND (CMS_T_STRUCTURE.STRUCTURE_STATE IN(1,2,3) OR CMS_T_RESOURCES.RESOURCE_STATE IN(1,2,3)) \
	AND ${C_JOIN_STRUCTURE_RESOURCE}
	
C_RESOURCES_SELECT_CONTENT_ID=SELECT COUNT(CMS_T_FILES.FILE_ID) \
	FROM CMS_T_FILES \
	WHERE CMS_T_FILES.FILE_ID=?
	
C_RESOURCES_SELECT_STRUCTURE_ID=SELECT COUNT(CMS_T_STRUCTURE.STRUCTURE_ID) \
	FROM CMS_T_STRUCTURE \
	WHERE CMS_T_STRUCTURE.STRUCTURE_ID=?	
		
C_RESOURCES_GET_SUBRESOURCES=SELECT ${C_RESOURCES_SELECT_ATTRIBS} FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE CMS_T_STRUCTURE.PARENT_ID=? AND ${C_JOIN_STRUCTURE_RESOURCE}
	
C_RESOURCES_GET_FOLDERS_IN_FOLDER=SELECT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE CMS_T_STRUCTURE.PARENT_ID=? AND ${C_JOIN_STRUCTURE_RESOURCE} \
	AND CMS_T_RESOURCES.RESOURCE_TYPE = 0 \
	ORDER BY CMS_T_STRUCTURE.RESOURCE_NAME
	
C_RESOURCES_GET_RESOURCES_IN_FOLDER=SELECT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE CMS_T_STRUCTURE.PARENT_ID=? AND ${C_JOIN_STRUCTURE_RESOURCE} \
	AND CMS_T_RESOURCES.RESOURCE_TYPE <> 0 \
	ORDER BY CMS_T_STRUCTURE.RESOURCE_NAME
	
C_RESOURCES_GET_FOLDERTREE=SELECT CMS_T_STRUCTURE.PARENT_ID,CMS_T_STRUCTURE.STRUCTURE_ID \
	FROM CMS_T_STRUCTURE,CMS_T_RESOURCES \
	WHERE CMS_T_RESOURCES.RESOURCE_TYPE=0 \
	AND (CMS_T_STRUCTURE.STRUCTURE_STATE=? OR CMS_T_STRUCTURE.STRUCTURE_STATE=? OR CMS_T_STRUCTURE.STRUCTURE_STATE=?) \
	AND ${C_JOIN_STRUCTURE_RESOURCE}
	
C_RESOURCES_GET_RESOURCE_WITH_PROPERTYDEF=SELECT DISTINCT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES},CMS_T_PROPERTYDEF,CMS_T_PROPERTIES \
	WHERE CMS_T_PROPERTYDEF.PROPERTYDEF_NAME = ? \
	AND CMS_T_PROPERTIES.PROPERTYDEF_ID=CMS_T_PROPERTYDEF.PROPERTYDEF_ID \
	AND (\
		(CMS_T_STRUCTURE.STRUCTURE_ID=CMS_T_PROPERTIES.PROPERTY_MAPPING_ID AND CMS_T_PROPERTIES.PROPERTY_MAPPING_TYPE=?) \
		OR (CMS_T_STRUCTURE.RESOURCE_ID=CMS_T_PROPERTIES.PROPERTY_MAPPING_ID AND CMS_T_PROPERTIES.PROPERTY_MAPPING_TYPE=?)\
	) \
	AND CMS_T_STRUCTURE.RESOURCE_ID=CMS_T_RESOURCES.RESOURCE_ID \
	ORDER BY CMS_T_STRUCTURE.RESOURCE_NAME DESC
	
C_RESOURCES_GET_RESOURCE_IN_TIMERANGE=SELECT DISTINCT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE(CMS_T_STRUCTURE.RESOURCE_ID=CMS_T_RESOURCES.RESOURCE_ID) \
	AND (CMS_T_RESOURCES.DATE_LASTMODIFIED > ?  AND CMS_T_RESOURCES.DATE_LASTMODIFIED < ? )\
	ORDER BY CMS_T_RESOURCES.DATE_LASTMODIFIED DESC

C_RESOURCES_GET_RESOURCE_IN_PROJECT_WITH_STATE=SELECT DISTINCT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE(CMS_T_STRUCTURE.RESOURCE_ID=CMS_T_RESOURCES.RESOURCE_ID) \
	AND CMS_T_RESOURCES.PROJECT_ID = ? \
	AND ((CMS_T_RESOURCES.RESOURCE_STATE = ?  AND CMS_T_STRUCTURE.STRUCTURE_STATE <= ? )\
	OR (CMS_T_STRUCTURE.STRUCTURE_STATE = ?  AND CMS_T_RESOURCES.RESOURCE_STATE <= ? )) \
	ORDER BY CMS_T_STRUCTURE.RESOURCE_NAME ASC

C_RESOURCES_GET_RESOURCE_IN_PROJECT_WITHOUT_STATE=SELECT DISTINCT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE(CMS_T_STRUCTURE.RESOURCE_ID=CMS_T_RESOURCES.RESOURCE_ID) \
	AND CMS_T_RESOURCES.PROJECT_ID = ? \
	AND (CMS_T_RESOURCES.RESOURCE_STATE <> ?  OR CMS_T_STRUCTURE.STRUCTURE_STATE <> ? )\
	ORDER BY CMS_T_STRUCTURE.RESOURCE_NAME ASC	
	
C_RESOURCES_GET_RESOURCE_IN_PROJECT_IGNORE_STATE=SELECT DISTINCT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE(CMS_T_STRUCTURE.RESOURCE_ID=CMS_T_RESOURCES.RESOURCE_ID) \
	AND CMS_T_RESOURCES.PROJECT_ID = ? \
	ORDER BY CMS_T_STRUCTURE.RESOURCE_NAME ASC	
		
C_RESOURCE_REPLACE=UPDATE CMS_T_RESOURCES SET \
	CMS_T_RESOURCES.RESOURCE_TYPE=?,\
	CMS_T_RESOURCES.RESOURCE_SIZE=?, \
	CMS_T_RESOURCES.LOADER_TYPE=? \
	WHERE CMS_T_RESOURCES.RESOURCE_ID=?

C_RESOURCES_UPDATE_LINK_COUNT=UPDATE CMS_T_RESOURCES SET \
	CMS_T_RESOURCES.LINK_COUNT=? \
	WHERE CMS_T_RESOURCES.RESOURCE_ID=?
	
C_RESOURCES_UPDATE_FLAGS=UPDATE CMS_T_RESOURCES SET \
	CMS_T_RESOURCES.RESOURCE_FLAGS=? \
	WHERE CMS_T_RESOURCES.RESOURCE_ID=?
	
C_RESOURCES_UPDATE_RESOURCE_STATE=UPDATE CMS_T_RESOURCES \
    SET CMS_T_RESOURCES.RESOURCE_STATE=?, \
    	CMS_T_RESOURCES.PROJECT_ID=? \
    WHERE CMS_T_RESOURCES.RESOURCE_ID=?
	
C_RESOURCES_UPDATE_RESOURCE_STATELASTMODIFIED=UPDATE CMS_T_RESOURCES \
    SET CMS_T_RESOURCES.RESOURCE_STATE=?, \
        CMS_T_RESOURCES.DATE_LASTMODIFIED=?, \
        CMS_T_RESOURCES.USER_LASTMODIFIED=?, \
        CMS_T_RESOURCES.PROJECT_ID=? \
    WHERE CMS_T_RESOURCES.RESOURCE_ID=?	

C_RESOURCES_UPDATE_STRUCTURE_STATE=UPDATE CMS_T_STRUCTURE \
    SET CMS_T_STRUCTURE.STRUCTURE_STATE=? \
    WHERE CMS_T_STRUCTURE.STRUCTURE_ID=?
	
C_RESOURCES_UPDATE_RELEASE_EXPIRED=UPDATE CMS_T_STRUCTURE \
    SET CMS_T_STRUCTURE.DATE_RELEASED=?, \
    	CMS_T_STRUCTURE.DATE_EXPIRED=? \
    WHERE CMS_T_STRUCTURE.STRUCTURE_ID=?	
	
C_RESOURCES_READ_RESOURCE_STATE=SELECT CMS_T_RESOURCES.RESOURCE_STATE \
	FROM CMS_T_RESOURCES \
	WHERE CMS_T_RESOURCES.RESOURCE_ID=?

C_RESOURCES_COUNTLINKS=SELECT COUNT(CMS_T_STRUCTURE.STRUCTURE_ID) \
	FROM CMS_T_STRUCTURE WHERE CMS_T_STRUCTURE.RESOURCE_ID=?
		
C_RESOURCES_DELETE_BY_RESOURCEID =  DELETE FROM CMS_T_RESOURCES \
	WHERE CMS_T_RESOURCES.RESOURCE_ID=?
	
# SQL-92 compatible subquery solution
C_RESOURCES_DELETE_BY_STRUCTUREID = DELETE FROM CMS_T_RESOURCES \
	WHERE CMS_T_RESOURCES.RESOURCE_ID IN (SELECT CMS_T_STRUCTURE.RESOURCE_ID FROM CMS_T_STRUCTURE WHERE CMS_T_STRUCTURE.STRUCTURE_ID=?)

C_STRUCTURE_DELETE_BY_STRUCTUREID = DELETE FROM CMS_T_STRUCTURE \
	WHERE CMS_T_STRUCTURE.STRUCTURE_ID=?
	
# SQL-92 compatible subquery solution
C_RESOURCES_DELETE_BY_PROJECTID = DELETE FROM CMS_T_RESOURCES \
	WHERE CMS_T_RESOURCES.RESOURCE_ID IN (SELECT CMS_T_STRUCTURE.RESOURCE_ID FROM CMS_T_STRUCTURE WHERE CMS_T_RESOURCES.PROJECT_ID=?)
	
C_STRUCTURE_DELETE_BY_PROJECTID = DELETE FROM CMS_T_STRUCTURE \
	WHERE CMS_T_RESOURCES.PROJECT_ID=?
		
C_RESOURCES_UPDATE_PROJECT_ID=UPDATE CMS_T_RESOURCES \
	SET CMS_T_RESOURCES.PROJECT_ID=? \
	WHERE CMS_T_RESOURCES.RESOURCE_ID=?	

C_RESOURCES_GET_LOST_ID=SELECT CMS_T_FILES.FILE_ID FROM CMS_T_FILES WHERE CMS_T_FILES.FILE_ID NOT IN (SELECT FILE_ID FROM CMS_T_RESOURCES)

C_RESOURCES_DELETE_LOST_ID=DELETE FROM CMS_T_FILES WHERE CMS_T_FILES.FILE_ID NOT IN (SELECT FILE_ID FROM CMS_T_RESOURCES)

C_RESOURCES_BACKUP_MAXTAG=SELECT MAX(TAG_ID) FROM CMS_BACKUP_PROJECTS

C_RESOURCES_PUBLISH_MAXVER=SELECT MAX(PUBLISH_ID) FROM CMS_PUBLISH_HISTORY

C_RESOURCES_BACKUP_MAXTAG_RESOURCE=SELECT MAX(TAG_ID) FROM CMS_BACKUP_STRUCTURE

C_RESOURCES_BACKUP_MAXVER=SELECT MAX(VERSION_ID) FROM CMS_BACKUP_RESOURCES WHERE RESOURCE_ID = ?

C_RESOURCES_PROJECTVIEW=SELECT CMS_T_RESOURCES.PROJECT_ID, ${C_RESOURCES_SELECT_ATTRIBS} FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE CMS_T_RESOURCES.PROJECT_ID=? \
		AND ${C_JOIN_STRUCTURE_RESOURCE}

C_RESOURCES_READ_FILESBYTYPE=SELECT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_FILES.*,\
	CMS_T_RESOURCES.PROJECT_ID,CMS_T_RESOURCES.PROJECT_ID LOCKED_IN_PROJECT \
	FROM ${C_RESOURCES_SELECT_TABLES},CMS_T_FILES \
	WHERE ${C_JOIN_STRUCTURE_RESOURCE} AND ${C_JOIN_RESOURCE_FILE} \
	AND CMS_T_RESOURCES.RESOURCE_TYPE=? ORDER BY RESOURCE_NAME
	
C_HISTORY_RESOURCE_MAX_BACKUP_VERSION=SELECT MAX(CMS_BACKUP_STRUCTURE.VERSION_ID) \
	FROM CMS_BACKUP_STRUCTURE \
	WHERE CMS_BACKUP_STRUCTURE.RESOURCE_ID=? \

# Files

C_FILE_ID=FILE_ID
C_FILE_CONTENT=FILE_CONTENT

C_FILES_WRITE=INSERT INTO CMS_T_FILES VALUES(?,?)

C_FILES_WRITE_BACKUP=INSERT INTO CMS_BACKUP_FILES (FILE_ID,FILE_CONTENT,TAG_ID,VERSION_ID,BACKUP_ID) VALUES (?,?,?,?,?)

C_FILES_UPDATE=UPDATE CMS_T_FILES SET FILE_CONTENT=? WHERE FILE_ID=?

C_FILES_READ=SELECT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_FILES.FILE_CONTENT,\
	CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES},CMS_T_FILES \
	WHERE ${C_JOIN_RESOURCE_FILE} AND ${C_JOIN_STRUCTURE_RESOURCE} \
	AND CMS_T_STRUCTURE.STRUCTURE_ID=?  \
	ORDER BY CMS_T_RESOURCES.PROJECT_ID DESC
	
C_FILES_READ_BACKUP=SELECT ${C_RESOURCES_SELECT_ATTRIBS_BACKUP},CMS_BACKUP_FILES.FILE_CONTENT,\
	CMS_BACKUP_RESOURCES.PROJECT_ID LOCKED_IN_PROJECT \
	FROM ${C_RESOURCES_SELECT_TABLES_BACKUP},CMS_BACKUP_FILES \
	WHERE CMS_BACKUP_STRUCTURE.RESOURCE_ID=? \
	AND CMS_BACKUP_STRUCTURE.TAG_ID=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE_BACKUP} \
	AND ${C_JOIN_RESOURCE_FILE_BACKUP}

C_FILE_STRUCTURE_DELETE_BY_STRUCTURE_ID=\
DELETE FROM CMS_T_STRUCTURE WHERE CMS_T_STRUCTURE.STRUCTURE_ID=?

C_FILE_RESOURCE_DELETE_BY_STRUCTURE_ID=\
DELETE FROM CMS_T_RESOURCES WHERE CMS_T_RESOURCES.RESOURCE_ID=\
	(SELECT CMS_T_STRUCTURE.RESOURCE_ID FROM CMS_T_STRUCTURE \
		WHERE CMS_T_STRUCTURE.STRUCTURE_ID=?)

C_FILE_CONTENT_DELETE_BY_STRUCTURE_ID=\
DELETE FROM CMS_T_FILES WHERE CMS_T_FILES.FILE_ID=\
	(SELECT CMS_T_RESOURCES.FILE_ID FROM CMS_T_RESOURCES, CMS_T_STRUCTURE \
		WHERE CMS_T_RESOURCES.RESOURCE_ID=CMS_T_STRUCTURE.RESOURCE_ID AND \
			CMS_T_STRUCTURE.STRUCTURE_ID=? )

C_FILE_CONTENT_DELETE=DELETE FROM CMS_T_FILES WHERE FILE_ID=?

C_FILE_DELETE_BY_NAME=DELETE CMS_T_STRUCTURE.*,CMS_T_RESOURCES.*,CMS_T_FILES.* \
	FROM CMS_T_STRUCTURE,CMS_T_RESOURCES,CMS_T_FILES \
	WHERE CMS_T_STRUCTURE.PARENT_ID=? AND CMS_T_STRUCTURE.RESOURCE_NAME=? \
	AND ${C_JOIN_RESOURCE_FILE} AND ${C_JOIN_STRUCTURE_RESOURCE}
	
C_FILE_DELETE_BY_ID=DELETE CMS_T_STRUCTURE.*,CMS_T_RESOURCES.*,CMS_T_FILES.* \
	FROM CMS_T_STRUCTURE,CMS_T_RESOURCES,CMS_T_FILES \
	WHERE CMS_T_STRUCTURE.STRUCTURE_ID=? \
	AND ${C_JOIN_RESOURCE_FILE} AND ${C_JOIN_STRUCTURE_RESOURCE}	

C_FILE_READ=SELECT FILE_CONTENT FROM CMS_T_FILES WHERE FILE_ID=?

#
# Propertydefinitions
#
C_PROPERTYDEF_ID=PROPERTYDEF_ID
C_PROPERTYDEF_NAME=PROPERTYDEF_NAME
C_PROPERTYDEF_PROPERTYDEF_MAPPING_TYPE=PROPERTYDEF_MAPPING_TYPE
C_PROPERTYDEF_MAXID=SELECT MAX(PROPERTYDEF_ID) FROM CMS_T_PROPERTYDEF
C_PROPERTYDEF_MAXID_BACKUP=SELECT MAX(PROPERTYDEF_ID) FROM CMS_BACKUP_PROPERTYDEF
C_PROPERTYDEF_READ=SELECT * FROM CMS_T_PROPERTYDEF \
                   WHERE PROPERTYDEF_NAME=?  \
                   AND PROPERTYDEF_MAPPING_TYPE=?
C_PROPERTYDEF_READ_BACKUP=SELECT * FROM CMS_BACKUP_PROPERTYDEF \
                          WHERE PROPERTYDEF_NAME=?  \
                          AND PROPERTYDEF_MAPPING_TYPE=?
C_PROPERTYDEF_READALL=SELECT * FROM CMS_T_PROPERTYDEF WHERE PROPERTYDEF_MAPPING_TYPE=?
C_PROPERTYDEF_READALL_BACKUP=SELECT * FROM CMS_BACKUP_PROPERTYDEF WHERE PROPERTYDEF_MAPPING_TYPE=?
C_PROPERTYDEF_CREATE=INSERT INTO CMS_T_PROPERTYDEF VALUES(?,?,?)
C_PROPERTYDEF_CREATE_BACKUP=INSERT INTO CMS_BACKUP_PROPERTYDEF VALUES(?,?,?)
C_PROPERTYDEF_DELETE=DELETE FROM CMS_T_PROPERTYDEF WHERE PROPERTYDEF_ID=?
C_PROPERTYDEF_DELETE_BACKUP=DELETE FROM CMS_BACKUP_PROPERTYDEF WHERE PROPERTYDEF_ID=?

#
# Properties
#
C_PROPERTY_VALUE=PROPERTY_VALUE
C_PROPERTY_RESOURCE_ID=RESOURCE_ID
# Statements
C_PROPERTIES_MAXID=SELECT MAX(PROPERTY_ID) FROM CMS_T_PROPERTIES
C_PROPERTIES_MAXID_BACKUP=SELECT MAX(PROPERTY_ID) FROM CMS_BACKUP_PROPERTIES
C_PROPERTIES_READALL_COUNT=SELECT count(*) FROM CMS_T_PROPERTIES WHERE PROPERTYDEF_ID=?
C_PROPERTIES_READALL_COUNT_BACKUP=SELECT count(*) FROM CMS_BACKUP_PROPERTIES WHERE PROPERTYDEF_ID=?

C_PROPERTIES_READ_BACKUP=SELECT CMS_BACKUP_PROPERTIES.PROPERTY_VALUE FROM CMS_BACKUP_PROPERTIES, CMS_BACKUP_PROPERTYDEF \
                         WHERE CMS_BACKUP_PROPERTIES.PROPERTYDEF_ID=CMS_BACKUP_PROPERTYDEF.PROPERTYDEF_ID \
                         AND CMS_BACKUP_PROPERTIES.RESOURCE_ID=?  \
                         AND CMS_BACKUP_PROPERTIES.RESOURCE_NAME=?  \
                         AND CMS_BACKUP_PROPERTYDEF.PROPERTYDEF_NAME=? \
                         AND CMS_BACKUP_PROPERTYDEF.PROPERTYDEF_MAPPING_TYPE=?
C_PROPERTIES_UPDATE=UPDATE CMS_T_PROPERTIES SET PROPERTY_VALUE=? \
	WHERE PROPERTY_MAPPING_ID=? AND PROPERTY_MAPPING_TYPE=? AND PROPERTYDEF_ID=?
C_PROPERTIES_UPDATE_BACKUP=UPDATE CMS_BACKUP_PROPERTIES SET PROPERTY_VALUE=? \
	WHERE RESOURCE_ID=? AND RESOURCE_NAME=? AND PROPERTYDEF_ID=?
C_PROPERTIES_CREATE=INSERT INTO CMS_T_PROPERTIES (PROPERTY_ID,PROPERTYDEF_ID,PROPERTY_MAPPING_ID,PROPERTY_MAPPING_TYPE,PROPERTY_VALUE) VALUES (?,?,?,?,?)
C_PROPERTIES_CREATE_BACKUP=INSERT INTO CMS_BACKUP_PROPERTIES \
	(BACKUP_ID,PROPERTY_ID,PROPERTYDEF_ID,PROPERTY_MAPPING_ID,PROPERTY_MAPPING_TYPE,PROPERTY_VALUE,TAG_ID,VERSION_ID) \
	VALUES (?,?,?,?,?,?,?,?)

C_PROPERTIES_READ=SELECT CMS_T_PROPERTIES.PROPERTY_VALUE, CMS_T_PROPERTIES.PROPERTY_MAPPING_TYPE \
	FROM CMS_T_PROPERTYDEF, CMS_T_PROPERTIES \
		WHERE (CMS_T_PROPERTYDEF.PROPERTYDEF_NAME=? AND CMS_T_PROPERTYDEF.PROPERTYDEF_MAPPING_TYPE=?) \
        AND   (CMS_T_PROPERTIES.PROPERTYDEF_ID=CMS_T_PROPERTYDEF.PROPERTYDEF_ID) \
	AND (CMS_T_PROPERTIES.PROPERTY_MAPPING_ID=? OR CMS_T_PROPERTIES.PROPERTY_MAPPING_ID=?)

C_PROPERTIES_READALL=SELECT CMS_T_PROPERTYDEF.PROPERTYDEF_NAME, CMS_T_PROPERTIES.PROPERTY_VALUE, \
	CMS_T_PROPERTIES.PROPERTY_MAPPING_TYPE \
	FROM CMS_T_PROPERTYDEF, CMS_T_PROPERTIES \
	WHERE (CMS_T_PROPERTIES.PROPERTY_MAPPING_ID=? OR CMS_T_PROPERTIES.PROPERTY_MAPPING_ID=?) \
	AND (CMS_T_PROPERTIES.PROPERTYDEF_ID=CMS_T_PROPERTYDEF.PROPERTYDEF_ID) \
	AND (CMS_T_PROPERTYDEF.PROPERTYDEF_MAPPING_TYPE=?)
                     
                     
C_PROPERTIES_READALL_BACKUP=SELECT CMS_BACKUP_PROPERTYDEF.PROPERTYDEF_NAME, \
	CMS_BACKUP_PROPERTIES.PROPERTY_VALUE, CMS_BACKUP_PROPERTIES.PROPERTY_MAPPING_TYPE \
	FROM CMS_BACKUP_PROPERTIES, CMS_BACKUP_PROPERTYDEF \
	WHERE CMS_BACKUP_PROPERTIES.PROPERTYDEF_ID=CMS_BACKUP_PROPERTYDEF.PROPERTYDEF_ID \
	AND (CMS_BACKUP_PROPERTIES.PROPERTY_MAPPING_ID=? OR CMS_BACKUP_PROPERTIES.PROPERTY_MAPPING_ID=?) \
	AND CMS_BACKUP_PROPERTYDEF.PROPERTYDEF_MAPPING_TYPE=? \
	AND CMS_BACKUP_PROPERTIES.TAG_ID=?
                            
C_PROPERTIES_DELETE_ALL_STRUCTURE_AND_RESOURCE_VALUES=DELETE FROM CMS_T_PROPERTIES WHERE \
	(PROPERTY_MAPPING_ID=? AND PROPERTY_MAPPING_TYPE=?) \
	OR (PROPERTY_MAPPING_ID=? AND PROPERTY_MAPPING_TYPE=?)
	
C_PROPERTIES_DELETE_ALL_VALUES_FOR_MAPPING_TYPE=DELETE FROM CMS_T_PROPERTIES WHERE \
	PROPERTY_MAPPING_ID=? AND PROPERTY_MAPPING_TYPE=?
	
C_PROPERTIES_DELETEALL_BACKUP=DELETE FROM CMS_BACKUP_PROPERTIES \
	WHERE BACKUP_ID=? \
	AND TAG_ID=? \
	AND (\
		(PROPERTY_MAPPING_ID=? AND PROPERTY_MAPPING_TYPE=?) \
		OR (PROPERTY_MAPPING_ID=? AND PROPERTY_MAPPING_TYPE=?)\
	)

C_PROPERTIES_DELETE=DELETE FROM CMS_T_PROPERTIES \
                    WHERE PROPERTYDEF_ID=?  \
                    AND PROPERTY_MAPPING_ID=? AND PROPERTY_MAPPING_TYPE=?
C_PROPERTIES_DELETE_BACKUP=DELETE FROM CMS_BACKUP_PROPERTIES \
                           WHERE PROPERTYDEF_ID=?  \
                           AND STRUCTURE_ID=?
C_PROPERTIES_DELETEALLPROP_BACKUP=DELETE FROM CMS_BACKUP_PROPERTIES

#
# Groups
#
C_GROUPS_GROUP_ID=GROUP_ID
C_GROUPS_PARENT_GROUP_ID=PARENT_GROUP_ID
C_GROUPS_GROUP_NAME=GROUP_NAME
C_GROUPS_GROUP_DESCRIPTION=GROUP_DESCRIPTION
C_GROUPS_GROUP_FLAGS=GROUP_FLAGS
C_GROUPS_MAXID=SELECT MAX(GROUP_ID) FROM CMS_GROUPS
C_GROUPS_READGROUP=SELECT * FROM CMS_GROUPS WHERE GROUP_NAME=?
C_GROUPS_READGROUP2=SELECT * FROM CMS_GROUPS WHERE GROUP_ID=?
C_GROUPS_CREATEGROUP=INSERT INTO CMS_GROUPS VALUES(?,?,?,?,?)
C_GROUPS_WRITEGROUP=UPDATE CMS_GROUPS SET \
                    GROUP_DESCRIPTION=?, GROUP_FLAGS=?, PARENT_GROUP_ID=?  \
                    WHERE GROUP_ID=?
C_GROUPS_DELETEGROUP=DELETE FROM CMS_GROUPS WHERE GROUP_NAME=?
C_GROUPS_GETGROUPS=SELECT * FROM CMS_GROUPS ORDER BY GROUP_NAME
C_GROUPS_GETCHILD=SELECT * FROM CMS_GROUPS WHERE PARENT_GROUP_ID=?
C_GROUPS_GETPARENT=SELECT * FROM CMS_GROUPS WHERE GROUP_ID=?
C_GROUPS_GETGROUPSOFUSER=SELECT * FROM CMS_GROUPS G, CMS_GROUPUSERS GU \
                         WHERE GU.USER_ID=?  \
                         AND G.GROUP_ID=GU.GROUP_ID
C_GROUPS_ADDUSERTOGROUP=INSERT INTO CMS_GROUPUSERS (GROUP_ID,USER_ID,GROUPUSER_FLAGS) VALUES (?,?,?)
C_GROUPS_USERINGROUP=SELECT * FROM CMS_GROUPUSERS WHERE GROUP_ID=?  AND USER_ID=?
C_GROUPS_GETUSERSOFGROUP=SELECT U.USER_INFO, U.USER_ID, U.USER_NAME, U.USER_PASSWORD, U.USER_RECOVERY_PASSWORD, \
                         U.USER_DESCRIPTION, U.USER_FIRSTNAME, U.USER_LASTNAME, U.USER_EMAIL, \
                         U.USER_LASTLOGIN, U.USER_LASTUSED, U.USER_FLAGS, U.USER_DEFAULT_GROUP_ID, DG.PARENT_GROUP_ID, \
                         DG.GROUP_NAME, DG.GROUP_DESCRIPTION, DG.GROUP_FLAGS, U.USER_ADDRESS, U.USER_SECTION, U.USER_TYPE \
                         FROM CMS_GROUPS G, CMS_USERS U, CMS_GROUPUSERS GU, CMS_GROUPS  DG \
                         WHERE G.GROUP_NAME=?  \
                         AND U.USER_ID=GU.USER_ID \
                         AND GU.GROUP_ID=G.GROUP_ID \
                         AND U.USER_DEFAULT_GROUP_ID=DG.GROUP_ID \
                         AND U.USER_TYPE IN (?, 2)  \
                         ORDER BY USER_NAME
C_GROUPS_REMOVEUSERFROMGROUP=DELETE FROM CMS_GROUPUSERS WHERE GROUP_ID=?  AND USER_ID=?

#
# Users
#
C_USERS_USER_ID=USER_ID
C_USERS_USER_NAME=USER_NAME
C_USERS_USER_PASSWORD=USER_PASSWORD
C_USERS_USER_RECOVERY_PASSWORD=USER_RECOVERY_PASSWORD
C_USERS_USER_DESCRIPTION=USER_DESCRIPTION
C_USERS_USER_FIRSTNAME=USER_FIRSTNAME
C_USERS_USER_LASTNAME=USER_LASTNAME
C_USERS_USER_LASTLOGIN=USER_LASTLOGIN
C_USERS_USER_LASTUSED=USER_LASTUSED
C_USERS_USER_FLAGS=USER_FLAGS
C_USERS_USER_INFO=USER_INFO
C_USERS_USER_DEFAULT_GROUP_ID=USER_DEFAULT_GROUP_ID
C_USERS_USER_ADDRESS=USER_ADDRESS
C_USERS_USER_SECTION=USER_SECTION
C_USERS_USER_TYPE=USER_TYPE
C_USERS_USER_EMAIL=USER_EMAIL
C_USERS_MAXID=SELECT MAX(USER_ID) FROM CMS_USERS
C_USERS_ADD=INSERT INTO CMS_USERS (USER_ID, USER_NAME, USER_PASSWORD, USER_RECOVERY_PASSWORD, \
USER_DESCRIPTION, USER_FIRSTNAME, USER_LASTNAME, USER_EMAIL, USER_LASTLOGIN, USER_LASTUSED, USER_FLAGS, \
USER_INFO, USER_DEFAULT_GROUP_ID, USER_ADDRESS, USER_SECTION, USER_TYPE) \
VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
C_USERS_READ=SELECT USER_INFO,USER_ID,USER_NAME,USER_PASSWORD,USER_RECOVERY_PASSWORD,USER_DESCRIPTION, \
             USER_FIRSTNAME,USER_LASTNAME,USER_EMAIL,USER_LASTLOGIN,USER_LASTUSED,USER_FLAGS, \
             GROUP_ID,PARENT_GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_FLAGS, \
             USER_ADDRESS,USER_SECTION,USER_TYPE \
             FROM CMS_USERS, CMS_GROUPS \
             WHERE USER_NAME=?  \
             AND USER_TYPE IN (?, 2)  \
             AND USER_DEFAULT_GROUP_ID=GROUP_ID
C_USERS_READID=SELECT USER_INFO,USER_ID,USER_NAME,USER_PASSWORD,USER_RECOVERY_PASSWORD,USER_DESCRIPTION, \
             USER_FIRSTNAME,USER_LASTNAME,USER_EMAIL,USER_LASTLOGIN,USER_LASTUSED,USER_FLAGS, \
             GROUP_ID,PARENT_GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_FLAGS, \
             USER_ADDRESS,USER_SECTION,USER_TYPE \
             FROM CMS_USERS, CMS_GROUPS \
               WHERE USER_ID=?  \
               AND USER_DEFAULT_GROUP_ID=GROUP_ID
C_USERS_READPW=SELECT USER_INFO,USER_ID,USER_NAME,USER_PASSWORD,USER_RECOVERY_PASSWORD,USER_DESCRIPTION, \
             USER_FIRSTNAME,USER_LASTNAME,USER_EMAIL,USER_LASTLOGIN,USER_LASTUSED,USER_FLAGS, \
             GROUP_ID,PARENT_GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_FLAGS, \
             USER_ADDRESS,USER_SECTION,USER_TYPE \
             FROM CMS_USERS, CMS_GROUPS \
               WHERE USER_NAME=?  \
               AND USER_PASSWORD=?  \
               AND USER_TYPE IN (?, 2)  \
               AND USER_DEFAULT_GROUP_ID=GROUP_ID
C_USERS_WRITE=UPDATE CMS_USERS SET USER_DESCRIPTION=?, USER_FIRSTNAME=?, USER_LASTNAME=?, \
              USER_EMAIL=?, USER_LASTLOGIN=?, USER_LASTUSED=?, USER_FLAGS=?, USER_INFO=?, \
              USER_DEFAULT_GROUP_ID=?, USER_ADDRESS=?, USER_SECTION=?, USER_TYPE=?  \
              WHERE USER_ID=?
C_USERS_DELETE=DELETE FROM CMS_USERS WHERE USER_NAME=?
C_USERS_GETUSERS=SELECT USER_INFO,USER_ID,USER_NAME,USER_PASSWORD,USER_RECOVERY_PASSWORD,USER_DESCRIPTION, \
                 USER_FIRSTNAME,USER_LASTNAME,USER_EMAIL,USER_LASTLOGIN,USER_LASTUSED,USER_FLAGS, \
                 GROUP_ID,PARENT_GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_FLAGS, \
                 USER_ADDRESS,USER_SECTION,USER_TYPE \
                 FROM CMS_USERS, CMS_GROUPS \
                 WHERE USER_TYPE IN (?, 2)  \
                 AND USER_DEFAULT_GROUP_ID=GROUP_ID \
                 ORDER BY USER_NAME
C_USERS_SETPW=UPDATE CMS_USERS SET USER_PASSWORD=?  \
              WHERE USER_NAME=?
C_USERS_SETRECPW=UPDATE CMS_USERS SET USER_RECOVERY_PASSWORD=?  \
                 WHERE USER_NAME=?
C_USERS_RECOVERPW=UPDATE CMS_USERS SET USER_PASSWORD=?  \
                  WHERE USER_NAME=? \
                  AND USER_RECOVERY_PASSWORD=?

C_USERS_GETUSERS_FILTER1=SELECT USER_INFO,USER_ID,USER_NAME,USER_PASSWORD,USER_RECOVERY_PASSWORD,USER_DESCRIPTION, \
                         USER_FIRSTNAME,USER_LASTNAME,USER_EMAIL,USER_LASTLOGIN,USER_LASTUSED,USER_FLAGS, \
                         GROUP_ID,PARENT_GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_FLAGS, \
                         USER_ADDRESS,USER_SECTION,USER_TYPE \
                         FROM CMS_USERS, CMS_GROUPS \
                         WHERE USER_TYPE IN (
C_USERS_GETUSERS_FILTER2= ,2)AND USER_DEFAULT_GROUP_ID=GROUP_ID AND USER_NAME LIKE '
C_USERS_GETUSERS_FILTER3=%' ORDER BY USER_NAME
C_USERS_GETUSERS_BY_LASTNAME=SELECT USER_INFO,USER_ID,USER_NAME,USER_PASSWORD,USER_RECOVERY_PASSWORD,USER_DESCRIPTION, \
                             USER_FIRSTNAME,USER_LASTNAME,USER_EMAIL,USER_LASTLOGIN,USER_LASTUSED,USER_FLAGS, \
                             GROUP_ID,PARENT_GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_FLAGS, \
                             USER_ADDRESS,USER_SECTION,USER_TYPE \
                             FROM CMS_USERS, CMS_GROUPS \
                             WHERE LOWER(USER_LASTNAME) LIKE LOWER(?) \
                             AND USER_DEFAULT_GROUP_ID=GROUP_ID \
                             AND USER_TYPE IN (?, 2)  \
                             AND USER_FLAGS=?
C_USERS_GETUSERS_BY_LASTNAME_TAIL=ORDER BY USER_LASTNAME
C_USERS_GETUSERS_BY_LASTNAME_NEVER=SELECT USER_INFO,USER_ID,USER_NAME,USER_PASSWORD,USER_RECOVERY_PASSWORD,USER_DESCRIPTION, \
                                   USER_FIRSTNAME,USER_LASTNAME,USER_EMAIL,USER_LASTLOGIN,USER_LASTUSED,USER_FLAGS, \
                                   GROUP_ID,PARENT_GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_FLAGS, \
                                   USER_ADDRESS,USER_SECTION,USER_TYPE \
                                   FROM CMS_USERS, CMS_GROUPS \
                                   WHERE LOWER(USER_LASTNAME) LIKE LOWER(?) \
                                   AND USER_DEFAULT_GROUP_ID=GROUP_ID \
                                   AND USER_TYPE IN (?, 2)  \
                                   AND USER_FLAGS=?  \
                                   AND TO_CHAR(USER_LASTLOGIN,'dd.mm.yyyy')='01.01.1970' \
                                   ORDER BY USER_LASTNAME
C_USERS_GETUSERS_BY_LASTNAME_ONCE=SELECT USER_INFO,USER_ID,USER_NAME,USER_PASSWORD,USER_RECOVERY_PASSWORD,USER_DESCRIPTION, \
                                  USER_FIRSTNAME,USER_LASTNAME,USER_EMAIL,USER_LASTLOGIN,USER_LASTUSED,USER_FLAGS, \
                                  GROUP_ID,PARENT_GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_FLAGS, \
                                  USER_ADDRESS,USER_SECTION,USER_TYPE \
                                  FROM CMS_USERS, CMS_GROUPS \
                                   WHERE LOWER(USER_LASTNAME) LIKE LOWER(?) \
                                   AND USER_DEFAULT_GROUP_ID=GROUP_ID \
                                   AND USER_TYPE IN (?, 2)  \
                                   AND USER_FLAGS=?  \
                                   AND TO_CHAR(USER_LASTLOGIN,'dd.mm.yyyy') > '01.01.1970' \
                                   ORDER BY USER_LASTNAME
C_USERS_GETUSERS_BY_LASTNAME_WHATEVER=SELECT USER_INFO,USER_ID,USER_NAME,USER_PASSWORD,USER_RECOVERY_PASSWORD,USER_DESCRIPTION, \
                                      USER_FIRSTNAME,USER_LASTNAME,USER_EMAIL,USER_LASTLOGIN,USER_LASTUSED,USER_FLAGS, \
                                      GROUP_ID,PARENT_GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_FLAGS, \
                                      USER_ADDRESS,USER_SECTION,USER_TYPE \
                                      FROM CMS_USERS, CMS_GROUPS \
                                      WHERE LOWER(USER_LASTNAME) LIKE LOWER(?) \
                                      AND USER_DEFAULT_GROUP_ID=GROUP_ID \
                                      AND USER_TYPE IN (?, 2) \
                                      AND USER_FLAGS=?  \
                                      ORDER BY USER_LASTNAME
C_USERS_UPDATE_USERTYPE=UPDATE CMS_USERS SET USER_TYPE = ? WHERE USER_ID = ?

#
# Tasks, Tasklog, Taskpar
#
C_TABLENAME_TASK=CMS_TASK
C_TABLENAME_TASKLOG=CMS_TASKLOG
C_TABLENAME_TASKTYPE=CMS_TASKTYPE
C_TABLENAME_TASKPAR=CMS_TASKPAR
C_ID=ID
C_TASK_ID=ID
C_TASK_NAME=NAME
C_TASK_STATE=STATE
C_TASK_ROOT=ROOT
C_TASK_PARENT=PARENT
C_TASK_TASKTYPE=TASKTYPEREF
C_TASK_INITIATORUSER=INITIATORUSERREF
C_TASK_ROLE=ROLEREF
C_TASK_AGENTUSER=AGENTUSERREF
C_TASK_ORIGINALUSER=ORIGINALUSERREF
C_TASK_STARTTIME=STARTTIME
C_TASK_WAKEUPTIME=WAKEUPTIME
C_TASK_TIMEOUT=TIMEOUT
C_TASK_ENDTIME=ENDTIME
C_TASK_PERCENTAGE=PERCENTAGE
C_TASK_PERMISSION=PERMISSION
C_TASK_PRIORITY=PRIORITYREF
C_TASK_ESCALATIONTYPE=ESCALATIONTYPEREF
C_TASK_HTMLLINK=HTMLLINK
C_TASK_MILESTONE=MILESTONEREF
C_TASK_AUTOFINISH=AUTOFINISH
C_LOG_ID=CMS_TASKLOG.ID
C_LOG_COMMENT=CMS_TASKLOG.COMENT
C_LOG_EXUSERNAME=CMS_TASKLOG.EXTERNALUSERNAME
C_LOG_STARTTIME=CMS_TASKLOG.STARTTIME
C_LOG_TASK=CMS_TASKLOG.TASKREF
C_LOG_USER=CMS_TASKLOG.USERREF
C_LOG_TYPE=CMS_TASKLOG.TYPE
C_TASKLOG_ID=ID
C_TASKLOG_COMMENT=COMENT
C_TASKLOG_EXUSERNAME=EXTERNALUSERNAME
C_TASKLOG_STARTTIME=STARTTIME
C_TASKLOG_TASK=TASKREF
C_TASKLOG_USER=USERREF
C_TASKLOG_TYPE=TYPE
C_PAR_ID=ID
C_PAR_NAME=PARNAME
C_PAR_VALUE=PARVALUE
C_PAR_TASK=REF
C_TASK_TYPE_FIELDS=AUTOFINISH, ESCALATIONTYPEREF, HTMLLINK, NAME, PERMISSION, PRIORITYREF, ROLEREF
C_TASK_FIELDS=AUTOFINISH, ENDTIME, ESCALATIONTYPEREF, ID, INITIATORUSERREF, MILESTONEREF, NAME, ORIGINALUSERREF, AGENTUSERREF, PARENT, PERCENTAGE, PERMISSION, PRIORITYREF, ROLEREF, ROOT, STARTTIME, STATE, TASKTYPEREF, TIMEOUT, WAKEUPTIME, HTMLLINK
C_TASK_CREATE=INSERT INTO CMS_TASK (ID) VALUES (?)
C_TASK_UPDATE=UPDATE CMS_TASK SET \
              NAME=?, STATE=?, TASKTYPEREF=?, ROOT=?, PARENT=?, INITIATORUSERREF=?, ROLEREF=?, AGENTUSERREF=?, \
              ORIGINALUSERREF=?, STARTTIME=?, WAKEUPTIME=?, TIMEOUT=?, ENDTIME=?, PERCENTAGE=?, PERMISSION=?, \
              PRIORITYREF=?, ESCALATIONTYPEREF=?, HTMLLINK=?, MILESTONEREF=?, AUTOFINISH=?  \
              WHERE ID=?
C_TASK_READ=SELECT AUTOFINISH, ENDTIME, ESCALATIONTYPEREF, ID, INITIATORUSERREF, MILESTONEREF, NAME, \
            ORIGINALUSERREF, AGENTUSERREF, PARENT, PERCENTAGE, PERMISSION, PRIORITYREF, ROLEREF, ROOT, \
            STARTTIME, STATE, TASKTYPEREF, TIMEOUT, WAKEUPTIME, HTMLLINK \
            FROM CMS_TASK WHERE ID=?
C_TASK_READ_STATEMENT=SELECT AUTOFINISH, ENDTIME, ESCALATIONTYPEREF, ID, INITIATORUSERREF, MILESTONEREF, NAME, \
                      ORIGINALUSERREF, AGENTUSERREF, PARENT, PERCENTAGE, PERMISSION, PRIORITYREF, ROLEREF, ROOT, \
                      STARTTIME, STATE, TASKTYPEREF, TIMEOUT, WAKEUPTIME, HTMLLINK \
                      FROM CMS_TASK WHERE ID=
C_TASK_END=UPDATE CMS_TASK SET \
           STATE=4, PERCENTAGE=?, ENDTIME=?  \
           WHERE ID=?
C_TASKLOG_WRITE=INSERT INTO CMS_TASKLOG \
                (ID, TASKREF, USERREF, STARTTIME, COMENT, TYPE) VALUES (?,?,?,?,?,?)
C_TASKLOG_READ=SELECT * FROM CMS_TASKLOG WHERE ID=?
C_TASK_FIND_AGENT=SELECT CMS_USERS.USER_ID FROM CMS_GROUPUSERS, CMS_USERS \
                  WHERE GROUP_ID=?  \
                  AND CMS_GROUPUSERS.USER_ID=CMS_USERS.USER_ID \
                  ORDER BY USER_LASTUSED ASC
C_TASK_FORWARD=UPDATE CMS_TASK SET ROLEREF=?, AGENTUSERREF=?  \
               WHERE ID=?
C_TASKLOG_READ_LOGS=SELECT * FROM CMS_TASKLOG \
                    WHERE TASKREF=?  \
                    ORDER BY STARTTIME
C_TASKLOG_READ_PPROJECTLOGS=SELECT ID, COMENT, TASKREF, USERREF, STARTTIME, TYPE, EXTERNALUSERNAME \
                            FROM CMS_TASKLOG, CMS_TASK \
                            WHERE TASKREF = CMS_TASK.ID \
                            AND CMS_TASK.ROOT=?  \
                            ORDER BY STARTTIME
C_TASKPAR_TEST=SELECT * FROM CMS_TASKPAR WHERE REF=?  AND PARNAME=?
C_TASKPAR_UPDATE=UPDATE CMS_TASKPAR SET PARVALUE=?  WHERE ID=?
C_TASKPAR_INSERT=INSERT INTO CMS_TASKPAR(ID, REF, PARNAME, PARVALUE) VALUES (?,?,?,?)
C_TASKPAR_GET=SELECT * FROM CMS_TASKPAR WHERE REF=?  AND PARNAME=?
C_TASK_GET_TASKTYPE=SELECT id FROM CMS_TASKTYPE WHERE name=?
C_TASKTYPE_UPDATE=UPDATE CMS_TASKTYPE SET \
                  AUTOFINISH=?, ESCALATIONTYPEREF=?, HTMLLINK=?, NAME=?, \
                  PERMISSION=?, PRIORITYREF=?, ROLEREF =?  \
                  WHERE ID=?
C_TASKTYPE_INSERT=INSERT INTO CMS_TASKTYPE \
                  (AUTOFINISH, ESCALATIONTYPEREF, HTMLLINK, ID, NAME, PERMISSION, PRIORITYREF, ROLEREF) \
                  VALUES (?,?,?,?,?,?,?,?)

#
# Systemid
#
C_SYSTEMID_ID=ID
C_SYSTEMID_INIT=INSERT INTO CMS_SYSTEMID VALUES(?,1)
C_SYSTEMID_LOCK=LOCK TABLE CMS_SYSTEMID IN EXCLUSIVE MODE
C_SYSTEMID_READ=SELECT ID FROM CMS_SYSTEMID WHERE TABLE_KEY=?
C_SYSTEMID_WRITE=UPDATE CMS_SYSTEMID SET ID=?  WHERE TABLE_KEY=?
C_SYSTEMID_UNLOCK=commit

#
# Statements for cleaning the backup
#
C_BACKUP_READ_MAXVERSION=SELECT MAX(TAG_ID) FROM CMS_BACKUP_PROJECTS WHERE PROJECT_PUBLISHDATE < ?
C_BACKUP_DELETE_PROJECT_BYVERSION=DELETE FROM CMS_BACKUP_PROJECTS WHERE TAG_ID < ?
C_BACKUP_DELETE_PROJECTRESOURCES_BYVERSION=DELETE FROM CMS_BACKUP_PROJECTRESOURCES WHERE TAG_ID < ?
C_BACKUP_DELETE_RESOURCES_BYVERSION=DELETE CMS_BACKUP_STRUCTURE.*,CMS_BACKUP_RESOURCES.* FROM CMS_BACKUP_STRUCTURE,CMS_BACKUP_RESOURCES WHERE CMS_BACKUP_STRUCTURE.TAG_ID < ?
C_BACKUP_DELETE_FILES_BYVERSION=DELETE FROM CMS_BACKUP_FILES WHERE TAG_ID < ?
C_BACKUP_DELETE_PROPERTIES_BYVERSION=DELETE FROM CMS_BACKUP_PROPERTIES WHERE TAG_ID < ?
C_BACKUP_DELETE_MODULEMASTER_BYVERSION=DELETE FROM CMS_MODULE_BACKUP_MASTER WHERE TAG_ID < ?
C_BACKUP_DELETE_MODULEMEDIA_BYVERSION=DELETE FROM CMS_MODULE_BACKUP_MEDIA WHERE TAG_ID < ?

C_BACKUP_DELETE_STRUCTURE_BYBACKUPID=DELETE FROM CMS_BACKUP_STRUCTURE WHERE BACKUP_ID=?
C_BACKUP_DELETE_RESOURCES_BYBACKUPID=DELETE FROM CMS_BACKUP_RESOURCES WHERE BACKUP_ID=?
C_BACKUP_DELETE_FILES_BYBACKUPID=DELETE FROM CMS_BACKUP_FILES WHERE BACKUP_ID=?
C_BACKUP_DELETE_PROPERTIES_BYBACKUPID=DELETE FROM CMS_BACKUP_PROPERTIES WHERE BACKUP_ID=?


C_BACKUP_READ_BACKUPID_FOR_DELETION=SELECT BACKUP_ID FROM CMS_BACKUP_STRUCTURE WHERE \
	STRUCTURE_ID=? AND RESOURCE_ID=? AND VERSION_ID <=? AND TAG_ID < ? 

C_BACKUP_DELETE_RESOURCE=DELETE CMS_BACKUP_STRUCTURE.*,CMS_BACKUP_RESOURCES.*,CMS_BACKUP_FILES.* \
	FROM CMS_BACKUP_STRUCTURE,CMS_BACKUP_RESOURCES,CMS_BACKUP_FILES \
	WHERE CMS_BACKUP_STRUCTURE.STRUCTURE_ID=? AND CMS_BACKUP_STRUCTURE.TAG_ID=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE_BACKUP} AND ${C_JOIN_RESOURCE_FILE_BACKUP}

C_BACKUP_EXISTS_RESOURCE=SELECT CMS_BACKUP_RESOURCES.BACKUP_ID \
	FROM CMS_BACKUP_RESOURCES \
	WHERE CMS_BACKUP_RESOURCES.RESOURCE_ID=? AND CMS_BACKUP_RESOURCES.TAG_ID=?

#
# VFS Link Management
#
C_UPDATE_ALL_RESOURCE_FLAGS=UPDATE CMS_T_RESOURCES SET CMS_T_RESOURCES.RESOURCE_FLAGS = ?

C_SELECT_VFS_LINK_RESOURCES=SELECT CMS_T_RESOURCES.RESOURCE_ID,CMS_T_FILES.FILE_CONTENT,CMS_T_STRUCTURE.RESOURCE_NAME \
	FROM CMS_T_RESOURCES, CMS_T_FILES \
	WHERE CMS_T_RESOURCES.FILE_ID=CMS_T_FILES.FILE_ID AND CMS_T_RESOURCES.RESOURCE_TYPE = ?
	
C_SELECT_RESOURCE_ID=SELECT CMS_T_RESOURCES.RESOURCE_ID,CMS_T_RESOURCES.RESOURCE_TYPE \
	FROM CMS_T_RESOURCES \
	WHERE CMS_T_STRUCTURE.RESOURCE_NAME = ?

C_UPDATE_RESOURCE_FLAGS=UPDATE CMS_T_RESOURCES \
	SET CMS_T_RESOURCES.RESOURCE_FLAGS = ? \
	WHERE CMS_T_RESOURCES.RESOURCE_ID = ?

#
# Warning: Expects C_STATE_DELETED = 3 and all states >= 0 / <= 3
#
C_SELECT_NONDELETED_VFS_LINKS=SELECT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE CMS_T_RESOURCES.RESOURCE_ID=? AND CMS_T_STRUCTURE.STRUCTURE_STATE IN(0,1,2) \
	AND ${C_JOIN_STRUCTURE_RESOURCE} \
	ORDER BY CMS_T_STRUCTURE.RESOURCE_NAME ASC
	
C_SELECT_VFS_LINKS=SELECT ${C_RESOURCES_SELECT_ATTRIBS},CMS_T_RESOURCES.PROJECT_ID \
	FROM ${C_RESOURCES_SELECT_TABLES} \
	WHERE CMS_T_RESOURCES.RESOURCE_ID=? AND ${C_JOIN_STRUCTURE_RESOURCE} \
	ORDER BY CMS_T_STRUCTURE.RESOURCE_NAME ASC	
			
#
#	Access Control Entries
#
C_ACCESS_RESOURCE_ID=RESOURCE_ID
C_ACCESS_PRINCIPAL_ID=PRINCIPAL_ID
C_ACCESS_ACCESS_ALLOWED=ACCESS_ALLOWED
C_ACCESS_ACCESS_DENIED=ACCESS_DENIED
C_ACCESS_ACCESS_FLAGS=ACCESS_FLAGS
C_ACCESS_CREATE=INSERT INTO CMS_T_ACCESSCONTROL (RESOURCE_ID, PRINCIPAL_ID, ACCESS_ALLOWED, ACCESS_DENIED, ACCESS_FLAGS) \
	VALUES (?,?,?,?,?)
C_ACCESS_UPDATE=UPDATE CMS_T_ACCESSCONTROL \
	SET CMS_T_ACCESSCONTROL.ACCESS_ALLOWED = ?, CMS_T_ACCESSCONTROL.ACCESS_DENIED = ?, CMS_T_ACCESSCONTROL.ACCESS_FLAGS = ? \
	WHERE CMS_T_ACCESSCONTROL.RESOURCE_ID = ? \
	AND CMS_T_ACCESSCONTROL.PRINCIPAL_ID = ?
C_ACCESS_SETFLAGS_ALL=UPDATE CMS_T_ACCESSCONTROL \
	SET CMS_T_ACCESSCONTROL.ACCESS_FLAGS = CMS_T_ACCESSCONTROL.ACCESS_FLAGS + ? \
	WHERE CMS_T_ACCESSCONTROL.RESOURCE_ID = ?
C_ACCESS_RESETFLAGS_ALL=UPDATE CMS_T_ACCESSCONTROL \
	SET CMS_T_ACCESSCONTROL.ACCESS_FLAGS = CMS_T_ACCESSCONTROL.ACCESS_FLAGS - ? \
	WHERE CMS_T_ACCESSCONTROL.RESOURCE_ID = ?	
C_ACCESS_REMOVE=DELETE FROM CMS_T_ACCESSCONTROL \
	WHERE CMS_T_ACCESSCONTROL.RESOURCE_ID = ? \
	AND CMS_T_ACCESSCONTROL.PRINCIPAL_ID = ?
C_ACCESS_REMOVE_ALL=DELETE FROM CMS_T_ACCESSCONTROL \
	WHERE CMS_T_ACCESSCONTROL.RESOURCE_ID = ?
C_ACCESS_READ_ENTRY=SELECT RESOURCE_ID, PRINCIPAL_ID, ACCESS_ALLOWED, ACCESS_DENIED, ACCESS_FLAGS FROM CMS_T_ACCESSCONTROL \
	WHERE CMS_T_ACCESSCONTROL.RESOURCE_ID = ? \
	AND CMS_T_ACCESSCONTROL.PRINCIPAL_ID = ?
C_ACCESS_READ_ENTRIES=SELECT RESOURCE_ID, PRINCIPAL_ID, ACCESS_ALLOWED, ACCESS_DENIED, ACCESS_FLAGS FROM CMS_T_ACCESSCONTROL \
	WHERE CMS_T_ACCESSCONTROL.RESOURCE_ID = ?
	
C_SELECT_PROJECTS_FOR_PATH=SELECT CMS_PROJECTRESOURCES.PROJECT_ID,CMS_PROJECTRESOURCES.RESOURCE_NAME \
	FROM CMS_PROJECTRESOURCES WHERE INSTR(?,CMS_PROJECTRESOURCES.RESOURCE_NAME)>0 \
	AND CMS_PROJECTRESOURCES.PROJECT_ID IN (?, 1) \
	ORDER BY CMS_PROJECTRESOURCES.PROJECT_ID DESC
		
C_SELECT_PUBLISHED_RESOURCES=SELECT STRUCTURE_ID,RESOURCE_ID,CONTENT_ID,RESOURCE_NAME,RESOURCE_STATE,RESOURCE_TYPE,SIBLING_COUNT,MASTER_ID,CONTENT_DEFINITION_NAME,TAG_ID \
	FROM CMS_PUBLISH_HISTORY \
	WHERE PUBLISH_ID=? \
	ORDER BY RESOURCE_TYPE ASC, RESOURCE_STATE ASC, RESOURCE_NAME ASC

C_DELETE_PUBLISH_HISTORY=DELETE FROM CMS_PUBLISH_HISTORY \
	WHERE TAG_ID>=0 AND TAG_ID<?
	
# Static export

C_STATICEXPORT_WRITE_PUBLISHED_RESOURCES = INSERT INTO CMS_PUBLISHED_RESOURCES \
  (PUBLISHED_ID,RESOURCE_NAME, LINK_TYPE, LINK_PARAMETER, LINK_TIMESTAMP) \
   VALUES (?,?,?,?,?)
   
C_STATICEXPORT_READ_PUBLISHED_RESOURCES = SELECT COUNT(*) FROM CMS_PUBLISHED_RESOURCES \
  WHERE RESOURCE_NAME = ?    
	
C_STATICEXPORT_DELETE_PUBLISHED_RESOURCES = DELETE FROM CMS_PUBLISHED_RESOURCES \
  WHERE RESOURCE_NAME = ? AND LINK_TYPE = ? AND LINK_PARAMETER=?	

C_STATICEXPORT_DELETE_ALL_PUBLISHED_RESOURCES = DELETE FROM CMS_PUBLISHED_RESOURCES \
  WHERE LINK_TYPE = ? 	

C_STATICEXPORT_READ_ALL_PUBLISHED_RESOURCES = SELECT RESOURCE_NAME FROM CMS_PUBLISHED_RESOURCES \
 WHERE LINK_TYPE = ? AND LINK_TIMESTAMP >= ? 
 
C_STATICEXPORT_READ_PUBLISHED_RESOURCES_PARAMETERS = SELECT LINK_PARAMETER FROM CMS_PUBLISHED_RESOURCES \
  WHERE RESOURCE_NAME = ?
  
	