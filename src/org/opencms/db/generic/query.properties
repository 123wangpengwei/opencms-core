#
# The pattern _${PROJECT}_ in table names is replaced by the SqlManager with 
# "_ONLINE_" or "_OFFLINE_" to choose the right database tables for
# SQL queries that are project dependent!
#

#
# Project table attribs
#
C_PROJECTS_PROJECT_ID=PROJECT_ID
C_PROJECTS_USER_ID=USER_ID
C_PROJECTS_GROUP_ID=GROUP_ID
C_PROJECTS_MANAGERGROUP_ID=MANAGERGROUP_ID
C_PROJECTS_TASK_ID=TASK_ID
C_PROJECTS_PROJECT_NAME=PROJECT_NAME
C_PROJECTS_PROJECT_DESCRIPTION=PROJECT_DESCRIPTION
C_PROJECTS_PROJECT_FLAGS=PROJECT_FLAGS
C_PROJECTS_DATE_CREATED=DATE_CREATED
C_PROJECTS_PROJECT_TYPE=PROJECT_TYPE

C_PROJECTS_RECORD=\
	PROJECT_ID,\
	USER_ID,\
	GROUP_ID,\
	MANAGERGROUP_ID,\
	TASK_ID,\
	PROJECT_NAME,\
	PROJECT_DESCRIPTION,\
	PROJECT_FLAGS,\
	DATE_CREATED,\
	PROJECT_TYPE

	
#
# Project queries
#
C_PROJECTS_CREATE=\
INSERT INTO CMS_PROJECTS \
	(PROJECT_ID,\
	USER_ID,\
	GROUP_ID,\
	MANAGERGROUP_ID,\
	TASK_ID,\
	PROJECT_NAME,\
	PROJECT_DESCRIPTION,\
	PROJECT_FLAGS,\
	DATE_CREATED,\
	PROJECT_TYPE)\
VALUES \
	(?,?,?,?,?,?,?,?,?,?)
	
C_PROJECTS_WRITE=\
UPDATE \
	CMS_PROJECTS \
SET \
	PROJECT_DESCRIPTION=?,\
	GROUP_ID=?,\
	MANAGERGROUP_ID=?,\
	PROJECT_FLAGS=?,\
	PROJECT_TYPE=? \
WHERE \
	PROJECT_ID=?
	
C_PROJECTS_READ=\
SELECT \
	PROJECT_ID,\
	PROJECT_NAME,\
	PROJECT_DESCRIPTION,\
	TASK_ID,\
	USER_ID,\
	GROUP_ID,\
	MANAGERGROUP_ID,\
	PROJECT_FLAGS,\
	DATE_CREATED,\
	PROJECT_TYPE \
FROM \
	CMS_PROJECTS \
WHERE \
	PROJECT_ID=? \
ORDER BY \
	PROJECT_NAME


C_PROJECTS_READ_BYTASK=\
SELECT \
	PROJECT_ID,\
	PROJECT_NAME,\
	PROJECT_DESCRIPTION,\
	TASK_ID,\
	USER_ID,\
	GROUP_ID,\
	MANAGERGROUP_ID,\
	PROJECT_FLAGS,\
	DATE_CREATED,\
	PROJECT_TYPE \
FROM \
	CMS_PROJECTS \
WHERE \
	TASK_ID=? \
ORDER BY \
	PROJECT_NAME
	
	
C_PROJECTS_READ_BYUSER=\
SELECT \
	PROJECT_ID,\
	PROJECT_NAME,\
	PROJECT_DESCRIPTION,\
	TASK_ID,\
	USER_ID,\
	GROUP_ID,\
	MANAGERGROUP_ID,\
	PROJECT_FLAGS,\
	DATE_CREATED,\
	PROJECT_TYPE \
FROM \
	CMS_PROJECTS \
WHERE \
	USER_ID=? \
	AND PROJECT_FLAGS=0 \
ORDER BY \
	PROJECT_NAME
	
	
C_PROJECTS_READ_BYGROUP=\
SELECT \
	PROJECT_ID,\
	PROJECT_NAME,\
	PROJECT_DESCRIPTION,\
	TASK_ID,\
	USER_ID,\
	GROUP_ID,\
	MANAGERGROUP_ID,\
	PROJECT_FLAGS,\
	DATE_CREATED,\
	PROJECT_TYPE \
FROM \
	CMS_PROJECTS \
WHERE \
	(GROUP_ID=? OR MANAGERGROUP_ID=?) \
	AND PROJECT_FLAGS=0 \
ORDER BY \
	PROJECT_NAME
	
	
C_PROJECTS_READ_BYFLAG=\
SELECT \
	PROJECT_ID,\
	PROJECT_NAME,\
	PROJECT_DESCRIPTION,\
	TASK_ID,\
	USER_ID,\
	GROUP_ID,\
	MANAGERGROUP_ID,\
	PROJECT_FLAGS,\
	DATE_CREATED,\
	PROJECT_TYPE \
FROM \
	CMS_PROJECTS \
WHERE \
	PROJECT_FLAGS=? \
ORDER BY \
	PROJECT_NAME
	
	
C_PROJECTS_READ_BYMANAGER=\
SELECT \
	PROJECT_ID,\
	PROJECT_NAME,\
	PROJECT_DESCRIPTION,\
	TASK_ID,\
	USER_ID,\
	GROUP_ID,\
	MANAGERGROUP_ID,\
	PROJECT_FLAGS,\
	DATE_CREATED,\
	PROJECT_TYPE \
FROM \
	CMS_PROJECTS \
WHERE \
	MANAGERGROUP_ID=? \
                          AND PROJECT_FLAGS=0 \
ORDER BY \
	PROJECT_NAME
                    
                    
C_PROJECTS_READ_BYNAME=\
SELECT \
	PROJECT_ID,\
	PROJECT_NAME,\
	PROJECT_DESCRIPTION,\
	TASK_ID,\
	USER_ID,\
	GROUP_ID,\
	MANAGERGROUP_ID,\
	PROJECT_FLAGS,\
	DATE_CREATED,\
	PROJECT_TYPE \
FROM \
	CMS_PROJECTS \
WHERE \
	PROJECT_NAME=? \
ORDER BY \
	PROJECT_NAME                          
                    
	
C_PROJECTS_DELETE=\
DELETE FROM \
	CMS_PROJECTS \
WHERE \
	PROJECT_ID=?
                 
                    
C_RESOURCES_UNMARK=\
UPDATE \
	CMS_OFFLINE_RESOURCES \
SET \
	PROJECT_LASTMODIFIED=0 \
WHERE \
	PROJECT_LASTMODIFIED=?
                    
                    
#
# Project history queries
#
C_PROJECTS_CREATE_BACKUP=\
INSERT INTO CMS_BACKUP_PROJECTS \
	(PUBLISH_TAG,\
	PROJECT_ID,\
	PROJECT_NAME,\
	PROJECT_PUBLISHDATE,\
	PROJECT_PUBLISHED_BY,\
	PROJECT_PUBLISHED_BY_NAME,\
	USER_ID,\
	USER_NAME,\
	GROUP_ID,\
	GROUP_NAME,\
	MANAGERGROUP_ID,\
	MANAGERGROUP_NAME,\
	PROJECT_DESCRIPTION,\
	DATE_CREATED,\
	PROJECT_TYPE,\
	TASK_ID) \
VALUES \
	(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
                         
                         
C_PROJECTS_READBYVERSION_BACKUP=\
SELECT \
	PUBLISH_TAG,\
	PROJECT_ID,\
	PROJECT_NAME,\
	PROJECT_PUBLISHDATE,\
	PROJECT_PUBLISHED_BY,\
	PROJECT_PUBLISHED_BY_NAME,\
	USER_ID,\
	USER_NAME,\
	GROUP_ID,\
	GROUP_NAME,\
	MANAGERGROUP_ID,\
	MANAGERGROUP_NAME,\
	PROJECT_DESCRIPTION,\
	DATE_CREATED,\
	PROJECT_TYPE,\
	TASK_ID \
FROM \
	CMS_BACKUP_PROJECTS \
WHERE \
	PUBLISH_TAG=?
                         
                                 
C_PROJECTS_READLAST_BACKUP=\
SELECT \
	PUBLISH_TAG,\
	PROJECT_ID,\
	PROJECT_NAME,\
	PROJECT_PUBLISHDATE,\
	PROJECT_PUBLISHED_BY,\
	PROJECT_PUBLISHED_BY_NAME,\
	PROJECT_DESCRIPTION,\
	TASK_ID,\
	USER_ID,\
	USER_NAME,\
	GROUP_ID,\
	GROUP_NAME,\
	MANAGERGROUP_ID,\
	MANAGERGROUP_NAME,\
	DATE_CREATED,\
	PROJECT_TYPE \
FROM \
	CMS_BACKUP_PROJECTS \
ORDER BY \
	PUBLISH_TAG DESC
    
                         
C_PROJECTRESOURCES_CREATE_BACKUP=\
INSERT INTO CMS_BACKUP_PROJECTRESOURCES \
	(PUBLISH_TAG,\
	PROJECT_ID,\
	RESOURCE_PATH) \
VALUES \
	(?,?,?)
                           
                                 
C_PROJECTRESOURCES_READ_BACKUP=\
SELECT \
	RESOURCE_PATH \
FROM \
	CMS_BACKUP_PROJECTRESOURCES \
WHERE \
	PUBLISH_TAG=?
	
	
#
# Project resource queries
#
C_PROJECTRESOURCES_CREATE=\
INSERT INTO CMS_PROJECTRESOURCES \
	(PROJECT_ID,RESOURCE_PATH) \
VALUES \
	(?,?)


C_PROJECTRESOURCES_DELETE=\
DELETE FROM \
	CMS_PROJECTRESOURCES \
WHERE \
	PROJECT_ID=? \
	AND RESOURCE_PATH=?
                          
                          
C_PROJECTRESOURCES_DELETEALL=\
DELETE FROM \
	CMS_PROJECTRESOURCES \
WHERE \
	PROJECT_ID=?

	
C_PROJECTRESOURCES_READ=\
SELECT \
	RESOURCE_PATH \
FROM \
	CMS_PROJECTRESOURCES \
WHERE \
	PROJECT_ID=? \
	AND RESOURCE_PATH=?
	
	
C_PROJECTRESOURCES_READ_BY_ID=\
SELECT \
	RESOURCE_PATH \
FROM \
	CMS_PROJECTRESOURCES \
WHERE \
	PROJECT_ID=?
	
						   
#
# Database table attribs required to create a valid resource instance
#
C_RESOURCES_RESOURCE_ID=RESOURCE_ID
C_RESOURCES_STRUCTURE_ID=STRUCTURE_ID
C_RESOURCES_BACKUP_ID=BACKUP_ID
C_RESOURCES_PUBLISH_TAG=PUBLISH_TAG
C_RESOURCES_VERSION_ID=VERSION_ID
C_RESOURCES_RESOURCE_TYPE=RESOURCE_TYPE
C_RESOURCES_RESOURCE_FLAGS=RESOURCE_FLAGS
C_RESOURCES_CONTENT_ID=CONTENT_ID
C_RESOURCES_RESOURCE_PATH=RESOURCE_PATH
C_RESOURCES_USER_NAME=USER_NAME
C_RESOURCES_GROUP_NAME=GROUP_NAME
C_RESOURCES_PROJECT_LASTMODIFIED=PROJECT_LASTMODIFIED
C_PROJECT_ID_RESOURCES=CMS_OFFLINE_RESOURCES.PROJECT_LASTMODIFIED
C_RESOURCE_FLAGS=RESOURCE_FLAGS
C_RESOURCES_STATE=RESOURCE_STATE
C_RESOURCES_DATE_CREATED=DATE_CREATED
C_RESOURCES_DATE_LASTMODIFIED=DATE_LASTMODIFIED
C_RESOURCES_DATE_RELEASED=DATE_RELEASED
C_RESOURCES_DATE_EXPIRED=DATE_EXPIRED
C_RESOURCES_SIZE=RESOURCE_SIZE
C_RESOURCES_USER_CREATED=USER_CREATED
C_RESOURCES_USER_CREATED_NAME=USER_CREATED_NAME
C_RESOURCES_USER_LASTMODIFIED=USER_LASTMODIFIED
C_RESOURCES_LASTMODIFIED_BY_NAME=USER_LASTMODIFIED_NAME
C_RESOURCES_FILE_CONTENT=FILE_CONTENT
C_RESOURCES_STRUCTURE_STATE=STRUCTURE_STATE
C_RESOURCES_SIBLING_COUNT=SIBLING_COUNT

#
# these strings are used as replacements for ${XXX} patterns in SQL statements when the properties hash is loaded
#

# patterns for insert statements
C_TABLE_RESOURCES_ATTRIBS=\
	RESOURCE_ID,\
	RESOURCE_TYPE,\
	RESOURCE_FLAGS,\
	DATE_CREATED,\
	USER_CREATED,\
	DATE_LASTMODIFIED,\
	USER_LASTMODIFIED,\
	RESOURCE_STATE,\
	RESOURCE_SIZE,\
	PROJECT_LASTMODIFIED,\
	SIBLING_COUNT
C_TABLE_RESOURCES_VALUES=?,?,?,?,?,?,?,?,?,?,?

C_TABLE_STRUCTURE_ATTRIBS=\
	STRUCTURE_ID,\
	RESOURCE_ID,\
	RESOURCE_PATH,\
	STRUCTURE_STATE, \
	DATE_RELEASED, \
	DATE_EXPIRED
C_TABLE_STRUCTURE_VALUES=?,?,?,?,?,?

# patterns for statements to select resources/folders (= selections without content)
# THINGS TO KNOW: don't select the project-ID attrib. of the structure table per default!
# There are cases, where the project-ID attrib. of the project-resources tab. is used
# as the project-ID!
C_RESOURCES_SELECT_ATTRIBS=\
    CMS_${PROJECT}_STRUCTURE.STRUCTURE_ID,\
	CMS_${PROJECT}_STRUCTURE.RESOURCE_ID,\
	CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH,\
	CMS_${PROJECT}_STRUCTURE.STRUCTURE_STATE,\
	CMS_${PROJECT}_STRUCTURE.DATE_RELEASED,\
	CMS_${PROJECT}_STRUCTURE.DATE_EXPIRED,\
	CMS_${PROJECT}_RESOURCES.RESOURCE_ID,\
	CMS_${PROJECT}_RESOURCES.RESOURCE_TYPE,\
	CMS_${PROJECT}_RESOURCES.RESOURCE_FLAGS,\
	CMS_${PROJECT}_RESOURCES.RESOURCE_STATE,\
	CMS_${PROJECT}_RESOURCES.DATE_CREATED,\
	CMS_${PROJECT}_RESOURCES.DATE_LASTMODIFIED,\
	CMS_${PROJECT}_RESOURCES.USER_CREATED,\
	CMS_${PROJECT}_RESOURCES.USER_LASTMODIFIED,\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED LOCKED_IN_PROJECT,\
	CMS_${PROJECT}_RESOURCES.RESOURCE_SIZE,\
	CMS_${PROJECT}_RESOURCES.SIBLING_COUNT
	
C_RESOURCES_SELECT_TABLES=CMS_${PROJECT}_STRUCTURE,CMS_${PROJECT}_RESOURCES

C_RESOURCES_SELECT_ATTRIBS_BACKUP=\
	CMS_BACKUP_STRUCTURE.BACKUP_ID, \
	CMS_BACKUP_STRUCTURE.PUBLISH_TAG, \
	CMS_BACKUP_STRUCTURE.VERSION_ID,\
	CMS_BACKUP_STRUCTURE.STRUCTURE_ID,\
	CMS_BACKUP_STRUCTURE.RESOURCE_PATH,\
	CMS_BACKUP_STRUCTURE.STRUCTURE_STATE,\
	CMS_BACKUP_STRUCTURE.DATE_RELEASED,\
	CMS_BACKUP_STRUCTURE.DATE_EXPIRED,\
	CMS_BACKUP_RESOURCES.RESOURCE_ID,\
	CMS_BACKUP_RESOURCES.RESOURCE_TYPE,\
	CMS_BACKUP_RESOURCES.RESOURCE_FLAGS,\
	CMS_BACKUP_RESOURCES.RESOURCE_STATE,\
	CMS_BACKUP_RESOURCES.DATE_CREATED,\
	CMS_BACKUP_RESOURCES.DATE_LASTMODIFIED,\
	CMS_BACKUP_RESOURCES.USER_CREATED,\
	CMS_BACKUP_RESOURCES.USER_LASTMODIFIED,\
	CMS_BACKUP_RESOURCES.PROJECT_LASTMODIFIED,\
	CMS_BACKUP_RESOURCES.RESOURCE_SIZE,\
	CMS_BACKUP_RESOURCES.SIBLING_COUNT,\
	CMS_BACKUP_RESOURCES.USER_CREATED_NAME,\
	CMS_BACKUP_RESOURCES.USER_LASTMODIFIED_NAME
	
C_RESOURCES_SELECT_TABLES_BACKUP=CMS_BACKUP_STRUCTURE,CMS_BACKUP_RESOURCES

#
# Patterns for statements to select files (= selections WITH content)
#
C_FILES_SELECT_ATTRIBS=\
CMS_${PROJECT}_STRUCTURE.*,\
CMS_${PROJECT}_RESOURCES.*,\
CMS_${PROJECT}_CONTENTS.CONTENT_ID,\
CMS_${PROJECT}_CONTENTS.FILE_CONTENT,\
CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED LOCKED_IN_PROJECT

C_FILES_SELECT_TABLES=\
CMS_${PROJECT}_STRUCTURE,\
CMS_${PROJECT}_RESOURCES,\
CMS_${PROJECT}_CONTENTS

C_FILES_SELECT_ATTRIBS_BACKUP=\
CMS_BACKUP_RESOURCES.*,\
CMS_BACKUP_STRUCTURE.*,\
CMS_BACKUP_CONTENTS.BACKUP_ID,\
CMS_BACKUP_CONTENTS.CONTENT_ID,\
CMS_BACKUP_CONTENTS.FILE_CONTENT,\
CMS_BACKUP_CONTENTS.PUBLISH_TAG,\
CMS_BACKUP_CONTENTS.VERSION_ID,\
CMS_BACKUP_RESOURCES.PROJECT_LASTMODIFIED LOCKED_IN_PROJECT

C_FILES_SELECT_TABLES_BACKUP=\
CMS_BACKUP_RESOURCES,\
CMS_BACKUP_STRUCTURE,\
CMS_BACKUP_CONTENTS

C_JOIN_STRUCTURE_RESOURCE=CMS_${PROJECT}_STRUCTURE.RESOURCE_ID=CMS_${PROJECT}_RESOURCES.RESOURCE_ID
C_JOIN_RESOURCE_STRUCTURE=CMS_${PROJECT}_RESOURCES.RESOURCE_ID=CMS_${PROJECT}_STRUCTURE.RESOURCE_ID
C_JOIN_RESOURCE_PROPERTY=CMS_${PROJECT}_STRUCTURE.RESOURCE_ID=CMS_${PROJECT}_PROPERTIES.RESOURCE_ID AND CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH=CMS_${PROJECT}_PROPERTIES.RESOURCE_PATH
C_JOIN_STRUCTURE_RESOURCE_BACKUP=CMS_BACKUP_STRUCTURE.RESOURCE_ID=CMS_BACKUP_RESOURCES.RESOURCE_ID AND CMS_BACKUP_STRUCTURE.BACKUP_ID=CMS_BACKUP_RESOURCES.BACKUP_ID
C_JOIN_RESOURCE_PROPERTY_BACKUP=CMS_BACKUP_STRUCTURE.RESOURCE_ID=CMS_BACKUP_PROPERTIES.RESOURCE_ID AND CMS_BACKUP_STRUCTURE.RESOURCE_PATH=CMS_BACKUP_PROPERTIES.RESOURCE_PATH

C_JOIN_RESOURCE_FILE=CMS_${PROJECT}_CONTENTS.RESOURCE_ID=CMS_${PROJECT}_RESOURCES.RESOURCE_ID
C_JOIN_RESOURCE_FILE_BACKUP=CMS_BACKUP_RESOURCES.RESOURCE_ID=CMS_BACKUP_CONTENTS.RESOURCE_ID AND CMS_BACKUP_RESOURCES.BACKUP_ID=CMS_BACKUP_CONTENTS.BACKUP_ID


#
# SQL statements
#
C_RESOURCES_WRITE=\
INSERT INTO CMS_${PROJECT}_RESOURCES \
	(${C_TABLE_RESOURCES_ATTRIBS}) \
VALUES \
	(${C_TABLE_RESOURCES_VALUES})


C_STRUCTURE_WRITE=\
INSERT INTO CMS_${PROJECT}_STRUCTURE \
	(${C_TABLE_STRUCTURE_ATTRIBS},PARENT_ID) \
VALUES \
	(${C_TABLE_STRUCTURE_VALUES},?)

	
C_RESOURCES_WRITE_BACKUP=\
INSERT INTO CMS_BACKUP_RESOURCES \
	(${C_TABLE_RESOURCES_ATTRIBS},\
	PUBLISH_TAG,\
	VERSION_ID,\
	BACKUP_ID,\
	USER_CREATED_NAME,\
	USER_LASTMODIFIED_NAME) \
VALUES \
	(${C_TABLE_RESOURCES_VALUES},?,?,?,?,?)
	
	
C_STRUCTURE_WRITE_BACKUP=\
INSERT INTO CMS_BACKUP_STRUCTURE \
	(${C_TABLE_STRUCTURE_ATTRIBS},\
	PUBLISH_TAG,\
	VERSION_ID,\
	BACKUP_ID) \
VALUES \
	(${C_TABLE_STRUCTURE_VALUES},?,?,?)


C_RESOURCES_WRITE_PUBLISH_HISTORY=\
INSERT INTO CMS_PUBLISH_HISTORY \
	(PUBLISH_TAG,\
	STRUCTURE_ID,\
	RESOURCE_ID,\
	RESOURCE_PATH,\
	RESOURCE_STATE,\
	RESOURCE_TYPE,\
	HISTORY_ID,\
	SIBLING_COUNT) \
VALUES \
	(?,?,?,?,?,?,?,?)
	
	
C_RESOURCES_UPDATE_RESOURCES=\
UPDATE \
	CMS_${PROJECT}_RESOURCES \
SET \
	RESOURCE_TYPE=?,\
	RESOURCE_FLAGS=?,\
	DATE_LASTMODIFIED=?,\
	USER_LASTMODIFIED=?,\
	RESOURCE_STATE=?,\
	RESOURCE_SIZE=?,\
	PROJECT_LASTMODIFIED=?,\
	SIBLING_COUNT=? \
WHERE \
	RESOURCE_ID=?
	
C_RESOURCES_TRANSFER_RESOURCE=\
UPDATE \
	CMS_${PROJECT}_RESOURCES \
SET \
	CMS_${PROJECT}_RESOURCES.USER_CREATED=?,\
	CMS_${PROJECT}_RESOURCES.USER_LASTMODIFIED=? \
WHERE \
	CMS_${PROJECT}_RESOURCES.RESOURCE_ID=?	
	
C_RESOURCES_UPDATE_STRUCTURE=\
UPDATE \
	CMS_${PROJECT}_STRUCTURE \
SET \
	RESOURCE_ID=?,\
	RESOURCE_PATH=?,\
	STRUCTURE_STATE=?, \
	DATE_RELEASED=?, \
	DATE_EXPIRED=?, \
	PARENT_ID=? \
WHERE \
	STRUCTURE_ID=?
	
	
C_RESOURCES_READ_ALL_VERSIONS_BACKUP=\
(SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS_BACKUP},\
	CMS_BACKUP_RESOURCES.PROJECT_LASTMODIFIED LOCKED_IN_PROJECT \
FROM \
	${C_RESOURCES_SELECT_TABLES_BACKUP} \
WHERE \
	CMS_BACKUP_STRUCTURE.RESOURCE_PATH=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE_BACKUP}) \
UNION \
(SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS_BACKUP},\
	CMS_BACKUP_RESOURCES.PROJECT_LASTMODIFIED LOCKED_IN_PROJECT \
FROM \
	${C_RESOURCES_SELECT_TABLES_BACKUP} \
WHERE \
	CMS_BACKUP_RESOURCES.RESOURCE_ID=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE_BACKUP}) \
ORDER BY \
	VERSION_ID, RESOURCE_PATH ASC


C_RESOURCES_READ_ALL_BACKUP=\
SELECT \
	${C_RESOURCES_SELECT_ATTRIBS_BACKUP},\
	CMS_BACKUP_RESOURCES.PROJECT_LASTMODIFIED LOCKED_IN_PROJECT \
FROM \
	${C_RESOURCES_SELECT_TABLES_BACKUP} \
WHERE \
	${C_JOIN_STRUCTURE_RESOURCE_BACKUP} \
ORDER BY \
	CMS_BACKUP_RESOURCES.VERSION_ID DESC
	
	
C_RESOURCES_READ_MAX_PUBLISH_TAG=\
SELECT \
	MAX(PUBLISH_TAG) \
FROM \
	CMS_BACKUP_RESOURCES \
WHERE \
	CMS_BACKUP_RESOURCES.RESOURCE_ID=?
	
	
C_RESOURCES_READ=\
SELECT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE} \
ORDER BY \
	CMS_${PROJECT}_STRUCTURE.STRUCTURE_STATE ASC
	
	
C_RESOURCES_READBYID=\
SELECT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_STRUCTURE.STRUCTURE_ID=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE}

C_RESOURCES_SELECT_STRUCTURE_ID=\
SELECT \
	COUNT(CMS_${PROJECT}_STRUCTURE.STRUCTURE_ID) \
FROM \
	CMS_${PROJECT}_STRUCTURE \
WHERE \
	CMS_${PROJECT}_STRUCTURE.STRUCTURE_ID=?	
		
		
C_RESOURCES_GET_SUBRESOURCES=\
SELECT \
	${C_RESOURCES_SELECT_ATTRIBS} \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_STRUCTURE.PARENT_ID=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE}
	
	
C_RESOURCES_GET_SUBRESOURCES_GET_FOLDERS=AND CMS_${PROJECT}_RESOURCES.RESOURCE_SIZE < 0
C_RESOURCES_GET_SUBRESOURCES_GET_FILES=AND CMS_${PROJECT}_RESOURCES.RESOURCE_SIZE >= 0

C_RESOURCES_READ_PARENT_STRUCTURE_ID=\
SELECT \
	CMS_${PROJECT}_STRUCTURE.STRUCTURE_ID \
FROM \
	CMS_${PROJECT}_STRUCTURE \
WHERE \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH=?	
		
		
C_RESOURCES_GET_RESOURCE_WITH_PROPERTYDEF=\
(SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	CMS_${PROJECT}_PROPERTIES, \
	CMS_${PROJECT}_RESOURCES, \
	CMS_${PROJECT}_STRUCTURE \
WHERE \
	CMS_${PROJECT}_PROPERTIES.PROPERTYDEF_ID = ? \
	AND CMS_${PROJECT}_PROPERTIES.PROPERTY_MAPPING_ID = CMS_${PROJECT}_RESOURCES.RESOURCE_ID \
	AND CMS_${PROJECT}_STRUCTURE.RESOURCE_ID = CMS_${PROJECT}_RESOURCES.RESOURCE_ID \
	AND CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH LIKE ?) \
UNION \
(SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	CMS_${PROJECT}_PROPERTIES, \
	CMS_${PROJECT}_STRUCTURE, \
	CMS_${PROJECT}_RESOURCES \
WHERE \
	CMS_${PROJECT}_PROPERTIES.PROPERTYDEF_ID = ? \
	AND CMS_${PROJECT}_PROPERTIES.PROPERTY_MAPPING_ID = CMS_${PROJECT}_STRUCTURE.STRUCTURE_ID \
	AND CMS_${PROJECT}_STRUCTURE.RESOURCE_ID = CMS_${PROJECT}_RESOURCES.RESOURCE_ID \
	AND CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH LIKE ?) \
ORDER BY RESOURCE_PATH DESC

C_RESOURCES_GET_RESOURCE_WITH_PROPERTYDEF_VALUE=\
(SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	CMS_${PROJECT}_PROPERTIES, \
	CMS_${PROJECT}_RESOURCES, \
	CMS_${PROJECT}_STRUCTURE \
WHERE \
	CMS_${PROJECT}_PROPERTIES.PROPERTYDEF_ID=? \
	AND CMS_${PROJECT}_PROPERTIES.PROPERTY_MAPPING_ID = CMS_${PROJECT}_RESOURCES.RESOURCE_ID \
	AND CMS_${PROJECT}_STRUCTURE.RESOURCE_ID = CMS_${PROJECT}_RESOURCES.RESOURCE_ID \
	AND CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH LIKE ? \
	AND CMS_${PROJECT}_PROPERTIES.PROPERTY_VALUE LIKE ?) \
UNION \
(SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	CMS_${PROJECT}_PROPERTIES, \
	CMS_${PROJECT}_STRUCTURE, \
	CMS_${PROJECT}_RESOURCES \
WHERE \
	CMS_${PROJECT}_PROPERTIES.PROPERTYDEF_ID = ? \
	AND CMS_${PROJECT}_PROPERTIES.PROPERTY_MAPPING_ID = CMS_${PROJECT}_STRUCTURE.STRUCTURE_ID \
	AND CMS_${PROJECT}_STRUCTURE.RESOURCE_ID = CMS_${PROJECT}_RESOURCES.RESOURCE_ID \
	AND CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH LIKE ? \
	AND CMS_${PROJECT}_PROPERTIES.PROPERTY_VALUE LIKE ?) \
ORDER BY RESOURCE_PATH DESC

C_RESOURCES_GET_RESOURCE_IN_PROJECT_WITH_STATE=\
SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE (\
	CMS_${PROJECT}_STRUCTURE.RESOURCE_ID=CMS_${PROJECT}_RESOURCES.RESOURCE_ID) \
	AND CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED = ? \
	AND \
	(\
		(\
			CMS_${PROJECT}_RESOURCES.RESOURCE_STATE=? \
			AND CMS_${PROJECT}_STRUCTURE.STRUCTURE_STATE<=?\
		)\
		OR \
		(\
			CMS_${PROJECT}_STRUCTURE.STRUCTURE_STATE=? \
			AND CMS_${PROJECT}_RESOURCES.RESOURCE_STATE<=?\
		)\
	) \
ORDER BY \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH ASC


C_RESOURCES_GET_RESOURCE_IN_PROJECT_WITHOUT_STATE=\
SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_ID=CMS_${PROJECT}_RESOURCES.RESOURCE_ID \
	AND CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED = ? \
	AND \
	(\
		CMS_${PROJECT}_RESOURCES.RESOURCE_STATE<>? \
		OR CMS_${PROJECT}_STRUCTURE.STRUCTURE_STATE<>?\
	)\
ORDER BY \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH ASC	
	
	
C_RESOURCES_GET_RESOURCE_IN_PROJECT_IGNORE_STATE=\
SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_ID=CMS_${PROJECT}_RESOURCES.RESOURCE_ID \
	AND CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED = ? \
ORDER BY \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH ASC	
		
		
C_RESOURCE_REPLACE=\
UPDATE \
	CMS_${PROJECT}_RESOURCES \
SET \
	RESOURCE_TYPE=?,\
	RESOURCE_SIZE=? \
WHERE \
	RESOURCE_ID=?


C_RESOURCES_UPDATE_SIBLING_COUNT=\
UPDATE \
	CMS_${PROJECT}_RESOURCES \
SET \
	SIBLING_COUNT=? \
WHERE \
	RESOURCE_ID=?
	
	
C_RESOURCES_UPDATE_FLAGS=\
UPDATE \
	CMS_${PROJECT}_RESOURCES \
SET \
	RESOURCE_FLAGS=? \
WHERE \
	RESOURCE_ID=?
	
	
C_RESOURCES_UPDATE_RESOURCE_STATE=\
UPDATE \
	CMS_${PROJECT}_RESOURCES \
SET \
	RESOURCE_STATE=?, \
    	PROJECT_LASTMODIFIED=? \
WHERE \
	RESOURCE_ID=?
	
	
C_RESOURCES_UPDATE_RESOURCE_STATELASTMODIFIED=\
UPDATE \
	CMS_${PROJECT}_RESOURCES \
SET \
	RESOURCE_STATE=?, \
        DATE_LASTMODIFIED=?, \
        USER_LASTMODIFIED=?, \
        PROJECT_LASTMODIFIED=? \
WHERE \
	RESOURCE_ID=?	

	
C_RESOURCES_UPDATE_STRUCTURE_STATE=\
UPDATE \
	CMS_${PROJECT}_STRUCTURE \
SET \
	STRUCTURE_STATE=? \
WHERE \
	STRUCTURE_ID=?
	
	
C_RESOURCES_UPDATE_RELEASE_EXPIRED=\
UPDATE \
	CMS_${PROJECT}_STRUCTURE \
SET \
	DATE_RELEASED=?, \
    	DATE_EXPIRED=? \
WHERE \
	STRUCTURE_ID=?	
	

C_RESOURCES_READ_RESOURCE_STATE=\
SELECT \
	CMS_${PROJECT}_RESOURCES.RESOURCE_STATE \
FROM \
	CMS_${PROJECT}_RESOURCES \
WHERE \
	CMS_${PROJECT}_RESOURCES.RESOURCE_ID=?
		
	
C_RESOURCES_COUNT_SIBLINGS=\
SELECT \
	COUNT(CMS_${PROJECT}_STRUCTURE.STRUCTURE_ID) \
FROM \
	CMS_${PROJECT}_STRUCTURE \
WHERE \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_ID=?

	
C_RESOURCES_DELETE_BY_RESOURCEID=\
DELETE FROM \
	CMS_${PROJECT}_RESOURCES \
WHERE \
	RESOURCE_ID=?
	
		
C_STRUCTURE_DELETE_BY_STRUCTUREID=\
DELETE FROM \
	CMS_${PROJECT}_STRUCTURE \
WHERE \
	STRUCTURE_ID=?


C_RESOURCES_UPDATE_PROJECT_LASTMODIFIED=\
UPDATE \
	CMS_${PROJECT}_RESOURCES \
SET \
	PROJECT_LASTMODIFIED=? \
WHERE \
	RESOURCE_ID=?	


C_RESOURCES_BACKUP_MAXTAG=\
SELECT \
	MAX(PUBLISH_TAG) \
FROM \
	CMS_BACKUP_PROJECTS


C_RESOURCES_BACKUP_MAXTAG_RESOURCE=\
SELECT \
	MAX(PUBLISH_TAG) \
FROM \
	CMS_BACKUP_STRUCTURE


C_RESOURCES_BACKUP_MAXVER=\
SELECT \
	MAX(VERSION_ID) \
FROM \
	CMS_BACKUP_STRUCTURE \
WHERE \
	RESOURCE_PATH = ?


C_RESOURCES_PROJECTVIEW=\
SELECT \
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED,\
	${C_RESOURCES_SELECT_ATTRIBS} \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED=? \
		AND ${C_JOIN_STRUCTURE_RESOURCE}

C_HISTORY_RESOURCE_MAX_BACKUP_VERSION=\
SELECT \
	MAX(CMS_BACKUP_STRUCTURE.VERSION_ID) \
FROM \
	CMS_BACKUP_STRUCTURE \
WHERE \
	CMS_BACKUP_STRUCTURE.RESOURCE_ID=? \

#
# General subtree selection statement
#
C_RESOURCES_READ_TREE=\
SELECT ${C_RESOURCES_SELECT_ATTRIBS},CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM ${C_RESOURCES_SELECT_TABLES} \
WHERE ${C_JOIN_RESOURCE_STRUCTURE}

#
# Selection criteria
#
C_RESOURCES_SELECT_BY_PROJECT_LASTMODIFIED=\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED=?
C_RESOURCES_SELECT_BY_PATH_PREFIX=\
	CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH LIKE ? ESCAPE '|'
C_RESOURCES_SELECT_BY_PARENT_UUID=\
	CMS_${PROJECT}_STRUCTURE.PARENT_ID = ?	
C_RESOURCES_SELECT_BY_RESOURCE_TYPE=\
	CMS_${PROJECT}_RESOURCES.RESOURCE_TYPE=?
C_RESOURCES_SELECT_BY_RESOURCE_STATE=\
	((CMS_${PROJECT}_STRUCTURE.STRUCTURE_STATE=? AND CMS_${PROJECT}_STRUCTURE.STRUCTURE_STATE >= CMS_${PROJECT}_RESOURCES.RESOURCE_STATE) OR \
	(CMS_${PROJECT}_RESOURCES.RESOURCE_STATE=? AND CMS_${PROJECT}_RESOURCES.RESOURCE_STATE >= CMS_${PROJECT}_STRUCTURE.STRUCTURE_STATE))
C_RESOURCES_SELECT_BY_DATE_LASTMODIFIED_AFTER=\
	CMS_${PROJECT}_RESOURCES.DATE_LASTMODIFIED >= ?
C_RESOURCES_SELECT_BY_DATE_LASTMODIFIED_BEFORE=\
	CMS_${PROJECT}_RESOURCES.DATE_LASTMODIFIED <= ?
C_STRUCTURE_SELECT_BY_DATE_EXPIRED_AFTER=\
	(CMS_${PROJECT}_STRUCTURE.DATE_EXPIRED != 0) AND (CMS_${PROJECT}_STRUCTURE.DATE_EXPIRED >= ?)
C_STRUCTURE_SELECT_BY_DATE_EXPIRED_BEFORE=\
	(CMS_${PROJECT}_STRUCTURE.DATE_EXPIRED != 0) AND (CMS_${PROJECT}_STRUCTURE.DATE_EXPIRED <= ?)
C_STRUCTURE_SELECT_BY_DATE_RELEASED_AFTER=\
	(CMS_${PROJECT}_STRUCTURE.DATE_RELEASED != 0) AND (CMS_${PROJECT}_STRUCTURE.DATE_RELEASED >= ?)
C_STRUCTURE_SELECT_BY_DATE_RELEASED_BEFORE=\
	(CMS_${PROJECT}_STRUCTURE.DATE_RELEASED != 0) AND (CMS_${PROJECT}_STRUCTURE.DATE_RELEASED <= ?)
C_RESOURCES_SELECT_ONLY_FOLDERS=\
	CMS_${PROJECT}_RESOURCES.RESOURCE_SIZE = -1
C_RESOURCES_SELECT_ONLY_FILES=\
	CMS_${PROJECT}_RESOURCES.RESOURCE_SIZE > -1
#
# Resources order
#
C_RESOURCES_ORDER_BY_PATH=\
	ORDER BY CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH

#
# Files
#
C_CONTENT_ID=CONTENT_ID

C_FILE_CONTENT=FILE_CONTENT


C_CONTENTS_WRITE=\
INSERT INTO CMS_${PROJECT}_CONTENTS (\
	CONTENT_ID,\
	RESOURCE_ID,\
	FILE_CONTENT) \
VALUES \
	(?,?,?)


C_CONTENTS_WRITE_BACKUP=\
INSERT INTO CMS_BACKUP_CONTENTS (\
	CONTENT_ID,\
	RESOURCE_ID,\
	FILE_CONTENT,\
	PUBLISH_TAG,\
	VERSION_ID,\
	BACKUP_ID) \
VALUES \
	(?,?,?,?,?,?)


C_CONTENTS_UPDATE=\
UPDATE \
	CMS_${PROJECT}_CONTENTS \
SET \
	FILE_CONTENT=? \
WHERE \
	RESOURCE_ID=?


C_FILES_READ=\
SELECT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_CONTENTS.CONTENT_ID,\
	CMS_${PROJECT}_CONTENTS.FILE_CONTENT,\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	${C_RESOURCES_SELECT_TABLES},\
	CMS_${PROJECT}_CONTENTS \
WHERE \
	${C_JOIN_RESOURCE_FILE} \
	AND ${C_JOIN_STRUCTURE_RESOURCE} \
	AND CMS_${PROJECT}_STRUCTURE.STRUCTURE_ID=?  \
ORDER BY \
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED DESC
	
	
C_FILES_READ_BACKUP=\
SELECT \
	${C_RESOURCES_SELECT_ATTRIBS_BACKUP},\
	CMS_BACKUP_CONTENTS.CONTENT_ID,\
	CMS_BACKUP_CONTENTS.FILE_CONTENT,\
	CMS_BACKUP_RESOURCES.PROJECT_LASTMODIFIED LOCKED_IN_PROJECT \
FROM \
	${C_RESOURCES_SELECT_TABLES_BACKUP},\
	CMS_BACKUP_CONTENTS \
WHERE \
	CMS_BACKUP_STRUCTURE.RESOURCE_PATH=? \
	AND CMS_BACKUP_STRUCTURE.PUBLISH_TAG=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE_BACKUP} \
	AND ${C_JOIN_RESOURCE_FILE_BACKUP}


C_FILE_CONTENT_DELETE=\
DELETE FROM \
	CMS_${PROJECT}_CONTENTS \
WHERE \
	RESOURCE_ID=?


#
# Propertydefinitions
#
C_PROPERTYDEF_ID=PROPERTYDEF_ID
C_PROPERTYDEF_NAME=PROPERTYDEF_NAME
C_PROPERTYDEF_PROPERTYDEF_MAPPING_TYPE=PROPERTYDEF_MAPPING_TYPE


C_PROPERTYDEF_READ=\
SELECT \
	* \
FROM \
	CMS_${PROJECT}_PROPERTYDEF \
WHERE \
	PROPERTYDEF_NAME=?	
	
C_PROPERTYDEF_READ_BACKUP=\
SELECT \
	* \
FROM \
	CMS_BACKUP_PROPERTYDEF \
WHERE \
	PROPERTYDEF_NAME=?
	
C_PROPERTYDEF_READALL=\
SELECT \
	* \
FROM \
	CMS_${PROJECT}_PROPERTYDEF	
	
C_PROPERTYDEF_CREATE=\
INSERT INTO CMS_${PROJECT}_PROPERTYDEF \
VALUES \
	(?,?)
	
	
C_PROPERTYDEF_CREATE_BACKUP=\
INSERT INTO CMS_BACKUP_PROPERTYDEF \
VALUES \
	(?,?)
	
	
C_PROPERTYDEF_DELETE=\
DELETE FROM \
	CMS_${PROJECT}_PROPERTYDEF \
WHERE \
	PROPERTYDEF_ID=?
	
	
C_PROPERTYDEF_DELETE_BACKUP=\
DELETE FROM \
	CMS_BACKUP_PROPERTYDEF \
WHERE \
	PROPERTYDEF_ID=?


#
# Properties
#
C_PROPERTY_VALUE=PROPERTY_VALUE
C_PROPERTY_RESOURCE_ID=RESOURCE_ID


C_PROPERTIES_READALL_COUNT=\
SELECT \
	COUNT(*) \
FROM \
	CMS_${PROJECT}_PROPERTIES \
WHERE \
	PROPERTYDEF_ID=?

	
C_PROPERTIES_UPDATE=\
UPDATE \
	CMS_${PROJECT}_PROPERTIES \
SET \
	PROPERTY_VALUE=? \
WHERE \
	PROPERTY_MAPPING_ID=? \
	AND PROPERTY_MAPPING_TYPE=? \
	AND PROPERTYDEF_ID=?

	
C_PROPERTIES_CREATE=\
INSERT INTO CMS_${PROJECT}_PROPERTIES \
	(PROPERTY_ID,\
	PROPERTYDEF_ID,\
	PROPERTY_MAPPING_ID,\
	PROPERTY_MAPPING_TYPE,\
	PROPERTY_VALUE) \
VALUES \
	(?,?,?,?,?)
	
	
C_PROPERTIES_CREATE_BACKUP=\
INSERT INTO CMS_BACKUP_PROPERTIES \
	(BACKUP_ID,\
	PROPERTY_ID,\
	PROPERTYDEF_ID,\
	PROPERTY_MAPPING_ID,\
	PROPERTY_MAPPING_TYPE,\
	PROPERTY_VALUE,\
	PUBLISH_TAG,\
	VERSION_ID) \
VALUES \
	(?,?,?,?,?,?,?,?)


C_PROPERTIES_READ=\
SELECT \
	CMS_${PROJECT}_PROPERTIES.PROPERTY_VALUE,\
	CMS_${PROJECT}_PROPERTIES.PROPERTY_MAPPING_TYPE \
FROM \
	CMS_${PROJECT}_PROPERTYDEF,\
	CMS_${PROJECT}_PROPERTIES \
WHERE \
	CMS_${PROJECT}_PROPERTYDEF.PROPERTYDEF_NAME=? \
    AND CMS_${PROJECT}_PROPERTIES.PROPERTYDEF_ID=CMS_${PROJECT}_PROPERTYDEF.PROPERTYDEF_ID \
	AND \
	(\
		CMS_${PROJECT}_PROPERTIES.PROPERTY_MAPPING_ID=? \
			OR \
		CMS_${PROJECT}_PROPERTIES.PROPERTY_MAPPING_ID=?\
	)
                     
                     
C_PROPERTIES_READALL=\
SELECT \
	CMS_${PROJECT}_PROPERTYDEF.PROPERTYDEF_NAME,\
	CMS_${PROJECT}_PROPERTIES.PROPERTY_VALUE,\
	CMS_${PROJECT}_PROPERTIES.PROPERTY_MAPPING_TYPE \
FROM \
	CMS_${PROJECT}_PROPERTYDEF,\
	CMS_${PROJECT}_PROPERTIES \
WHERE \
	(\
		CMS_${PROJECT}_PROPERTIES.PROPERTY_MAPPING_ID=? \
			OR \
		CMS_${PROJECT}_PROPERTIES.PROPERTY_MAPPING_ID=?\
	) \
	AND \
	(\
		CMS_${PROJECT}_PROPERTIES.PROPERTYDEF_ID=CMS_${PROJECT}_PROPERTYDEF.PROPERTYDEF_ID\
	)                     
                     
                     
C_PROPERTIES_READALL_BACKUP=\
SELECT \
	CMS_BACKUP_PROPERTYDEF.PROPERTYDEF_NAME, \
	CMS_BACKUP_PROPERTIES.PROPERTY_VALUE,\
	CMS_BACKUP_PROPERTIES.PROPERTY_MAPPING_TYPE \
FROM \
	CMS_BACKUP_PROPERTIES,\
	CMS_BACKUP_PROPERTYDEF \
WHERE \
	CMS_BACKUP_PROPERTIES.PROPERTYDEF_ID=CMS_BACKUP_PROPERTYDEF.PROPERTYDEF_ID \
	AND \
	(\
		CMS_BACKUP_PROPERTIES.PROPERTY_MAPPING_ID=? \
		OR CMS_BACKUP_PROPERTIES.PROPERTY_MAPPING_ID=?\
	) \
	AND CMS_BACKUP_PROPERTIES.PUBLISH_TAG=?
                            
	
C_PROPERTIES_DELETE_ALL_STRUCTURE_AND_RESOURCE_VALUES=\
DELETE FROM \
	CMS_${PROJECT}_PROPERTIES \
WHERE \
	(\
		PROPERTY_MAPPING_ID=? \
		AND PROPERTY_MAPPING_TYPE=?\
	) \
	OR \
	(\
		PROPERTY_MAPPING_ID=? \
		AND PROPERTY_MAPPING_TYPE=?\
	)
	
	
C_PROPERTIES_DELETE_ALL_VALUES_FOR_MAPPING_TYPE=\
DELETE FROM \
	CMS_${PROJECT}_PROPERTIES \
WHERE \
	PROPERTY_MAPPING_ID=? \
	AND PROPERTY_MAPPING_TYPE=?
	
	
C_PROPERTIES_DELETEALL_BACKUP=\
DELETE FROM \
	CMS_BACKUP_PROPERTIES \
WHERE \
	BACKUP_ID=? \
	AND PUBLISH_TAG=? \
	AND \
	(\
		(\
			PROPERTY_MAPPING_ID=? \
			AND PROPERTY_MAPPING_TYPE=?\
		) \
		OR \
		(\
			PROPERTY_MAPPING_ID=? \
			AND PROPERTY_MAPPING_TYPE=?\
		)\
	)


C_PROPERTIES_DELETE=\
DELETE FROM \
	CMS_${PROJECT}_PROPERTIES \
WHERE \
	PROPERTYDEF_ID=?  \
	AND PROPERTY_MAPPING_ID=? \
	AND PROPERTY_MAPPING_TYPE=?
	

#
# Groups
#
C_GROUPS_GROUP_ID=GROUP_ID
C_GROUPS_PARENT_GROUP_ID=PARENT_GROUP_ID
C_GROUPS_GROUP_NAME=GROUP_NAME
C_GROUPS_GROUP_DESCRIPTION=GROUP_DESCRIPTION
C_GROUPS_GROUP_FLAGS=GROUP_FLAGS


C_GROUPS_READGROUP=\
SELECT \
	* \
FROM \
	CMS_GROUPS \
WHERE \
	GROUP_NAME=?
	
	
C_GROUPS_READGROUP2=\
SELECT \
	* \
FROM \
	CMS_GROUPS \
WHERE \
	GROUP_ID=?
	
	
C_GROUPS_CREATEGROUP=\
INSERT INTO CMS_GROUPS \
VALUES \
	(?,?,?,?,?)
	
	
C_GROUPS_WRITEGROUP=\
UPDATE \
	CMS_GROUPS \
SET \
	GROUP_DESCRIPTION=?,\
	GROUP_FLAGS=?,\
	PARENT_GROUP_ID=? \
WHERE \
	GROUP_ID=?
	
	
C_GROUPS_DELETEGROUP=\
DELETE FROM \
	CMS_GROUPS \
WHERE \
	GROUP_NAME=?
	
	
C_GROUPS_GETGROUPS=\
SELECT \
	* \
FROM \
	CMS_GROUPS \
ORDER BY \
	GROUP_NAME
	
	
C_GROUPS_GETCHILD=\
SELECT \
	* \
FROM \
	CMS_GROUPS \
WHERE \
	PARENT_GROUP_ID=?
	
	
C_GROUPS_GETGROUPSOFUSER=\
SELECT \
	* \
FROM \
	CMS_GROUPS G,\
	CMS_GROUPUSERS GU \
WHERE \
	GU.USER_ID=? \
                         AND G.GROUP_ID=GU.GROUP_ID
	
	
C_GROUPS_ADDUSERTOGROUP=\
INSERT INTO CMS_GROUPUSERS \
	(GROUP_ID,\
	USER_ID,\
	GROUPUSER_FLAGS) \
VALUES \
	(?,?,?)
	
	
C_GROUPS_USERINGROUP=\
SELECT \
	* \
FROM \
	CMS_GROUPUSERS \
WHERE \
	GROUP_ID=? \
	AND USER_ID=?
	
	
C_GROUPS_GETUSERSOFGROUP=\
SELECT \
	U.USER_INFO,\
	U.USER_ID,\
	U.USER_NAME,\
	U.USER_PASSWORD,\
	U.USER_DESCRIPTION,\
	U.USER_FIRSTNAME,\
	U.USER_LASTNAME,\
	U.USER_EMAIL,\
	U.USER_LASTLOGIN,\
	U.USER_FLAGS,\
	U.USER_ADDRESS,\
	U.USER_TYPE \
FROM \
	CMS_GROUPS G, \
	CMS_USERS U, \
	CMS_GROUPUSERS GU \
WHERE \
	G.GROUP_NAME=? \
    AND U.USER_ID=GU.USER_ID \
    AND GU.GROUP_ID=G.GROUP_ID \
    AND U.USER_TYPE IN (?, 2)  \
ORDER BY \
	USER_NAME

	
C_GROUPS_REMOVEUSERFROMGROUP=\
DELETE FROM \
	CMS_GROUPUSERS \
WHERE \
	GROUP_ID=? \
	AND USER_ID=?


#
# Users
#
C_USERS_USER_ID=USER_ID
C_USERS_USER_NAME=USER_NAME
C_USERS_USER_PASSWORD=USER_PASSWORD
C_USERS_USER_DESCRIPTION=USER_DESCRIPTION
C_USERS_USER_FIRSTNAME=USER_FIRSTNAME
C_USERS_USER_LASTNAME=USER_LASTNAME
C_USERS_USER_LASTLOGIN=USER_LASTLOGIN
C_USERS_USER_FLAGS=USER_FLAGS
C_USERS_USER_INFO=USER_INFO
C_USERS_USER_ADDRESS=USER_ADDRESS
C_USERS_USER_TYPE=USER_TYPE
C_USERS_USER_EMAIL=USER_EMAIL



C_USERS_ADD=\
INSERT INTO CMS_USERS \
	(USER_ID,\
	USER_NAME,\
	USER_PASSWORD,\
	USER_DESCRIPTION,\
	USER_FIRSTNAME,\
	USER_LASTNAME,\
	USER_EMAIL,\
	USER_LASTLOGIN,\
	USER_FLAGS,\
	USER_INFO,\
	USER_ADDRESS,\
	USER_TYPE) \
VALUES \
	(?,?,?,?,?,?,?,?,?,?,?,?)
	
	
C_USERS_READ=\
SELECT \
	USER_INFO,\
	USER_ID,\
	USER_NAME,\
	USER_PASSWORD,\
	USER_DESCRIPTION,\
	USER_FIRSTNAME,\
	USER_LASTNAME,\
	USER_EMAIL,\
	USER_LASTLOGIN,\
	USER_FLAGS, \
	USER_ADDRESS,\
	USER_TYPE \
FROM \
	CMS_USERS \
WHERE \
	USER_NAME=? \
    AND USER_TYPE IN (?, 2)
	
	
C_USERS_READID=\
SELECT \
	USER_INFO,\
	USER_ID,\
	USER_NAME,\
	USER_PASSWORD,\
	USER_DESCRIPTION,\
	USER_FIRSTNAME,\
	USER_LASTNAME,\
	USER_EMAIL,\
	USER_LASTLOGIN,\
	USER_FLAGS,\
	USER_ADDRESS,\
	USER_TYPE \
FROM \
	CMS_USERS \
WHERE \
	USER_ID=?
	
	
C_USERS_READPW=\
SELECT \
	USER_INFO,\
	USER_ID,\
	USER_NAME,\
	USER_PASSWORD,\
	USER_DESCRIPTION,\
	USER_FIRSTNAME,\
	USER_LASTNAME,\
	USER_EMAIL,\
	USER_LASTLOGIN,\
	USER_FLAGS,\
	USER_ADDRESS,\
	USER_TYPE \
FROM \
	CMS_USERS \
WHERE \
	USER_NAME=? \
               AND USER_PASSWORD=?  \
               AND USER_TYPE IN (?, 2)
	
	
C_USERS_WRITE=\
UPDATE \
	CMS_USERS \
SET \
	USER_DESCRIPTION=?,\
	USER_FIRSTNAME=?,\
	USER_LASTNAME=?,\
	USER_EMAIL=?,\
	USER_LASTLOGIN=?,\
	USER_FLAGS=?,\
	USER_INFO=?,\
	USER_ADDRESS=?,\
	USER_TYPE=? \
WHERE \
	USER_ID=?
	
	
C_USERS_DELETE=\
DELETE FROM \
	CMS_USERS \
WHERE \
	USER_NAME=?
	
	
C_USERS_GETUSERS=\
SELECT \
	USER_INFO,\
	USER_ID,\
	USER_NAME,\
	USER_PASSWORD,\
	USER_DESCRIPTION,\
	USER_FIRSTNAME,\
	USER_LASTNAME,\
	USER_EMAIL,\
	USER_LASTLOGIN,\
	USER_FLAGS,\
	USER_ADDRESS,\
	USER_TYPE \
FROM \
	CMS_USERS \
WHERE \
	USER_TYPE=? \
ORDER BY \
	USER_NAME
	
	
C_USERS_SETPW=\
UPDATE \
	CMS_USERS \
SET \
	USER_PASSWORD=?  \
WHERE \
	USER_NAME=?
	
C_USERS_UPDATE_USERTYPE=\
UPDATE \
	CMS_USERS \
SET \
	USER_TYPE=? \
WHERE \
	USER_ID=?


#
# Tasks, Tasklog, Taskpar
#
C_TABLENAME_TASK=CMS_TASK
C_TABLENAME_TASKLOG=CMS_TASKLOG
C_TABLENAME_TASKTYPE=CMS_TASKTYPE
C_TABLENAME_TASKPAR=CMS_TASKPAR
C_ID=ID
C_TASK_ID=ID
C_TASK_NAME=NAME
C_TASK_STATE=STATE
C_TASK_ROOT=ROOT
C_TASK_PARENT=PARENT
C_TASK_TASKTYPE=TASKTYPEREF
C_TASK_INITIATORUSER=INITIATORUSERREF
C_TASK_ROLE=ROLEREF
C_TASK_AGENTUSER=AGENTUSERREF
C_TASK_ORIGINALUSER=ORIGINALUSERREF
C_TASK_STARTTIME=STARTTIME
C_TASK_WAKEUPTIME=WAKEUPTIME
C_TASK_TIMEOUT=TIMEOUT
C_TASK_ENDTIME=ENDTIME
C_TASK_PERCENTAGE=PERCENTAGE
C_TASK_PERMISSION=PERMISSION
C_TASK_PRIORITY=PRIORITYREF
C_TASK_ESCALATIONTYPE=ESCALATIONTYPEREF
C_TASK_HTMLLINK=HTMLLINK
C_TASK_MILESTONE=MILESTONEREF
C_TASK_AUTOFINISH=AUTOFINISH
C_LOG_ID=CMS_TASKLOG.ID
C_LOG_COMMENT=CMS_TASKLOG.COMENT
C_LOG_EXUSERNAME=CMS_TASKLOG.EXTERNALUSERNAME
C_LOG_STARTTIME=CMS_TASKLOG.STARTTIME
C_LOG_TASK=CMS_TASKLOG.TASKREF
C_LOG_USER=CMS_TASKLOG.USERREF
C_LOG_TYPE=CMS_TASKLOG.TYPE
C_TASKLOG_ID=ID
C_TASKLOG_COMMENT=COMENT
C_TASKLOG_EXUSERNAME=EXTERNALUSERNAME
C_TASKLOG_STARTTIME=STARTTIME
C_TASKLOG_TASK=TASKREF
C_TASKLOG_USER=USERREF
C_TASKLOG_TYPE=TYPE
C_PAR_ID=ID
C_PAR_NAME=PARNAME
C_PAR_VALUE=PARVALUE
C_PAR_TASK=REF
C_TASK_TYPE_FIELDS=AUTOFINISH, ESCALATIONTYPEREF, HTMLLINK, NAME, PERMISSION, PRIORITYREF, ROLEREF

C_TASK_FIELDS=AUTOFINISH,ENDTIME,ESCALATIONTYPEREF,ID,INITIATORUSERREF,MILESTONEREF,\
NAME,ORIGINALUSERREF,AGENTUSERREF,PARENT,PERCENTAGE,PERMISSION,PRIORITYREF,ROLEREF,ROOT,\
STARTTIME,STATE,TASKTYPEREF,TIMEOUT,WAKEUPTIME,HTMLLINK


C_TASK_CREATE=\
INSERT INTO CMS_TASK \
	(ID) \
VALUES \
	(?)
	
	
C_TASK_UPDATE=\
UPDATE \
	CMS_TASK \
SET \
	NAME=?,\
	STATE=?,\
	TASKTYPEREF=?,\
	ROOT=?,\
	PARENT=?,\
	INITIATORUSERREF=?,\
	ROLEREF=?,\
	AGENTUSERREF=?,\
	ORIGINALUSERREF=?,\
	STARTTIME=?,\
	WAKEUPTIME=?,\
	TIMEOUT=?,\
	ENDTIME=?,\
	PERCENTAGE=?,\
	PERMISSION=?,\
	PRIORITYREF=?,\
	ESCALATIONTYPEREF=?,\
	HTMLLINK=?,\
	MILESTONEREF=?,\
	AUTOFINISH=? \
WHERE \
	ID=?
	
	
C_TASK_READ=\
SELECT \
	AUTOFINISH,\
	ENDTIME,\
	ESCALATIONTYPEREF,\
	ID,\
	INITIATORUSERREF,\
	MILESTONEREF,\
	NAME,\
	ORIGINALUSERREF,\
	AGENTUSERREF,\
	PARENT,\
	PERCENTAGE,\
	PERMISSION,\
	PRIORITYREF,\
	ROLEREF,\
	ROOT,\
	STARTTIME,\
	STATE,\
	TASKTYPEREF,\
	TIMEOUT,\
	WAKEUPTIME,\
	HTMLLINK \
FROM \
	CMS_TASK \
WHERE \
	ID=?
	
	
C_TASK_END=\
UPDATE \
	CMS_TASK \
SET \
	STATE=4,\
	PERCENTAGE=?,\
	ENDTIME=? \
WHERE \
	ID=?
	
	
C_TASKLOG_WRITE=\
INSERT INTO CMS_TASKLOG \
	(ID,\
	TASKREF,\
	USERREF,\
	STARTTIME,\
	COMENT,\
	TYPE) \
VALUES \
	(?,?,?,?,?,?)
	
	
C_TASKLOG_READ=\
SELECT \
	* \
FROM \
	CMS_TASKLOG \
WHERE \
	ID=?
	
	
C_TASK_FIND_AGENT=\
SELECT \
	CMS_USERS.USER_ID \
FROM \
	CMS_GROUPUSERS,\
	CMS_USERS \
WHERE \
	GROUP_ID=? \
    AND CMS_GROUPUSERS.USER_ID=CMS_USERS.USER_ID \

C_TASK_FORWARD=\
UPDATE \
	CMS_TASK \
SET \
	ROLEREF=?,\
	AGENTUSERREF=?  \
WHERE \
	ID=?
	
	
C_TASKLOG_READ_LOGS=\
SELECT \
	* \
FROM \
	CMS_TASKLOG \
WHERE \
	TASKREF=? \
ORDER BY \
	STARTTIME
	
	
C_TASKLOG_READ_PPROJECTLOGS=\
SELECT \
	ID,\
	COMENT,\
	TASKREF,\
	USERREF,\
	STARTTIME,\
	TYPE,\
	EXTERNALUSERNAME \
FROM \
	CMS_TASKLOG,\
	CMS_TASK \
WHERE \
	TASKREF=CMS_TASK.ID \
                            AND CMS_TASK.ROOT=?  \
ORDER BY \
	STARTTIME


C_TASKPAR_TEST=\
SELECT \
	* \
FROM \
	CMS_TASKPAR \
WHERE \
	REF=? \
	AND PARNAME=?
	
	
C_TASKPAR_UPDATE=\
UPDATE \
	CMS_TASKPAR \
SET \
	PARVALUE=? \
WHERE \
	ID=?
	
	
C_TASKPAR_INSERT=\
INSERT INTO CMS_TASKPAR \
	(ID,\
	REF,\
	PARNAME,\
	PARVALUE) \
VALUES \
	(?,?,?,?)
	
	
C_TASKPAR_GET=\
SELECT \
	* \
FROM \
	CMS_TASKPAR \
WHERE \
	REF=? \
	AND PARNAME=?
	
	
C_TASK_GET_TASKTYPE=\
SELECT \
	ID \
FROM \
	CMS_TASKTYPE \
WHERE \
	NAME=?
	
	
C_TASKTYPE_UPDATE=\
UPDATE \
	CMS_TASKTYPE \
SET \
	AUTOFINISH=?,\
	ESCALATIONTYPEREF=?,\
	HTMLLINK=?,\
	NAME=?,\
	PERMISSION=?,\
	PRIORITYREF=?,\
	ROLEREF=? \
WHERE \
	ID=?
	
	
C_TASKTYPE_INSERT=\
INSERT INTO CMS_TASKTYPE \
	(AUTOFINISH,\
	ESCALATIONTYPEREF,\
	HTMLLINK,\
	ID,\
	NAME,\
	PERMISSION,\
	PRIORITYREF,\
	ROLEREF) \
VALUES \
	(?,?,?,?,?,?,?,?)
	

#
# Statements for cleaning the backup
#
C_BACKUP_READ_MAXVERSION=\
SELECT \
	MAX(PUBLISH_TAG) \
FROM \
	CMS_BACKUP_PROJECTS \
WHERE \
	PROJECT_PUBLISHDATE<?


C_BACKUP_DELETE_STRUCTURE_BYBACKUPID=\
DELETE FROM \
	CMS_BACKUP_STRUCTURE \
WHERE \
	BACKUP_ID=?


C_BACKUP_DELETE_RESOURCES_BYBACKUPID=\
DELETE FROM \
	CMS_BACKUP_RESOURCES \
WHERE \
	BACKUP_ID=?


C_BACKUP_DELETE_CONTENTS_BYBACKUPID=\
DELETE FROM \
	CMS_BACKUP_CONTENTS \
WHERE \
	BACKUP_ID=?

	
C_BACKUP_DELETE_PROPERTIES_BYBACKUPID=\
DELETE FROM \
	CMS_BACKUP_PROPERTIES \
WHERE \
	BACKUP_ID=?


C_BACKUP_READ_BACKUPID_FOR_DELETION=\
SELECT \
	BACKUP_ID \
FROM \
	CMS_BACKUP_STRUCTURE \
WHERE \
	STRUCTURE_ID=? \
	AND RESOURCE_ID=? \
	AND VERSION_ID<=? \
	AND PUBLISH_TAG<? 


C_BACKUP_DELETE_RESOURCE=\
DELETE \
	CMS_BACKUP_STRUCTURE.*,\
	CMS_BACKUP_RESOURCES.*,\
	CMS_BACKUP_CONTENTS.* \
FROM \
	CMS_BACKUP_STRUCTURE,\
	CMS_BACKUP_RESOURCES,\
	CMS_BACKUP_CONTENTS \
WHERE \
	CMS_BACKUP_STRUCTURE.STRUCTURE_ID=? \
	AND CMS_BACKUP_STRUCTURE.PUBLISH_TAG=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE_BACKUP} \
	AND ${C_JOIN_RESOURCE_FILE_BACKUP}
	

C_BACKUP_EXISTS_RESOURCE=\
SELECT \
	CMS_BACKUP_RESOURCES.BACKUP_ID \
FROM \
	CMS_BACKUP_RESOURCES \
WHERE \
	CMS_BACKUP_RESOURCES.RESOURCE_ID=? \
	AND CMS_BACKUP_RESOURCES.PUBLISH_TAG=?


#
# Warning: Expects C_STATE_DELETED = 3 and all states >= 0 / <= 3
#
C_SELECT_NONDELETED_VFS_SIBLINGS=\
SELECT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_RESOURCES.RESOURCE_ID=? \
	AND CMS_${PROJECT}_STRUCTURE.STRUCTURE_STATE IN(0,1,2) \
	AND ${C_JOIN_STRUCTURE_RESOURCE} \
ORDER BY \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH ASC
	
C_SELECT_VFS_SIBLINGS=\
SELECT \
	${C_RESOURCES_SELECT_ATTRIBS},\
	CMS_${PROJECT}_RESOURCES.PROJECT_LASTMODIFIED \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_RESOURCES.RESOURCE_ID=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE} \
ORDER BY \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH ASC	
			
#
#	Access Control Entries
#
C_ACCESS_RESOURCE_ID=RESOURCE_ID
C_ACCESS_PRINCIPAL_ID=PRINCIPAL_ID
C_ACCESS_ACCESS_ALLOWED=ACCESS_ALLOWED
C_ACCESS_ACCESS_DENIED=ACCESS_DENIED
C_ACCESS_ACCESS_FLAGS=ACCESS_FLAGS

C_ACCESS_CREATE=\
INSERT INTO CMS_${PROJECT}_ACCESSCONTROL \
	(RESOURCE_ID,\
	PRINCIPAL_ID,\
	ACCESS_ALLOWED,\
	ACCESS_DENIED,\
	ACCESS_FLAGS) \
VALUES \
	(?,?,?,?,?)
	
	
C_ACCESS_UPDATE=\
UPDATE \
	CMS_${PROJECT}_ACCESSCONTROL \
SET \
	ACCESS_ALLOWED=?,\
	ACCESS_DENIED=?,\
	ACCESS_FLAGS=? \
WHERE \
	RESOURCE_ID=? \
	AND PRINCIPAL_ID = ?
	
	
C_ACCESS_SETFLAGS_ALL=\
UPDATE \
	CMS_${PROJECT}_ACCESSCONTROL \
SET \
	ACCESS_FLAGS=ACCESS_FLAGS+? \
WHERE \
	RESOURCE_ID=?
	
	
C_ACCESS_REMOVE=\
DELETE FROM \
	CMS_${PROJECT}_ACCESSCONTROL \
WHERE \
	RESOURCE_ID=? \
	AND PRINCIPAL_ID = ?
	
	
C_ACCESS_REMOVE_ALL=\
DELETE FROM \
	CMS_${PROJECT}_ACCESSCONTROL \
WHERE \
	RESOURCE_ID=?
	
C_ACCESS_REMOVE_ALL_FOR_PRINCIPAL=\
DELETE FROM \
	CMS_OFFLINE_ACCESSCONTROL \
WHERE \
	PRINCIPAL_ID=?

C_ACCESS_REMOVE_ALL_FOR_PRINCIPAL_ONLINE=\
DELETE FROM \
	CMS_ONLINE_ACCESSCONTROL \
WHERE \
	PRINCIPAL_ID=?


	
C_ACCESS_READ_ENTRY=\
SELECT \
	RESOURCE_ID,\
	PRINCIPAL_ID,\
	ACCESS_ALLOWED,\
	ACCESS_DENIED,\
	ACCESS_FLAGS \
FROM \
	CMS_${PROJECT}_ACCESSCONTROL \
WHERE \
	CMS_${PROJECT}_ACCESSCONTROL.RESOURCE_ID=? \
	AND CMS_${PROJECT}_ACCESSCONTROL.PRINCIPAL_ID = ?
	
		
C_ACCESS_READ_ENTRIES=\
SELECT \
	RESOURCE_ID,\
	PRINCIPAL_ID,\
	ACCESS_ALLOWED,\
	ACCESS_DENIED,\
	ACCESS_FLAGS \
FROM \
	CMS_${PROJECT}_ACCESSCONTROL \
WHERE \
	CMS_${PROJECT}_ACCESSCONTROL.RESOURCE_ID=?

	
C_SELECT_PUBLISHED_RESOURCES=\
SELECT \
	STRUCTURE_ID,\
	RESOURCE_ID,\
	RESOURCE_PATH,\
	RESOURCE_STATE,\
	RESOURCE_TYPE,\
	SIBLING_COUNT,\
	PUBLISH_TAG \
FROM \
	CMS_PUBLISH_HISTORY \
WHERE \
	HISTORY_ID=? \
ORDER BY \
	RESOURCE_TYPE ASC,\
	RESOURCE_STATE ASC,\
	RESOURCE_PATH ASC

C_DELETE_PUBLISH_HISTORY=\
DELETE FROM \
	CMS_PUBLISH_HISTORY \
WHERE \
	PUBLISH_TAG>=0 \
	AND PUBLISH_TAG<?
	
	
#	
# Static export
#
C_STATICEXPORT_WRITE_PUBLISHED_LINKS=\
INSERT INTO CMS_STATICEXPORT_LINKS \
	(LINK_ID,\
	LINK_RFS_PATH,\
	LINK_TYPE,\
	LINK_PARAMETER,\
	LINK_TIMESTAMP) \
VALUES \
	(?,?,?,?,?)

   
C_STATICEXPORT_READ_PUBLISHED_RESOURCES=\
SELECT \
	COUNT(*) \
FROM \
	CMS_STATICEXPORT_LINKS \
WHERE \
	LINK_RFS_PATH=?    
	

C_STATICEXPORT_DELETE_PUBLISHED_LINKS=\
DELETE FROM \
	CMS_STATICEXPORT_LINKS \
WHERE \
	LINK_RFS_PATH=? \
	AND LINK_TYPE=? \
	AND LINK_PARAMETER=?	

 
C_STATICEXPORT_DELETE_ALL_PUBLISHED_LINKS=\
DELETE FROM \
	CMS_STATICEXPORT_LINKS \
WHERE \
	LINK_TYPE=? 	
  
C_STATICEXPORT_READ_ALL_PUBLISHED_LINKS=\
SELECT \
	LINK_RFS_PATH \
FROM \
	CMS_STATICEXPORT_LINKS \
WHERE \
	LINK_TYPE=? \
	AND LINK_TIMESTAMP>=? 
 
 
C_STATICEXPORT_READ_PUBLISHED_LINK_PARAMETERS=\
SELECT \
	LINK_PARAMETER \
FROM \
	CMS_STATICEXPORT_LINKS \
WHERE \
	LINK_RFS_PATH=?

C_SELECT_RESOURCES_FOR_PRINCIPAL_ATTR=\
(SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS} \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_RESOURCES.USER_CREATED=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE}) \
UNION \
(SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS} \
FROM \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_RESOURCES.USER_LASTMODIFIED=? \
	AND ${C_JOIN_STRUCTURE_RESOURCE}) 
	
C_SELECT_RESOURCES_FOR_PRINCIPAL_ACE=\
SELECT DISTINCT \
	${C_RESOURCES_SELECT_ATTRIBS} \
FROM \
	CMS_${PROJECT}_ACCESSCONTROL, \
	${C_RESOURCES_SELECT_TABLES} \
WHERE \
	CMS_${PROJECT}_ACCESSCONTROL.PRINCIPAL_ID=? \
	AND CMS_${PROJECT}_ACCESSCONTROL.RESOURCE_ID=CMS_${PROJECT}_RESOURCES.RESOURCE_ID \
	AND ${C_JOIN_STRUCTURE_RESOURCE} \
ORDER BY \
	CMS_${PROJECT}_STRUCTURE.RESOURCE_PATH ASC
	